str[0] = " "
str[1] = "Door"
str[2] = ""
str[3] = ""
str[4] = "Button"
str[5] = "Lever"
str[6] = "Vault"
str[7] = "Cabinet"
str[8] = "Switch"
str[9] = "Pillar"
str[10] = "Bookcase"
str[11] = ""
str[12] = ""
str[13] = ""
str[14] = "You Successfully disarm the trap"
str[15] = ""
str[16] = "Take a Drink"
str[17] = "Not Very Refreshing"
str[18] = "Refreshing"
str[19] = ""
str[20] = ""
str[21] = ""
str[22] = ""
str[23] = ""
str[24] = ""
str[25] = ""
str[26] = ""
str[27] = ""
str[28] = ""
str[29] = ""
str[30] = ""
str[31] = ""
str[32] = ""
str[33] = ""
str[34] = ""
str[35] = ""
str[36] = ""
str[37] = ""
str[38] = ""
str[39] = ""
str[40] = ""
str[41] = ""
str[42] = ""
str[43] = ""
str[44] = ""
str[45] = ""
str[46] = ""
str[47] = ""
str[48] = ""
str[49] = ""
str[50] = ""
str[51] = ""
str[52] = ""
str[53] = ""
str[54] = ""
str[55] = ""
str[56] = ""
str[57] = ""
str[58] = ""
str[59] = ""
str[60] = ""
str[61] = ""
str[62] = ""
str[63] = ""
str[64] = ""
str[65] = ""
str[66] = ""
str[67] = ""
str[68] = ""
str[69] = ""
str[70] = ""
str[71] = ""
str[72] = ""
str[73] = ""
str[74] = ""
str[75] = ""
str[76] = ""
str[77] = ""
str[78] = ""
str[79] = ""
str[80] = ""
str[81] = ""
str[82] = ""
str[83] = ""
str[84] = ""
str[85] = ""
str[86] = ""
str[87] = ""
str[88] = ""
str[89] = ""
str[90] = ""
str[91] = ""
str[92] = ""
str[93] = ""
str[94] = ""
str[95] = ""
str[96] = ""
str[97] = ""
str[98] = ""
str[99] = ""
str[100] = ""
str[101] = ""
str[102] = ""
str[103] = ""
str[104] = ""
str[105] = ""
str[106] = ""
str[107] = ""
str[108] = ""
str[109] = ""
str[110] = ""
str[111] = ""
str[112] = ""
str[113] = ""
str[114] = ""
str[115] = ""
str[116] = ""
str[117] = ""
str[118] = ""
str[119] = ""
str[120] = ""
str[121] = ""


event 1
      Hint = str[100]  -- ""

  0:  OnLoadMap  {}
  1:  SetMonGroupBit  {NPCGroup = 5, Bit = const.MonsterBits.Hostile, On = true}         -- "Generic Monster Group for Dungeons"
end

event 3
      Hint = str[1]  -- "Door"
  0:  SetDoorState  {Id = 3, State = 2}         -- switch state
end

event 4
      Hint = str[1]  -- "Door"
  0:  SetDoorState  {Id = 4, State = 2}         -- switch state
end

event 5
      Hint = str[1]  -- "Door"
  0:  SetDoorState  {Id = 1, State = 2}         -- switch state
end

event 6
      Hint = str[1]  -- "Door"
  0:  SetDoorState  {Id = 2, State = 2}         -- switch state
end

event 176
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 1}
end

event 177
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 2}
end

event 178
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 3}
end

event 179
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 4}
end

event 180
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 5}
end

event 181
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 6}
end

event 182
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 7}
end

event 183
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 8}
end

event 184
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 9}
end

event 185
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 10}
end

event 186
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 11}
end

event 187
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 12}
end

event 188
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 13}
end

event 189
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 14}
end

event 190
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 15}
end

event 191
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 16}
end

event 192
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 17}
end

event 193
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 18}
end

event 194
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 19}
end

event 195
      Hint = str[3]  -- ""
  0:  OpenChest  {Id = 0}
end

event 376
  0:  Cmp  {"QBits", Value = 27,   jump = 2}         -- "Find the lost meditation spot in the Dwarven Barrows."
  1:  Exit  {}

  2:  SpeakNPC  {NPC = 55}         -- "Bartholomew Hume"
end

event 377
  0:  ForPlayer  ("All")
  1:  Cmp  {"QBits", Value = 65,   jump = 5}         -- Barrow downs.   Returned the bones of the Dwarf King.  Arch Druid promo quest.
  2:  Cmp  {"QBits", Value = 54,   jump = 4}         -- "Retrieve the bones of the Dwarf King from the tunnels between Stone City and Nighon and place them in their proper resting place in the Barrow Downs, then return to Anthony Green in the Tularean Forest."
  3:  Exit  {}

  4:  Cmp  {"Inventory", Value = 626,   jump = 6}         -- "Zokarr IV's Skull"
  5:  Exit  {}

  6:  Subtract  {"Inventory", Value = 626}         -- "Zokarr IV's Skull"
  7:  Set  {"QBits", Value = 65}         -- Barrow downs.   Returned the bones of the Dwarf King.  Arch Druid promo quest.
  8:  ForPlayer  ("All")
  9:  Add  {"QBits", Value = 245}         -- "Congratulations"
  10: Subtract  {"QBits", Value = 245}         -- "Congratulations"
  11: Subtract  {"QBits", Value = 228}         -- Dwarf Bones - I lost it
end

event 451
      Hint = str[9]  -- "Pillar"
  0:  Set  {"MapVar0", Value = 1}
end

event 452
      Hint = str[9]  -- "Pillar"
  0:  Set  {"MapVar1", Value = 1}
end

event 453
      Hint = str[9]  -- "Pillar"
  0:  Set  {"MapVar2", Value = 1}
end

event 454
      Hint = str[9]  -- "Pillar"
  0:  Set  {"MapVar3", Value = 1}
end

event 455
      Hint = str[1]  -- "Door"
  0:  SetDoorState  {Id = 5, State = 2}         -- switch state
end

event 456
  0:  SetDoorState  {Id = 7, State = 0}
  1:  SetDoorState  {Id = 6, State = 0}
end

event 501
      Hint = str[2]  -- ""
  0:  RandomGoTo  {jumpA = 1, jumpB = 1, jumpC = 1, jumpD = 3, jumpE = 3, jumpF = 3}
  1:  MoveToMap  {X = 335, Y = -1064, Z = 1, Direction = 768, LookAngle = 0, SpeedZ = 0, HouseId = 0, Icon = 0, Name = "MDK02.blv"}
  2:  Exit  {}

  3:  MoveToMap  {X = -426, Y = 281, Z = -15, Direction = 1664, LookAngle = 0, SpeedZ = 0, HouseId = 0, Icon = 0, Name = "MDT02.blv"}
  4:  Exit  {}
end
