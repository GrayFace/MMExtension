<!DOCTYPE html>
<html lang="ru">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Справка MMExtension 2.2</title>

<style>
.def-table { margin:6px 0;border:1px solid #a5a5a5;border-collapse:collapse;width:100%; }
.def-caption { padding:4px 7px 7px; border:1px solid #a5a5a5; }
.def-left { width:350px;padding:4px 6px 5px; border:1px solid #a5a5a5;overflow-x:auto; }
.def-right { padding:4px 6px 5px; border:1px solid #a5a5a5;overflow-x:auto; }
.def-functions { padding:4px 7px 7px; border:1px solid #a5a5a5; }
.def-ver { color:rgb(153,0,0); }
.def-nbsp { white-space:pre-wrap; }
.def-const { position:relative;float:right;right:2px;display:inline-block; }
.def-h4 { display:inline; }
.def-h5 { display:inline; font-weight: inherit; font-size: inherit; }
.def-shadow { color:#a5a5a5; }
.def-codeblock { white-space:pre-wrap; font-family: monospace,monospace; font-size: 85%; margin: 0.7em 0 -0.8em 0.8em; }
.def-code { white-space:pre-wrap; font-family: monospace,monospace; font-size: 85%; }
.def-param { color:#079; }
.def-ib { font-weight: bold; }
.def-default { }
.def-hidden { display: none; }
.def-largs { margin: 0 0.25em 0 0.5em; }
.def-rargs { margin-left: 0.25em; }
.def-largs-i { margin: 0 0.2em 0 0.16em; }
.def-rargs-i { margin-left: 0.2em; }
.lua5-operator { font-weight: bold; color: #333; }
.lua5-note { font-weight: bold; color: #00D; }
.lua5-ctrl { font-weight: bold; color: Black; }
.lua5-std { color: Brown; }
.lua5-literal { font-weight: bold; color: #079; }
.lua5-str { color: #90A; }
.lua5-comment { color: #009000; }
.lua5-tab { display: inline-block; width: 2ch; }
.pre-outer { margin:7px -1px; overflow-x: auto; }
.pre { margin:0;border:1px solid #a5a5a5;padding:5px 7px 7px; white-space:pre-wrap; font-family: monospace,monospace; font-size: 85%; display:inline-block; }
.spoiler { margin:7px -1px; overflow-x: auto; border:1px solid #a5a5a5; }
.pre-spoiler { margin:0;padding:5px 7px 7px; white-space:pre-wrap; font-family: monospace,monospace; font-size: 85%; }
.abs { position:absolute;top:0; }
.spoiler-checkbox { display: none; }
.spoiler-label { display: none; }
.spoiler-fade { display: none; }
.table { margin:6px 0; border: 1px solid #888; border-collapse:collapse; }
.width-500 { min-width:70%;width:500px; }
</style>
<style>
	td {
		padding: 5px 6px;
		position: relative;
	}
	ul {
		list-style-type: none;
		margin-top: 0px;
		margin-bottom: 7px;
		padding-left: 20px;
		text-indent: -10px;
	}
	ul a {
		text-decoration: none;
	}
	ul a:link {
		color: black;
	}
	a:link:hover, a:visited:hover {
		background-color: #E8E8FF;
		border-radius: 4px;
	}
	a:link:active, a:visited:active {
		color: #d00;
	}
	
	.table tr:not(:first-of-type) td {
		border-top: 1px solid #a5a5a5;
	}
	.table td:not(:first-of-type) {
		border-left: 1px solid #a5a5a5;
	}
	
	body {
		padding: 0 0;
		margin: 0 0;
		background-color: #f3f5fd;
	}
	#content {
		padding: 0;
		margin: 5px 5px 5px 260px;
		border: 1px solid #ddd;
		background-color: white;
	}
	#content2 {
		padding: 0 17px;
	}
	h1 {
		padding: 10px 10px 10px 20px;
		margin: 3px 1px 15px;
		border-bottom: 3px double #dadade;
	}
	#toc {
		position: fixed;
		z-index: 10;
		width: 240px;
		top: 0;
		left: 0;
		bottom: 0;
		padding: 10px;
		overflow-y: scroll;
		background-color: white;
		border-right: 1px solid #ddd;
	}
	#toc > ul {
		margin-left: -10px;
	}
	#toc > h3 {
		margin-top: 5px;
		margin-bottom: 15px;
	}
	#uarr {
		display: none;
	}
	.toc-check, .info-hover, .info-trigger, #toc-trigger {
		display: none;
	}
	
</style>
<!--[if !IE]><!--><style>
	#content2 > h2, #content2 > h3 {
		display: table;
		padding: 3px 8px;
		border-radius: 10px;
		border: 1px solid rgba(0,0,0,0.25);
		box-shadow: 1px 1px 0 0 rgba(0,0,0,0.4);
		margin-left: -4px;
	}
	.toc-check, .info-hover {
		display: inline;
	}
	.toc-check-info {
		display: block;
		margin-bottom: -0.5em;
	}
	#toc-check:not(:checked) ~ .toc-check-info {
		display: none;
	}
	#toc:not(:hover):not(:active) {
		opacity: 0;
	}
	#toc-check:not(:checked) ~ #toc {
		opacity: 1;
		width: 240px;
		transition: opacity 0.25s;
	}
	#toc-check:checked ~ #toc {
		width: 249px;
		transition: opacity 0.25s, width 0s linear 0.25s;
	}
	#toc-check, #toc-label {
		cursor: pointer;
		line-height: 150%;
		font-size: 110%;
		color: #c00;
	}
	#toc-label {
		margin-left: -1em;
		padding-left: 1em;
		user-select: none;
	}
@media (pointer:none) {
	#toc:not(#a):not(#b) {
		overflow-y: visible;
		position: static;
		width: auto;
		padding: 20px 0;
		background-color: transparent;
		transition: none;
		opacity: 1;
		box-shadow: none;
	}
	.toc-check, .info-hover, .info-trigger, #toc-trigger:not(#a):not(#b) {
		display: none;
	}
}
@media (pointer:coarse) {
	#toc-check:checked ~ #toc {
		width: 245px;
		box-shadow: 0px 0px 5px 3px rgba(0,0,0,0.37), 1px 0px 2px 10px rgba(255,255,255,0.37);
	}
}
@media (max-width: 1000px), (pointer:none) {
	.info-hover {
		display: none;
	}
	.info-trigger {
		display: inline;
	}
	body {
		margin: unset;
		padding: unset;
		background-color: white;
	}
	#content {
		margin: 0;
		border: none;
		background-color: transparent;
	}
	#toc-check:not(:checked) ~ #toc {
		overflow-y: visible;
		position: static;
		left: -300px;
		width: auto;
		padding: 20px 0 0;
		background-color: transparent;
		transition: none;
		border-right: none;
	}
	#toc-check:checked ~ #toc {
		left: -300px;
		opacity: 0;
		width: 249px;
		transition: opacity 0.25s, left 0s linear 0.25s;
		box-shadow: 0px 0px 5px 3px rgba(0,0,0,0.43), 1px 0px 2px 10px rgba(255,255,255,0.43);
	}
	#toc-check:checked ~ #toc-trigger {
		display: block;
		position: fixed;
		left: -100px;
		top: 0;
		bottom: 0;
		width: 17px;
		padding: 0;
		z-index: 20;
		user-select: none;
		opacity: 0;
		transition: left 0s linear 0.05s;
	}
	#toc-check:checked ~ #toc-trigger:not(:focus) {
		cursor: pointer;
		left: 0;
		transition: none;
	}
	#toc-trigger:active ~ #toc, #toc-trigger:focus ~ #toc, #toc:not(#a):active {
		left: 0;
		opacity: 1;
		transition: opacity 0.25s;
	}
}
@media (max-width: 300px) {
	#toc-check:checked ~ #toc {
		width: calc(100% - 50px);
		margin-left: calc(20px - 100%);
	}
}
@media (max-width: 1100px) {
	.def-left {
		width: 40%;
	}
}
@media (max-width: 640px) {
	#content2 {
		padding: 0 13px;
	}
	h1 {
		padding: 10px 9px 10px 16px;
	}
	#content2 > h2, #content2 > h3 {
		margin-left: -2px;
	}
}
@media (max-width: 550px) {
	.width-500 {
		width: 100%;
		max-width: 500px;
	}
}
@media (max-width: 500px) {
	#content2 {
		padding: 0 8px;
	}
	h1 {
		padding: 10px 9px 10px 11px;
	}
	.def-left {
		width: auto;
		margin-right: 12px;
		border-color: #777;
	}
	.def-right {
		margin-left: 12px;
		border: none;
		border-left: 1px dotted #a5a5a5;
		padding-top: 0.25px;
		padding-bottom: 0;
		margin-top: 0.75px;
		margin-bottom: 4px;
	}
	.def-table, .def-table td:not(.def-left):not(.def-right) {
		border: none;
	}
	.def-table, .def-table tbody, .def-table tr, .def-table td {
		display: block;
	}
	.pre-outer, .spoiler {
		margin-left: -5px;
		margin-right: -5px;
	}
}
/* Spoilers */
	.spoiler {
		position: relative;
	}
	.spoiler-checkbox {
		display: inline-block;
		opacity: 0;
		position: absolute;
		left: 0;
		top: 0;
		pointer-events: none;
	}
	.spoiler-space, .spoiler-label {
		display: inline-block;
		margin: 8px;
		padding: 6px;
		border: 1px solid #ccc;
		border-radius: 4px;
		border-right-width: 2px;
		border-bottom-width: 2px;
	}
	.spoiler-space {
		float: right;
		visibility: hidden;
	}
	.spoiler-label {
		position: absolute;
		top: 0;
		right: 0;
		cursor: pointer;
		user-select: none;
		z-index: 1;
	}
	.spoiler-checkbox:focus ~ label {
		border-color: #b2c4ee;
	}
	.spoiler-label:active:hover, .spoiler-checkbox:active ~ label {
		border: 1px solid #b2c4ee;
		background-color: #f0f0f0;
	}
	.spoiler-checkbox:not(:checked) ~ label {
		color: #c00;
	}
	.spoiler-label::after, .spoiler-space::after {
		content: "Expand";
	}
	.spoiler-checkbox:checked ~ label::after, .spoiler-checkbox:checked ~ .spoiler-scroll .spoiler-space::after {
		content: "Collapse";
	}
	.spoiler-scroll {
		overflow-x: auto;
		overflow-y: visible;
		transition: opacity 0.15s;
	}
	.spoiler-checkbox:not(:checked) ~ .spoiler-scroll {
		max-height: 70px;
		overflow: hidden;
		opacity: 0.4;
	}
	.spoiler-checkbox:not(:checked) ~ .spoiler-fade {
		display: block;
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		height: 22px;
		pointer-events: none;
		background: linear-gradient(180deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.5) 30%, rgba(255,255,255,0.8) 70%, rgba(255,255,255,1) 90%);
	}
</style><!--<![endif]-->

</head>
<body>
	<div id="content">
		<h1>Справка MMExtension 2.2</h1>
		<div id="content2">
			<input type="checkbox" id="toc-check" class="toc-check" checked value=""/><label id="toc-label" class="toc-check" for="toc-check"><span class="info-hover">Показывать оглавление только когда на него наведена мышь.</span><span class="info-trigger">Показывать оглавление кликом по левому краю окна.</span></label>
			<div class="info-hover toc-check-info">
				Наведите мышь на пустое место слева, чтобы увидеть содержание.
			</div>
			<div id="toc-trigger" tabindex="0"></div>
			<div id="toc">
				<h3>Содержание</h3>
				<ul><li><a href="#General-Information">Общая информация</a><ul><li><a href="#Hello-world!">Привет мир!</a></li><li><a href="#Decompiled-Scripts">Декомпилированные скрипты</a></li><li><a href="#Short-functions-syntax">Сокращённый синтаксис объявления функций</a></li><li><a href="#Quests">Задания</a></li><li><a href="#Localization">Локализация</a></li><li><a href="#Known-Issues">Известные ошибки</a></li></ul></li><li><a href="#Examples">Примеры</a><ul><li><a href="#Players-Skills-And-Spells">Умения и заклинания игроков</a></li><li><a href="#Artifact-Bonuses">Бонусы артефактов</a></li><li><a href="#Spells-Damage">Урон заклинания</a></li><li><a href="#Controlling-monsters-aggression-in-MM6">Управление агрессией монстров в MM6</a></li><li><a href="#Flowers-you-can-pick-up-(MM8)">Цветы, которые можно подобрать (MM8)</a></li><li><a href="#Unusually-looking-barrels-(MM7)">Необычно выглядящие бочки (MM7)</a></li><li><a href="#Other-Examples">Еще примеры</a></li></ul></li><li><a href="#Evt-Commands">Evt Commands</a><ul><li><a href="#evt.EnterHouse">evt.EnterHouse</a></li><li><a href="#evt.PlaySound">evt.PlaySound</a></li><li><a href="#evt.MoveToMap">evt.MoveToMap</a></li><li><a href="#evt.OpenChest">evt.OpenChest</a></li><li><a href="#evt.FaceExpression">evt.FaceExpression</a></li><li><a href="#evt.DamagePlayer">evt.DamagePlayer</a></li><li><a href="#evt.SetSnow">evt.SetSnow</a></li><li><a href="#evt.SetTexture">evt.SetTexture</a></li><li><a href="#evt.SetTextureOutdoors">evt.SetTextureOutdoors</a></li><li><a href="#evt.ShowMovie">evt.ShowMovie</a></li><li><a href="#evt.SetSprite">evt.SetSprite</a></li><li><a href="#evt.Cmp">evt.Cmp</a></li><li><a href="#evt.SetDoorState">evt.SetDoorState</a></li><li><a href="#evt.Add">evt.Add</a></li><li><a href="#evt.Subtract">evt.Subtract</a></li><li><a href="#evt.Set">evt.Set</a></li><li><a href="#evt.SummonMonsters">evt.SummonMonsters</a></li><li><a href="#evt.CastSpell">evt.CastSpell</a></li><li><a href="#evt.SpeakNPC">evt.SpeakNPC</a></li><li><a href="#evt.SetFacetBit">evt.SetFacetBit</a></li><li><a href="#evt.SetFacetBitOutdoors">evt.SetFacetBitOutdoors</a></li><li><a href="#evt.SetMonsterBit">evt.SetMonsterBit</a></li><li><a href="#evt.Question">evt.Question</a></li><li><a href="#evt.StatusText">evt.StatusText</a></li><li><a href="#evt.SetMessage">evt.SetMessage</a></li><li><a href="#evt.SetLight">evt.SetLight</a></li><li><a href="#evt.SimpleMessage">evt.SimpleMessage</a></li><li><a href="#evt.SummonObject">evt.SummonObject</a></li><li><a href="#evt.ForPlayer">evt.ForPlayer</a></li><li><a href="#evt.SetNPCTopic">evt.SetNPCTopic</a></li><li><a href="#evt.MoveNPC">evt.MoveNPC</a></li><li><a href="#evt.GiveItem">evt.GiveItem</a></li><li><a href="#evt.ChangeEvent">evt.ChangeEvent</a></li><li><a href="#evt.CheckSkill">evt.CheckSkill</a></li><li><a href="#evt.SetNPCGroupNews">evt.SetNPCGroupNews</a></li><li><a href="#evt.SetMonsterGroup">evt.SetMonsterGroup</a></li><li><a href="#evt.SetNPCItem">evt.SetNPCItem</a></li><li><a href="#evt.SetNPCGreeting">evt.SetNPCGreeting</a></li><li><a href="#evt.CheckMonstersKilled">evt.CheckMonstersKilled</a></li><li><a href="#evt.ChangeGroupToGroup">evt.ChangeGroupToGroup</a></li><li><a href="#evt.ChangeGroupAlly">evt.ChangeGroupAlly</a></li><li><a href="#evt.CheckSeason">evt.CheckSeason</a></li><li><a href="#evt.SetMonGroupBit">evt.SetMonGroupBit</a></li><li><a href="#evt.SetChestBit">evt.SetChestBit</a></li><li><a href="#evt.FaceAnimation">evt.FaceAnimation</a></li><li><a href="#evt.SetMonsterItem">evt.SetMonsterItem</a></li><li><a href="#evt.StopDoor">evt.StopDoor</a></li><li><a href="#evt.CheckItemsCount">evt.CheckItemsCount</a></li><li><a href="#evt.RemoveItems">evt.RemoveItems</a></li><li><a href="#evt.Jump">evt.Jump</a></li><li><a href="#evt.IsTotalBountyInRange">evt.IsTotalBountyInRange</a></li><li><a href="#evt.IsPlayerInParty">evt.IsPlayerInParty</a></li></ul></li><li><a href="#Events">Events</a><ul><li><a href="#Core-events.lua"><span class="def-shadow">Core\ </span>events.lua</a><ul><li><a href="#events.CalcSpellDamage">CalcSpellDamage</a></li><li><a href="#events.WalkToMap">WalkToMap</a></li><li><a href="#events.NewGameMap">NewGameMap</a></li><li><a href="#events.DeathMap">DeathMap</a></li><li><a href="#events.FogRange">FogRange</a></li><li><a href="#events.GameInitialized1">GameInitialized1</a></li><li><a href="#events.GameInitialized2">GameInitialized2</a></li><li><a href="#events.CanSaveGame">CanSaveGame</a></li><li><a href="#events.CanCastLloyd">CanCastLloyd</a></li><li><a href="#events.IsUnderwater">IsUnderwater</a></li><li><a href="#events.SetMapNoNPC">SetMapNoNPC</a></li><li><a href="#events.EnterNPC">EnterNPC</a></li><li><a href="#events.ShowNPCTopics">ShowNPCTopics</a></li><li><a href="#events.DrawNPCGreeting">DrawNPCGreeting</a></li><li><a href="#events.WindowMessage">WindowMessage</a></li><li><a href="#events.KeyDown">KeyDown</a></li><li><a href="#events.KeyUp">KeyUp</a></li><li><a href="#events.PostRender">PostRender</a></li><li><a href="#events.Action">Action</a></li><li><a href="#events.MenuAction">MenuAction</a></li><li><a href="#events.CanExitNPC">CanExitNPC</a></li><li><a href="#events.ExitNPC">ExitNPC</a></li><li><a href="#events.ExitHouseScreen">ExitHouseScreen</a></li><li><a href="#events.CanTeachSkillMastery">CanTeachSkillMastery</a></li><li><a href="#events.PopulateHouseDialog">PopulateHouseDialog</a></li><li><a href="#events.PopulateLearnSkillsDialog">PopulateLearnSkillsDialog</a></li><li><a href="#events.KeysFilter">KeysFilter</a></li><li><a href="#events.BeforeSaveGame">BeforeSaveGame</a></li><li><a href="#events.AfterSaveGame">AfterSaveGame</a></li><li><a href="#events.SkyBitmap">SkyBitmap</a></li><li><a href="#events.ShowMovie">ShowMovie</a></li><li><a href="#events.CalcStatBonusByItems">CalcStatBonusByItems</a></li><li><a href="#events.CalcStatBonusByMagic">CalcStatBonusByMagic</a></li><li><a href="#events.CalcStatBonusBySkills">CalcStatBonusBySkills</a></li><li><a href="#events.GetSkill">GetSkill</a></li><li><a href="#events.GetAttackDelay">GetAttackDelay</a></li><li><a href="#events.CalcDamageToPlayer">CalcDamageToPlayer</a></li><li><a href="#events.DoBadThingToPlayer">DoBadThingToPlayer</a></li><li><a href="#events.CanTempleHealPlayer">CanTempleHealPlayer</a></li><li><a href="#events.GetStatisticEffect">GetStatisticEffect</a></li><li><a href="#events.UseMouseItem">UseMouseItem</a></li><li><a href="#events.Regeneration">Regeneration</a></li><li><a href="#events.ModifyItemDamage">ModifyItemDamage</a></li><li><a href="#events.GetShopItemTreatment">GetShopItemTreatment</a></li><li><a href="#events.CanShopOperateOnItem">CanShopOperateOnItem</a></li><li><a href="#events.ShopItemsGenerated">ShopItemsGenerated</a></li><li><a href="#events.GuildItemsGenerated">GuildItemsGenerated</a></li><li><a href="#events.MonsterKilled">MonsterKilled</a></li><li><a href="#events.ItemAdditionalDamage">ItemAdditionalDamage</a></li><li><a href="#events.CalcDamageToMonster">CalcDamageToMonster</a></li><li><a href="#events.PickCorpse">PickCorpse</a></li><li><a href="#events.CastTelepathy">CastTelepathy</a></li></ul></li><li><a href="#Core-evt.lua"><span class="def-shadow">Core\ </span>evt.lua</a><ul><li><a href="#events.LeaveMap">LeaveMap</a></li><li><a href="#events.LeaveGame">LeaveGame</a></li><li><a href="#events.BeforeLoadMap">BeforeLoadMap</a></li><li><a href="#events.CancelLoadingMapScripts">CancelLoadingMapScripts</a></li><li><a href="#events.BeforeLoadMapScripts">BeforeLoadMapScripts</a></li><li><a href="#events.LoadMapScripts">LoadMapScripts</a></li><li><a href="#events.LoadMap">LoadMap</a></li><li><a href="#events.AfterLoadMap">AfterLoadMap</a></li><li><a href="#events.GetEventHint">GetEventHint</a></li><li><a href="#events.GetMazeInfo">GetMazeInfo</a></li><li><a href="#events.EvtMap">EvtMap</a></li><li><a href="#events.EvtGlobal">EvtGlobal</a></li></ul></li><li><a href="#Core-main.lua"><span class="def-shadow">Core\ </span>main.lua</a><ul><li><a href="#events.StructsLoaded">StructsLoaded</a></li><li><a href="#events.ScriptsLoaded">ScriptsLoaded</a></li></ul></li><li><a href="#Core-timers.lua"><span class="def-shadow">Core\ </span>timers.lua</a><ul><li><a href="#events.Tick">Tick</a></li></ul></li><li><a href="#Modules-PaperDoll.lua"><span class="def-shadow">Modules\ </span>PaperDoll.lua</a><ul><li><a href="#events.ReloadPaperDollGraphics">ReloadPaperDollGraphics</a></li><li><a href="#events.PaperDollHiddenPieces">PaperDollHiddenPieces</a></li></ul></li></ul></li><li><a href="#General-Functions">General Functions</a><ul><li><a href="#StructsAfter-Backup.lua"><span class="def-shadow">Structs\After\ </span>Backup.lua</a><ul><li><a href="#LocalFile">LocalFile</a></li><li><a href="#LocalMonstersTxt">LocalMonstersTxt</a></li><li><a href="#LocalHostileTxt">LocalHostileTxt</a></li><li><a href="#LocalNPCNews">LocalNPCNews</a></li></ul></li><li><a href="#StructsAfter-DataTablesSupport.lua"><span class="def-shadow">Structs\After\ </span>DataTablesSupport.lua</a><ul><li><a href="#SplitLines">SplitLines</a></li><li><a href="#SplitLinesAny">SplitLinesAny</a></li><li><a href="#SplitTabs">SplitTabs</a></li></ul></li><li><a href="#StructsAfter-Draw.lua"><span class="def-shadow">Structs\After\ </span>Draw.lua</a><ul><li><a href="#DrawScreenEffectD3D">DrawScreenEffectD3D</a></li></ul></li><li><a href="#StructsAfter-Functions.lua"><span class="def-shadow">Structs\After\ </span>Functions.lua</a><ul><li><a href="#SplitSkill">SplitSkill</a></li><li><a href="#JoinSkill">JoinSkill</a></li><li><a href="#XYZ">XYZ</a></li><li><a href="#ClearConsoleEvents">ClearConsoleEvents</a></li><li><a href="#Message">Message</a></li><li><a href="#Question">Question</a></li><li><a href="#ReplaceNPCTopic">ReplaceNPCTopic</a></li><li><a href="#AddGoldExp">AddGoldExp</a></li><li><a href="#ShowQuestEffect">ShowQuestEffect</a></li><li><a href="#TakeItemFromParty">TakeItemFromParty</a></li><li><a href="#CheckMonstersKilled">CheckMonstersKilled</a></li><li><a href="#EnumAvailableSkills">EnumAvailableSkills</a></li><li><a href="#RGB">RGB</a></li><li><a href="#StrLeft">StrLeft</a></li><li><a href="#StrRight">StrRight</a></li><li><a href="#StrColor">StrColor</a></li><li><a href="#SummonMonster">SummonMonster</a></li><li><a href="#SummonItem">SummonItem</a></li><li><a href="#RebildIDList">RebildIDList</a></li><li><a href="#ChangeSprite">ChangeSprite</a></li><li><a href="#CreateSprite">CreateSprite</a></li><li><a href="#MoveModel">MoveModel</a></li></ul></li><li><a href="#StructsAfter-LocalizationAndQuests.lua"><span class="def-shadow">Structs\After\ </span>LocalizationAndQuests.lua</a><ul><li><a href="#TakeQuestOperation">TakeQuestOperation</a></li><li><a href="#Quests-">Quests</a></li><li><a href="#QuestNPC">QuestNPC</a></li><li><a href="#vars.Quests">vars.Quests</a></li><li><a href="#LocalizeAll">LocalizeAll</a></li><li><a href="#Localize">Localize</a></li><li><a href="#GenerateQuestsLocalization">GenerateQuestsLocalization</a></li><li><a href="#GenerateLocalization">GenerateLocalization</a></li><li><a href="#UpdateNPCQuests">UpdateNPCQuests</a></li><li><a href="#QuestBranch">QuestBranch</a></li><li><a href="#QuestBranchScreen">QuestBranchScreen</a></li><li><a href="#ExitQuestBranch">ExitQuestBranch</a></li><li><a href="#GetQuestBranchStack">GetQuestBranchStack</a></li><li><a href="#Quest">Quest</a></li><li><a href="#Greeting">Greeting</a></li><li><a href="#NPCTopic">NPCTopic</a></li><li><a href="#KillMonstersQuest">KillMonstersQuest</a></li></ul></li><li><a href="#StructsAfter-Text-Tables.lua"><span class="def-shadow">Structs\After\ </span>Text Tables.lua</a><ul><li><a href="#ParseTextTable">ParseTextTable</a></li><li><a href="#LoadTextTable">LoadTextTable</a></li><li><a href="#ParseBasicTextTable">ParseBasicTextTable</a></li><li><a href="#LoadBasicTextTable">LoadBasicTextTable</a></li><li><a href="#WriteBasicTextTable">WriteBasicTextTable</a></li><li><a href="#ParseNumbersTextTable">ParseNumbersTextTable</a></li><li><a href="#LoadNumbersTextTable">LoadNumbersTextTable</a></li><li><a href="#ParseNamedColTable">ParseNamedColTable</a></li><li><a href="#LoadNamedColTable">LoadNamedColTable</a></li><li><a href="#WriteNamedColTable">WriteNamedColTable</a></li><li><a href="#TransposeTextTable">TransposeTextTable</a></li><li><a href="#ReadLodTextTable">ReadLodTextTable</a></li></ul></li><li><a href="#Core-Common.lua"><span class="def-shadow">Core\ </span>Common.lua</a><ul><li><a href="#assertnum">assertnum</a></li><li><a href="#tget">tget</a></li><li><a href="#pcall2">pcall2</a></li><li><a href="#xpcall2">xpcall2</a></li><li><a href="#cocall">cocall</a></li><li><a href="#cocall2">cocall2</a></li><li><a href="#dofile2">dofile2</a></li><li><a href="#coroutine.resume2">coroutine.resume2</a></li><li><a href="#os.GetErrorText">os.GetErrorText</a></li><li><a href="#path.find">path.find</a></li><li><a href="#path.FindFirst">path.FindFirst</a></li><li><a href="#path.findfirst">path.findfirst</a></li><li><a href="#os.chdir">os.chdir</a></li><li><a href="#os.mkdir">os.mkdir</a></li><li><a href="#os.copy">os.copy</a></li><li><a href="#path.GetRelativePath">path.GetRelativePath</a></li><li><a href="#string.convert">string.convert</a></li><li><a href="#debug.FunctionFile">debug.FunctionFile</a></li></ul></li><li><a href="#Core-Debug.lua"><span class="def-shadow">Core\ </span>Debug.lua</a><ul><li><a href="#debug.HideConsole">debug.HideConsole</a></li></ul></li><li><a href="#Core-ErrorFunction.lua"><span class="def-shadow">Core\ </span>ErrorFunction.lua</a><ul><li><a href="#errorinfo">errorinfo</a></li><li><a href="#tostring2">tostring2</a></li></ul></li><li><a href="#Core-RSFunctions.lua"><span class="def-shadow">Core\ </span>RSFunctions.lua</a><ul><li><a href="#table.swap">table.swap</a></li><li><a href="#table.move">table.move</a></li><li><a href="#table.copy">table.copy</a></li><li><a href="#table.find">table.find</a></li><li><a href="#table.ifind">table.ifind</a></li><li><a href="#table.invert">table.invert</a></li><li><a href="#table.clear">table.clear</a></li><li><a href="#table.join">table.join</a></li><li><a href="#coroutine.yieldN">coroutine.yieldN</a></li><li><a href="#path.ext">path.ext</a></li><li><a href="#path.setext">path.setext</a></li><li><a href="#path.name">path.name</a></li><li><a href="#path.dir">path.dir</a></li><li><a href="#path.addslash">path.addslash</a></li><li><a href="#path.noslash">path.noslash</a></li><li><a href="#io.save">io.save</a></li><li><a href="#io.load">io.load</a></li><li><a href="#string.print">string.print</a></li><li><a href="#string.split">string.split</a></li><li><a href="#string.csplit">string.csplit</a></li><li><a href="#string.replace">string.replace</a></li><li><a href="#sortpairs">sortpairs</a></li><li><a href="#debug.findupvalue">debug.findupvalue</a></li><li><a href="#debug.findlocal">debug.findlocal</a></li><li><a href="#debug.upvalues">debug.upvalues</a></li></ul></li><li><a href="#Core-RSMem.lua"><span class="def-shadow">Core\ </span>RSMem.lua</a><ul><li><a href="#&#8230;">&#8230;</a></li></ul></li><li><a href="#Core-RSPersist.lua"><span class="def-shadow">Core\ </span>RSPersist.lua</a><ul><li><a href="#persist">persist</a></li><li><a href="#unpersist">unpersist</a></li></ul></li><li><a href="#Core-dump.lua"><span class="def-shadow">Core\ </span>dump.lua</a><ul><li><a href="#dump">dump</a></li></ul></li><li><a href="#Core-events.lua-"><span class="def-shadow">Core\ </span>events.lua</a><ul><li><a href="#VFlipUnfixed">VFlipUnfixed</a></li><li><a href="#HookManager">HookManager</a></li><li><a href="#GetCurrentNPC">GetCurrentNPC</a></li><li><a href="#SkillToHouseTopic">SkillToHouseTopic</a></li><li><a href="#HouseTopicToSkill">HouseTopicToSkill</a></li><li><a href="#FixVFlip">FixVFlip</a></li></ul></li><li><a href="#Core-evt.lua-"><span class="def-shadow">Core\ </span>evt.lua</a><ul><li><a href="#vars">vars</a></li><li><a href="#mapvars">mapvars</a></li><li><a href="#evt.CanShowTopic">evt.CanShowTopic</a></li><li><a href="#evt.map">evt.map</a></li><li><a href="#evt.hint">evt.hint</a></li><li><a href="#evt.MazeInfo">evt.MazeInfo</a></li><li><a href="#evt.str">evt.str</a></li><li><a href="#evt.house">evt.house</a></li><li><a href="#evt.Player">evt.Player</a></li><li><a href="#evt.CurrentPlayer">evt.CurrentPlayer</a></li><li><a href="#evt.InGlobal">evt.InGlobal</a></li><li><a href="#evt.ForPlayer-">evt.ForPlayer</a></li><li><a href="#evt.HouseDoor">evt.HouseDoor</a></li></ul></li><li><a href="#Core-main.lua-"><span class="def-shadow">Core\ </span>main.lua</a><ul><li><a href="#MessageBox">MessageBox</a></li><li><a href="#debug.Message">debug.Message</a></li><li><a href="#debug.ErrorMessage">debug.ErrorMessage</a></li><li><a href="#ErrorMessage">ErrorMessage</a></li><li><a href="#ReloadLocalization">ReloadLocalization</a></li></ul></li><li><a href="#Core-timers.lua-"><span class="def-shadow">Core\ </span>timers.lua</a><ul><li><a href="#Keys">Keys</a></li><li><a href="#timeGetTime">timeGetTime</a></li><li><a href="#Timer">Timer</a></li><li><a href="#RefillTimer">RefillTimer</a></li><li><a href="#Sleep">Sleep</a></li><li><a href="#Sleep2">Sleep2</a></li><li><a href="#RemoveTimer">RemoveTimer</a></li><li><a href="#Keys.IsPressed">Keys.IsPressed</a></li><li><a href="#Keys.IsToggled">Keys.IsToggled</a></li></ul></li><li><a href="#Modules-PaperDoll.lua-"><span class="def-shadow">Modules\ </span>PaperDoll.lua</a><ul><li><a href="#PaperDollCategories">PaperDollCategories</a></li><li><a href="#PaperDollContitionalPieces">PaperDollContitionalPieces</a></li><li><a href="#PaperDollDirectPieces">PaperDollDirectPieces</a></li><li><a href="#PaperDollCount">PaperDollCount</a></li><li><a href="#PaperDollBaseRace">PaperDollBaseRace</a></li><li><a href="#PaperDollSpecialBodies">PaperDollSpecialBodies</a></li><li><a href="#PaperDollMode">PaperDollMode</a></li><li><a href="#PaperDollDrawOrder">PaperDollDrawOrder</a></li><li><a href="#PaperDollAddRace">PaperDollAddRace</a></li><li><a href="#PaperDollAddBodies">PaperDollAddBodies</a></li><li><a href="#AddPaperDollGraphics">AddPaperDollGraphics</a></li><li><a href="#ReloadPaperDollGraphics">ReloadPaperDollGraphics</a></li></ul></li></ul></li><li><a href="#Structures">Structures</a><ul><li><a href="#structs.GameStructure">Game</a></li><li><a href="#structs.GameParty">Party</a></li><li><a href="#structs.GameMap">Map</a></li><li><a href="#structs.GameMouse">Mouse</a></li><li><a href="#structs.GameScreen">Screen</a></li><li><a href="#structs.ActionItem">structs.ActionItem</a></li><li><a href="#structs.BSPNode">structs.BSPNode</a></li><li><a href="#structs.BaseBonus">structs.BaseBonus</a></li><li><a href="#structs.BaseLight">structs.BaseLight</a></li><li><a href="#structs.BitmapsLod">structs.BitmapsLod</a></li><li><a href="#structs.BlvHeader">structs.BlvHeader</a></li><li><a href="#structs.CurrentTileBin">structs.CurrentTileBin</a></li><li><a href="#structs.CustomLods">structs.CustomLods</a></li><li><a href="#structs.DChestItem">structs.DChestItem</a></li><li><a href="#structs.DecListItem">structs.DecListItem</a></li><li><a href="#structs.EventLine">structs.EventLine</a></li><li><a href="#structs.Events2DItem">structs.Events2DItem</a></li><li><a href="#structs.FacetData">structs.FacetData</a></li><li><a href="#structs.FloatVector">structs.FloatVector</a></li><li><a href="#structs.FogChances">structs.FogChances</a></li><li><a href="#structs.GameClassKinds">structs.GameClassKinds</a></li><li><a href="#structs.GameClasses">structs.GameClasses</a></li><li><a href="#structs.GameRaces">structs.GameRaces</a></li><li><a href="#structs.HistoryTxtItem">structs.HistoryTxtItem</a></li><li><a href="#structs.HouseMovie">structs.HouseMovie</a></li><li><a href="#structs.IFTItem">structs.IFTItem</a></li><li><a href="#structs.Item">structs.Item</a></li><li><a href="#structs.ItemsTxtItem">structs.ItemsTxtItem</a></li><li><a href="#structs.LloydBeaconSlot">structs.LloydBeaconSlot</a></li><li><a href="#structs.Lod">structs.Lod</a></li><li><a href="#structs.LodBitmap">structs.LodBitmap</a></li><li><a href="#structs.LodFile">structs.LodFile</a></li><li><a href="#structs.LodRecord">structs.LodRecord</a></li><li><a href="#structs.LodSprite">structs.LodSprite</a></li><li><a href="#structs.LodSpriteD3D">structs.LodSpriteD3D</a></li><li><a href="#structs.LodSpriteLine">structs.LodSpriteLine</a></li><li><a href="#structs.MapChest">structs.MapChest</a></li><li><a href="#structs.MapDoor">structs.MapDoor</a></li><li><a href="#structs.MapExtra">structs.MapExtra</a></li><li><a href="#structs.MapFacet">structs.MapFacet</a></li><li><a href="#structs.MapLight">structs.MapLight</a></li><li><a href="#structs.MapModel">structs.MapModel</a></li><li><a href="#structs.MapMonster">structs.MapMonster</a></li><li><a href="#structs.MapNote">structs.MapNote</a></li><li><a href="#structs.MapObject">structs.MapObject</a></li><li><a href="#structs.MapOutline">structs.MapOutline</a></li><li><a href="#structs.MapOutlines">structs.MapOutlines</a></li><li><a href="#structs.MapRoom">structs.MapRoom</a></li><li><a href="#structs.MapSprite">structs.MapSprite</a></li><li><a href="#structs.MapStatsItem">structs.MapStatsItem</a></li><li><a href="#structs.MapVertex">structs.MapVertex</a></li><li><a href="#structs.ModelFacet">structs.ModelFacet</a></li><li><a href="#structs.ModelVertex">structs.ModelVertex</a></li><li><a href="#structs.MonListItem">structs.MonListItem</a></li><li><a href="#structs.MonsterAttackInfo">structs.MonsterAttackInfo</a></li><li><a href="#structs.MonsterKind">structs.MonsterKind</a></li><li><a href="#structs.MonsterSchedule">structs.MonsterSchedule</a></li><li><a href="#structs.MonstersTxtItem">structs.MonstersTxtItem</a></li><li><a href="#structs.NPC">structs.NPC</a></li><li><a href="#structs.NPCNewsItem">structs.NPCNewsItem</a></li><li><a href="#structs.ObjListItem">structs.ObjListItem</a></li><li><a href="#structs.ObjectRef">structs.ObjectRef</a></li><li><a href="#structs.OdmHeader">structs.OdmHeader</a></li><li><a href="#structs.OverlayItem">structs.OverlayItem</a></li><li><a href="#structs.PFTItem">structs.PFTItem</a></li><li><a href="#structs.PatchOptions">structs.PatchOptions</a></li><li><a href="#structs.Player">structs.Player</a></li><li><a href="#structs.SFT">structs.SFT</a></li><li><a href="#structs.SFTItem">structs.SFTItem</a></li><li><a href="#structs.SoundsItem">structs.SoundsItem</a></li><li><a href="#structs.SpawnPoint">structs.SpawnPoint</a></li><li><a href="#structs.SpcItemsTxtItem">structs.SpcItemsTxtItem</a></li><li><a href="#structs.SpellBuff">structs.SpellBuff</a></li><li><a href="#structs.SpellEffect">structs.SpellEffect</a></li><li><a href="#structs.SpellInfo">structs.SpellInfo</a></li><li><a href="#structs.SpellsTxtItem">structs.SpellsTxtItem</a></li><li><a href="#structs.SpritesLod">structs.SpritesLod</a></li><li><a href="#structs.StartStat">structs.StartStat</a></li><li><a href="#structs.StdItemsTxtItem">structs.StdItemsTxtItem</a></li><li><a href="#structs.TFTItem">structs.TFTItem</a></li><li><a href="#structs.TileItem">structs.TileItem</a></li><li><a href="#structs.TilesetDef">structs.TilesetDef</a></li><li><a href="#structs.TownPortalTownInfo">structs.TownPortalTownInfo</a></li><li><a href="#structs.TravelInfo">structs.TravelInfo</a></li><li><a href="#structs.Weather">structs.Weather</a></li></ul></li><li><a href="#Constants">Constants</a><ul><li><a href="#const">const.*</a></li><li><a href="#const.AIState">const.AIState</a></li><li><a href="#const.CharScreens">const.CharScreens</a></li><li><a href="#const.ChestBits">const.ChestBits</a></li><li><a href="#const.Class">const.Class</a></li><li><a href="#const.Condition">const.Condition</a></li><li><a href="#const.Damage">const.Damage</a></li><li><a href="#const.FaceAnimation">const.FaceAnimation</a></li><li><a href="#const.FacetBits">const.FacetBits</a></li><li><a href="#const.GameActions">const.GameActions</a></li><li><a href="#const.HouseScreens">const.HouseScreens</a></li><li><a href="#const.HouseType">const.HouseType</a></li><li><a href="#const.ItemSlot">const.ItemSlot</a></li><li><a href="#const.ItemType">const.ItemType</a></li><li><a href="#const.Keys">const.Keys</a></li><li><a href="#const.MonsterBits">const.MonsterBits</a></li><li><a href="#const.MonsterBonus">const.MonsterBonus</a></li><li><a href="#const.MonsterBuff">const.MonsterBuff</a></li><li><a href="#const.MonsterKind">const.MonsterKind</a></li><li><a href="#const.MonsterPref">const.MonsterPref</a></li><li><a href="#const.NPCProfession">const.NPCProfession</a></li><li><a href="#const.ObjectRefKind">const.ObjectRefKind</a></li><li><a href="#const.PartyBuff">const.PartyBuff</a></li><li><a href="#const.PlayerBuff">const.PlayerBuff</a></li><li><a href="#const.Race">const.Race</a></li><li><a href="#const.Screens">const.Screens</a></li><li><a href="#const.Season">const.Season</a></li><li><a href="#const.Skills">const.Skills</a></li><li><a href="#const.SpriteBits">const.SpriteBits</a></li><li><a href="#const.Stats">const.Stats</a></li><li><a href="#evt.Players">evt.Players</a></li><li><a href="#evt.VarNum">evt.VarNum</a></li></ul></li></ul>
			</div>
			

<br>
<a id="General-Information"></a><h2>Общая информация</h2>
Для моддинга Вам понадобится <a href="https://sites.google.com/site/sergroj/mm/MMArchive.rar?attredirects=0">MMArchive</a>. Также могут пригодиться <a href="http://sourceforge.net/projects/mm8leveleditor/files/MM8LevelEditor/">mm8leveleditor</a> и <a href="http://sites.google.com/site/angelddeath/#TOC-Might-Magic-6-8-Map-Viewer">MM Map Viewer</a>.
<br>

Извлеките все файлы <b class="def-param">*.txt</b> из соответствующих архивов LOD: <b class="def-param">icons.lod</b> в MM6, <b class="def-param">events.lod</b> в MM7, <b class="def-param">EnglishT.lod</b> в MM8. Вам они понадобятся.
<br>
Проще всего начать с редактирования текстовых таблиц с помощью <a href="https://sites.google.com/site/sergroj/wog/TxtEdit.rar?attredirects=0">TxtEdit</a>.

В добавок к файлам <b class="def-param">*.txt</b>, которые Вы извлекли из LOD-архива MMExtension создаст некоторые таблицы в папке <b>Data\Tables</b> при первом запуске. Вы можете менять в них любые значения и добавлять новые строки ко многим из них.
<br>
<br>


<b>Lua</b> &ndash; это простой, но гибкий скриптовый язык. Вы можете прочитать о нём <a href="http://www.lua.org/manual/5.1/">здесь</a>, <a href="http://www.lua.org/pil/">здесь</a> и <a href="http://luajit.org/extensions.html">здесь</a>. MMExtension предоставляет все стандартные библиотеки Lua и LuaJIT.<br>
Пока я не перешёл на Sublime Text, я использовал SciTE для редактирования скриптов Lua. Вот некоторые мои настройки для SciTE:
<table class="table">
<tbody>
<tr>
<td>
Откройте SciTEGlobal.properties.<br>
<br>
<b>Найдите и установите следующие параметры:</b><br>
tabsize=2<br>
indent.size=2<br>
braces.autoclose=0<br>
<br>
<b>Найдите</b> user.shortcuts=\<br>
<b>удалите строку с</b> Alt+X<br>
<b>добавьте строку:</b> Ctrl+Shift+Z|IDM_REDO|\<br>
<b>добавьте строку:</b> Ctrl+R|IDM_REPLACE|\<br>
</td>
</tr>
</tbody>
</table>
<br>

Все скрипты находятся в директории Scripts. Скрипты в разных подпапках загружаются и выгружаются в разные моменты:
<br>
<table class="table width-500">
<tbody>
<tr>
<td><i>&nbsp;Подпапка
</i></td>
<td><i>&nbsp;Описание
</i></td>
</tr>
<tr>
<td>Core</td>
<td>Скрипты ядра MMExtension. Не кладите сюда свои скрипты.
</td>
</tr>
<tr>
<td>General</td>
<td>
Эти скрипты загружаются перед началом игры и никогда не выгружается.
</td>
</tr>
<tr>
<td>Global</td>
<td>
Эти скрипты загружаются, когда запускается новая игра или загружается сохраненная игра, и выгружаются,
когда пользователь выходит в главное меню или загружает другую игру. Это хорошее место для большинства скриптов, которые не относятся к конкретной карте. В частности, для скриптов заданий.
</td>
</tr>
<tr>
<td>Localization</td>
<td>
Эти скрипты загружаются при старте игры перед загрузкой скриптов из папки "General" и могут быть загружены снова вызовом функции <a href="#ReloadLocalization">ReloadLocalization()</a>. Они предназначены для локализации модов.
</td>
</tr>
<tr>
<td>Maps</td>
<td>
Эти скрипты соответствуют картам. Например, скрипты под названием <b class="def-param">oute3.lua</b> и <b class="def-param">любое_имя.oute3.lua</b> будет загружаться при
загрузке карты <b class="def-param">Oute3.odm</b> (Нью-Сорпигал) и выгружаться при выходе из неё.
</td>
</tr>
<tr>
<td>Modules</td>
<td>
Эти скрипты не загружаются автоматически. Вместо этого, их можно загружать при помощи функции <a href="http://www.lua.org/manual/5.1/manual.html#pdf-require">require</a>.
</td>
</tr>
<tr>
<td>Structs</td>
<td>
Эти скрипты предназначены для определения структур. Эти вещи низкого уровня, так что пока я не буду описывать их.
Если вы нашли интересный адрес с помощью ArtMoney или дизассемблера, свяжитесь со мной.
</td>
</tr>
<tr>
<td colspan="2">
Вы можете создавать свои собственные подпапки. Скрипты в них не будут загружаться автоматически и не будет выгружаться.
<br>
<br>

Слово "выгружать" означает удаление всех событий скрипта. Благодаря выгрузке и последующей повторной загрузке глобальных скриптов и скриптов карт, вы можете их изменить и протестировать изменения, просто перезагрузив сохраненную игру.
Не нужно для этого выходить из игры Меч и Магия.
<br>
</td>
</tr>
</tbody>
</table>
<br>

<b>Отладочная консоль</b> &ndash; это удобный способ быстро проверить что-нибудь. Нажмите Ctrl + F1, чтобы открыть её.
Здесь Вы можете писать любые скрипты. Например, <span class="def-code"><span class="lua5-std">dump</span>(Party[<span class="lua5-literal">0</span>].Stats)</span> выведет значения характеристик первого персонажа.<br>
Нажмите Ctrl + Enter, чтобы выполнить скрипт.<br>
Нажмите Ctrl + E, чтобы повторить последний скрипт.<br>
Нажмите Esc, чтобы закрыть консоль.<br>
<br>


<b>Переменные</b>, используемые скриптами, могут быть 4 типов:<br>
Локальные переменные, объявленные со словом <b>local</b> в Lua.
Они могут быть использованы в месте, где они были объявлены (т.е. функция, скрипт или блок кода) и не хранятся в сохранении игры.<br>
Глобальные переменные. Они могут быть доступны из любого места, но они не хранятся в сохранении игры.<br>
Переменные в таблице <a href="#vars">vars</a>. Они могут быть доступны из любого места и хранятся в сохранении игры.<br>
Переменные в таблице <a href="#mapvars">mapvars</a>. Они относятся к текущей карте. При загрузке карты, 
соответствующая таблица с переменными устанавливается, как <a href="#mapvars">mapvars</a>. Они хранятся в сохранении игры. При перезаполнении карты таблица <a href="#mapvars">mapvars</a> пересоздаётся, старая таблица в этот момент доступна, как <a href="#structs.GameMap.Refilled">Map.Refilled</a>.<br>
<br>

<a id="Hello-world!"></a><h3>Привет мир!</h3>

Для начала используем отладочную консоль. В игре нажмите Ctrl+F1 и вставьте следующий скрипт:
<div class="pre-outer"><div class="pre">Message(<span class="lua5-str">"Hello world!"</span>)</div></div>

Нажмите Ctrl+Enter, чтобы исполнить свой приветственный скрипт.<br><br>


Для того, чтобы сделать свой первый скрипт игры, создайте файл <b class="def-param">out01.lua</b> (или <b class="def-param">oute3.lua</b> для MM6) в каталоге <b>Scripts\Maps</b> и напишите в нём этот текст:<br>
<div class="pre-outer"><div class="pre">MessageBox(<span class="lua5-str">"Hello world!"</span>)</div></div>

Этот скрипт будет показывать <a href="#MessageBox">системное окно сообщения</a> каждый раз при входе в первую карту.<br><br>

Чтобы показать родное сообщение МM, вы можете использовать подобный скрипт:
<div class="pre-outer"><div class="pre">Game.NeedRedraw <span class="lua5-note">=</span> <span class="lua5-literal">true</span> <span> </span><span class="lua5-comment">-- I remember having problems with minimap not getting drawn</span><br>Sleep(<span class="lua5-literal">1</span>) <span> </span><span class="lua5-comment">-- sleep for 1 tick to let it be drawn</span><br>Message(<span class="lua5-str">"Hello world!"</span>)</div></div>

Первые 2 строки в нём понадобились из-за того, что Меч и Магия не поддерживает показ простых сообщений в момент загрузки карты.<br>
<br>



<a id="Decompiled-Scripts"></a><h3>Декомпилированные скрипты</h3>
Оригинальные скрипты Меча и Магии хранятся в двоичном формате в файлах с расширением <b class="def-param">.evt</b>. MMExtension может декомпилировать эти скрипты.
<a href="https://www.dropbox.com/s/kznafxub3lcbrv1/MMScripts.rar?dl=1">Ссылка для скачивания декомпилированных скриптов.</a><br>


Декомпилированные скрипты представлены в виде скриптов Lua и в псевдокоде, который напрямую соответствует бинарному формату.<br>
Просто для информации, далее приведены различия между командами псевдокода и реальными командами MMExtension:<br>
1) "evt." в них не пишется.<br>
2) Они используют goto, а не структурные условные операторы и циклы. Их строки пронумерованы.<br>
3) Они почти всегда проставляют имена параметров в вызовах функций Evt. Вы можете сделать то же самое, но вы также можете использовать вызовы без имен параметров.<br>
Некоторые команды заменены лучшими аналогами в MMExtension. Например, вы не можете использовать команду <b class="def-param">evt.OnTimer</b>, вместо этого вы должны использовать функцию <a href="#Timer">Timer</a>.<br>
5) Есть и другие отличия в синтаксисе скриптов &ndash; например, объявление событий.<br>

<br>
Пример (в формате Lua):
<br>
<div class="pre-outer"><div class="pre">Game.MapEvtLines:RemoveEvent(<span class="lua5-literal">60</span>) <span> </span><span class="lua5-comment">-- remove original event</span><br>evt.map[<span class="lua5-literal">60</span>] <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> i<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> evt.Cmp(<span class="lua5-str">"MapVar0"</span>, <span class="lua5-literal">4</span>) <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.StatusText(<span class="lua5-literal">5</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Nothing here"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">else</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"MapVar0"</span>, <span class="lua5-literal">1</span>)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.StatusText(<span class="lua5-literal">4</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "You found something!"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>i <span class="lua5-note">=</span> Game.Rand() <span class="lua5-note">%</span> <span class="lua5-literal">6</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> i <span class="lua5-operator">==</span> <span class="lua5-literal">1</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">1</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Longsword"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">elseif</span> i <span class="lua5-operator">==</span> <span class="lua5-literal">2</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">15</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Dagger"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">elseif</span> i <span class="lua5-operator">==</span> <span class="lua5-literal">3</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">58</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Club"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">elseif</span> i <span class="lua5-operator">==</span> <span class="lua5-literal">4</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">161</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Phirna Root"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">elseif</span> i <span class="lua5-operator">==</span> <span class="lua5-literal">5</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">309</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Inferno"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">else</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">94</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Cloth Hat"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>


Это код из декомпилированного скрипта <b class="def-param">ZNWC.lua</b> из MM6. Я только добавил первую строчку, которая убрает оригинальный обработчик события, чтобы этот фрагмент кода можно использовать сам по себе. Декомпилированные скрипты убирают сразу все оригинальные обработчики командой <span class="def-code">Game.MapEvtLines.Count <span class="lua5-note">=</span> <span class="lua5-literal">0</span></span>. Если вы хотите изменить некоторые события в декомпилированных скриптах, вытаскивайте эти события в отдельный скрипт, как сделал здесь я. Подробнее см. в описании метода <a href="#structs.EventLine.RemoveEvent">RemoveEvent</a>.<br>
<br>
Если же полноценно использовать возможности MMExtension, то скрипт, делающий то же самое (если играть с ним с самого начала игры), будет выглядеть так:
<br>


<a id="LocalizeScriptExample"></a>
<div class="pre-outer"><div class="pre"><span class="lua5-note">local</span> TXT <span class="lua5-note">=</span> Localize<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NothingHere <span class="lua5-note">=</span> <span class="lua5-str">"Nothing here"</span>,<br><span class="lua5-tab">&#9;</span>FoundSomething <span class="lua5-note">=</span> <span class="lua5-str">"You found something!"</span>,<br><span class="lua5-ctrl">}</span><br><span class="lua5-note">local</span> items <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><span class="lua5-literal">1</span>, <span class="lua5-literal">15</span>, <span class="lua5-literal">58</span>, <span class="lua5-literal">161</span>, <span class="lua5-literal">309</span>, <span class="lua5-literal">94</span><span class="lua5-ctrl">}</span><br>Game.MapEvtLines:RemoveEvent(<span class="lua5-literal">60</span>) <span> </span><span class="lua5-comment">-- remove original event</span><br>evt.map[<span class="lua5-literal">60</span>] <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> mapvars.Shelf60 <span class="lua5-operator">==</span> <span class="lua5-literal">4</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> Game.StatusText(TXT.NothingHere)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span>mapvars.Shelf60 <span class="lua5-note">=</span> (mapvars.Shelf60 <span class="lua5-ctrl">or</span> <span class="lua5-literal">0</span>) <span class="lua5-operator">+</span> <span class="lua5-literal">1</span><br><span class="lua5-tab">&#9;</span>Game.StatusText(TXT.FoundSomething)<br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> i <span class="lua5-note">=</span> <span class="lua5-std">math</span>.<span class="lua5-std">random</span>(<span class="lua5-literal">1</span>, <span class="lua5-operator">#</span>items)<br><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, items[i]) <span> </span><span class="lua5-comment">-- alternatively: evt.GiveItem{Id = items[i]}</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

Вы можете декомпилировать скрипты самостоятельно, если Вам это когда-то понадобится.

Для этого извлеките все <b class="def-param">*.evt</b> и <b class="def-param">*.str</b> файлы из того же архива LOD, что вы использовали для извлечения <b class="def-param">*.txt</b> файлов.

Создайте папку "Decompile" в папке с игрой, положите их туда, и выполните этот простой скрипт:
<br>
<div class="pre-outer"><div class="pre"><span class="lua5-note">local</span> dir <span class="lua5-note">=</span> <span class="lua5-str">"Decompile/"</span><br><span class="lua5-ctrl">for</span> f <span class="lua5-ctrl">in</span> path.<span class="lua5-std">find</span>(dir<span class="lua5-operator">..</span><span class="lua5-str">"*.evt"</span>) <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span>evt.Decompile(f, <span class="lua5-literal">0</span>, dir<span class="lua5-operator">..</span><span class="lua5-str">"Scripts/"</span><span class="lua5-operator">..</span>path.setext(path.name(f), <span class="lua5-str">".lua"</span>))<br><span class="lua5-tab">&#9;</span>evt.Decompile(f, <span class="lua5-literal">0</span>, dir<span class="lua5-operator">..</span><span class="lua5-str">"Scripts/txt/"</span><span class="lua5-operator">..</span>path.setext(path.name(f), <span class="lua5-str">".txt"</span>), <span class="lua5-literal">true</span>)<br><span class="lua5-ctrl">end</span></div></div>
<br>

<a id="Short-functions-syntax"></a><h3>Сокращённый синтаксис объявления функций</h3>
MMExtension вносит одно дополнение в синтаксис Lua &ndash; cокращённый синтаксис объявления функций. Пример:
<div class="pre-outer"><div class="pre">sum <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>x, y<span class="lua5-ctrl">|</span> x <span class="lua5-operator">+</span> y<br><span class="lua5-comment">-- превращается в</span><br>sum <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>(x, y)<br><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> x <span class="lua5-operator">+</span> y<br><span class="lua5-ctrl">end</span></div></div>
Оператор <b>return</b> добавляется только когда он уместен. Например,
<div class="pre-outer"><div class="pre">check <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>b<span class="lua5-ctrl">|</span> <span class="lua5-ctrl">if</span> b <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(b)<br><span class="lua5-ctrl">end</span><br><span class="lua5-comment">-- превращается в</span><br>check <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>(b)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> b <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(b)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
Поскольку не заключённые в скобки короткие функции возвращают одно значение, нет проблем с передачей их в функции и конструкторы таблиц:
<div class="pre-outer"><div class="pre">Timer(<span class="lua5-ctrl">|</span><span class="lua5-ctrl">|</span> evt.DamagePlayer<span class="lua5-ctrl">{</span>Damage <span class="lua5-note">=</span> <span class="lua5-literal">1</span><span class="lua5-ctrl">}</span>, const.Minute)<br><span class="lua5-comment">-- превращается в</span><br>Timer(<span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> evt.DamagePlayer<span class="lua5-ctrl">{</span>Damage <span class="lua5-note">=</span> <span class="lua5-literal">1</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">end</span>, const.Minute)</div></div>
Если Вы хотите вернуть более одного значения, заключите всю короткую функцию в скобки:
<div class="pre-outer"><div class="pre">switch <span class="lua5-note">=</span> (<span class="lua5-ctrl">|</span>x, y<span class="lua5-ctrl">|</span> y, x)<br><span class="lua5-comment">-- превращается в</span><br>switch <span class="lua5-note">=</span> (<span class="lua5-ctrl">function</span>(x, y)<br><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> y, x<br><span class="lua5-ctrl">end</span>)</div></div>
Внутри заключённой в скобки короткой функции можно даже использовать несколько строчек кода:
<div class="pre-outer"><div class="pre">print2 <span class="lua5-note">=</span> (<span class="lua5-ctrl">|</span>x, y<span class="lua5-ctrl">|</span><br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(x)<br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(y)<br>)<br><span class="lua5-comment">-- превращается в</span><br>print2 <span class="lua5-note">=</span> (<span class="lua5-ctrl">function</span>(x, y)<br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(x)<br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(y)<br><span class="lua5-ctrl">end</span>)</div></div>
Для того же эффекта лучше будет выглядить блок <b class="def-param">do</b>:
<div class="pre-outer"><div class="pre">print2 <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>x, y<span class="lua5-ctrl">|</span> <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(x)<br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(y)<br><span class="lua5-ctrl">end</span><br><span class="lua5-comment">-- превращается в</span><br>print2 <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>(x, y)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(x)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(y)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
Но не стоит перебарщивать с короткими функциями &ndash; для многострочных функций предпочтителен традиционный синтаксис.
<br>
<br>

<a id="Quests"></a><h3>Задания</h3>
Оригинальные задания MM были разбросаны по нескольким файлам и программировались вручную, это неудобно и чревато ошибками. Поддержка заданий в MMExtension прошла несколько итераций и сейчас я ею очень доволен. <br>
<a href="https://github.com/GrayFace/MMExtension/tree/master/Misc/Quests%20Examples">Здесь 6 примеров</a>.

Они предназначены для MM8. В конце большинства примеров есть дополнительная информация об использованных функциях. В большинстве примеров используется <a href="#Short-functions-syntax">сокращённый синтаксис объявления функций</a>.<br>
<br>

Начните с <b>Quest Example Simple.lua</b>. Это простое <a href="#Quest">задание</a> с двумя дополнительными <a href="#NPCTopic">пунктами разговора</a>, а также <a href="#Greeting">приветствием</a>.
<div class="spoiler"><input class="spoiler-checkbox" type="checkbox" id="spoiler1"/><div class="spoiler-scroll"><div class="spoiler-space"></div><div class="pre-spoiler"><span class="lua5-comment">--[[</span><br><span class="lua5-comment">This is the simplest quest example. Go to the Clan Leader's Hall in Dagger Wound to see it in action.</span><br><span class="lua5-comment">It utilises new NPCTopic function for more convenient creation of simple text-only topics.</span><br><span class="lua5-comment">It also uses new Quest function ability to automatically find free quest slot if the Slot parameter isn't specified.</span><br><span class="lua5-comment">Texts are set using SetTexts function to reduce indentation level.</span><br><span class="lua5-comment">--]]</span><br><br>QuestNPC <span class="lua5-note">=</span> <span class="lua5-literal">32</span> <span> </span><span class="lua5-comment">-- Frederick Talimere</span><br><br><span class="lua5-comment">-- another way to make a greeting</span><br>Greeting<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Hello, world!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Hi."</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- a simple text topic</span><br>NPCTopic<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Blah 1"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Blah Blah Blah"</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- a simple quest: require item #1 (Longsword), give 1000 exp, 1000 gold and an artifact hat</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"SimpleExampleQuest"</span>,<br><span class="lua5-tab">&#9;</span>QuestItem <span class="lua5-note">=</span> <span class="lua5-literal">1</span>, <span> </span><span class="lua5-comment">-- quest item index (Longsword)</span><br><span class="lua5-tab">&#9;</span>Gold <span class="lua5-note">=</span> <span class="lua5-literal">1000</span>, <span> </span><span class="lua5-comment">-- reward: gold</span><br><span class="lua5-tab">&#9;</span>Exp <span class="lua5-note">=</span> <span class="lua5-literal">1000</span>, <span> </span><span class="lua5-comment">-- reward: experience</span><br><span class="lua5-tab">&#9;</span>RewardItem <span class="lua5-note">=</span> <span class="lua5-literal">536</span>, <span> </span><span class="lua5-comment">-- reward: Lucky Hat</span><br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Quest"</span>,<br><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"I need a Longsword!"</span>,<br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"That's the sword I was looking for! Thank you! I have this hat and some gold coins for you!"</span>,<br><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"You don't have the sword yet?"</span>,<br><br><span class="lua5-tab">&#9;</span>After <span class="lua5-note">=</span> <span class="lua5-str">"Thank you for the sword!"</span>,<br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Quest <span class="lua5-note">=</span> <span class="lua5-str">"Bring a Longsword (the most basic of swords) to Frederick Talimere on Dagger Wound Islands."</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- another simple text topic</span><br>NPCTopic<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Blah 2"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Second Blah Blah Blah!"</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">NPCTopic{topic, text} and Greeting{firstGreet, greet} functions just call Quest function with appropriate parameters.</span><br><span class="lua5-comment">You can specify any parameters you would normally pass to Quest function, like Slot, CanShow etc.</span><br><span class="lua5-comment">Note that if you pass a number as topic to NPCTopic function, it will set StdTopic to that number.</span><br><span class="lua5-comment">See Quest Example.lua for details on StdTopic and other parameters of Quest function.</span><br><br><br><span class="lua5-comment">The call of Greeting function in this script is equivalent to this:</span><br><span class="lua5-comment">Quest{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">Slot = -1,</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">Texts = {</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-comment">FirstGreet = "Hello, world!",</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-comment">Greet = "Hi.",</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">}</span><br><span class="lua5-comment">}</span><br><br><span class="lua5-comment">The first call of NPCTopic function is equivalent to this:</span><br><span class="lua5-comment">Quest{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">Texts = {</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-comment">Topic = "Blah 1",</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-comment">Ungive = "Blah Blah Blah",</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">}</span><br><span class="lua5-comment">}</span><br><span class="lua5-comment">]]</span></div></div><label class="spoiler-label" for="spoiler1"></label><span class="spoiler-fade"></span></div>
<b>Quest Example.lua</b>

содержит копию того же задания, и кое-что дополнительно: приветствие NPC зависит от <a href="#vars.Quests">состояния задания</a>, есть пункты диалога, показываемые при определённых условиях, один из которых &ndash; покупка предмета у NPC.
<div class="spoiler"><input class="spoiler-checkbox" type="checkbox" id="spoiler2"/><div class="spoiler-scroll"><div class="spoiler-space"></div><div class="pre-spoiler"><span class="lua5-note">local</span> A, B, C, D, E, F <span class="lua5-note">=</span> <span class="lua5-literal">0</span>, <span class="lua5-literal">1</span>, <span class="lua5-literal">2</span>, <span class="lua5-literal">3</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">5</span><br><span class="lua5-note">local</span> Q <span class="lua5-note">=</span> vars.Quests<br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">This is an example of a simple quest, dialog topics that depend on quest state and a 'sell item' topic.</span><br><span class="lua5-comment">Mostly it consists of texts rather than code. Go to the Clan Leader's Hall in Dagger Wound to see it in action.</span><br><span class="lua5-comment">It also demonstrates short functions syntax addon (see help for more info).</span><br><span class="lua5-comment">--]]</span><br><br>QuestNPC <span class="lua5-note">=</span> <span class="lua5-literal">1</span> <span> </span><span class="lua5-comment">-- The lizard in the tavern</span><br><br><span class="lua5-comment">-- a simple quest: require item #1 (Longsword), give 1000 exp, 1000 gold and an artifact hat</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"ExampleQuest"</span>, <span> </span><span class="lua5-comment">-- Same as: <span> </span>Name = "ExampleQuest",</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> A,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>FirstGreet <span class="lua5-note">=</span> <span class="lua5-str">"Hello, world!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Greet <span class="lua5-note">=</span> <span class="lua5-str">"Hi."</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Quest!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"I need a Longsword!"</span>,<br><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>GreetGiven <span class="lua5-note">=</span> <span class="lua5-str">"How's it going?"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- TopicGiven can be set as well, but I keep it at "Quest!" here</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"That's the sword I was looking for! Thank you! I have this hat and some gold coins for you!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"You don't have the sword yet?"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>GreetDone <span class="lua5-note">=</span> <span class="lua5-str">"Greetings to you, The Man Who Gave The Sword!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>TopicDone <span class="lua5-note">=</span> <span class="lua5-str">"Thanks!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>After <span class="lua5-note">=</span> <span class="lua5-str">"Thank you for the sword!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Quest <span class="lua5-note">=</span> <span class="lua5-str">"Bring a Longsword (the most basic of swords) to that lizard in the tavern of Dagger Wound Islands."</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-tab">&#9;</span>QuestItem <span class="lua5-note">=</span> <span class="lua5-literal">1</span>, <span> </span><span class="lua5-comment">-- quest item index (Longsword)</span><br><span class="lua5-tab">&#9;</span>Gold <span class="lua5-note">=</span> <span class="lua5-literal">1000</span>, <span> </span><span class="lua5-comment">-- reward: gold</span><br><span class="lua5-tab">&#9;</span>Exp <span class="lua5-note">=</span> <span class="lua5-literal">1000</span>, <span> </span><span class="lua5-comment">-- reward: experience</span><br><span class="lua5-tab">&#9;</span>RewardItem <span class="lua5-note">=</span> <span class="lua5-literal">536</span>, <span> </span><span class="lua5-comment">-- reward: Lucky Hat</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- this will hide the standard topic in slot B</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> B,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- this will hide the standard topic in slot C</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> C,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- this topic is shown only when the quest is taken</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> C,<br><span class="lua5-tab">&#9;</span>CanShow <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span><span class="lua5-ctrl">|</span> Q.ExampleQuest <span class="lua5-operator">==</span> <span class="lua5-str">"Given"</span>, <span> </span><span class="lua5-comment">-- a check that the quest is taken (short function!)</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- Short function syntax language extension translates this into:</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- CanShow = function()</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- <span class="lua5-tab">&#9;</span>return Q.ExampleQuest == "Given"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- end,</span><br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Reverse Engineering"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Ungive <span class="lua5-note">=</span> <span class="lua5-str">"If you bring me the sword, I can reverse-engineer it and make its copies. To tell you the truth, everything here is reverse-engineered."</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- this topic is shown only when the quest is done in place of the topic above (sell swords)</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> C,<br><span class="lua5-tab">&#9;</span>CanShow <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span><span class="lua5-ctrl">|</span> Q.ExampleQuest <span class="lua5-operator">==</span> <span class="lua5-str">"Done"</span>, <span> </span><span class="lua5-comment">-- a check that the quest is finished (short function!)</span><br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Buy Longsword for 50 gold"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"Here's a sword I made for you!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"No money - no Longsword, honey."</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-tab">&#9;</span>NeverGiven <span class="lua5-note">=</span> <span class="lua5-literal">true</span>, <span> </span><span class="lua5-comment">-- skip "Given" state, perform Done/Undone check immediately</span><br><span class="lua5-tab">&#9;</span>NeverDone <span class="lua5-note">=</span> <span class="lua5-literal">true</span>, <span> </span><span class="lua5-comment">-- sell any number of swords. This makes the quest completable mutiple times</span><br><span class="lua5-tab">&#9;</span>QuestGold <span class="lua5-note">=</span> <span class="lua5-literal">50</span>, <span> </span><span class="lua5-comment">-- pay: 50 gold</span><br><span class="lua5-tab">&#9;</span>RewardItem <span class="lua5-note">=</span> <span class="lua5-literal">1</span>, <span> </span><span class="lua5-comment">-- reward: Longsword</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">--[[</span><br><br><span class="lua5-comment">Other Quest properties:</span><br><span> </span><span class="lua5-comment">StdTopic <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- use the standard topic with specified number. For example, a trainer topic or "Join" topic.</span><br><span> </span><span class="lua5-comment">StdTopicGiven, StdTopicDone <span> </span>-- similarly, standard topics specific to Given and Done states.</span><br><span> </span><span class="lua5-comment">FirstStdTopic <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- standard topics specific to initial (ungiven) state.</span><br><span> </span><span class="lua5-comment">Quest <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- quest number in quests.txt, by default it's allocated automatically</span><br><span> </span><span class="lua5-comment">BaseName <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- for quests that require you to go from one NPC to another. Setting BaseName makes two quests share the same quest state defined by BaseName. See "Quest With 2 NPCs.lua".</span><br><span> </span><span class="lua5-comment">GivenState <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- by default it's "Given". This may be useful in a quest with many stages.</span><br><span> </span><span class="lua5-comment">DoneState <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- by default it's "Done". This may be useful in a quest with many stages.</span><br><br><span class="lua5-comment">If you don't pass Slot, any slot not occupied by an MMExt quest will be chosen. If you pass "same" as Slot value, the last used slot will be reused.</span><br><br><br><span class="lua5-comment">Localization:</span><br><span class="lua5-comment">To generate localization template for all scripts, press Ctrl+F1, write</span><br><span> </span><span class="lua5-comment">GenerateLocalization()</span><br><span class="lua5-comment">and press Ctrl+Enter. It will generate the following items in Scripts\Localization folder:</span><br><span> </span><span class="lua5-comment">Quests.txt <span> </span><span> </span>-- for quests</span><br><span> </span><span class="lua5-comment">Common.txt <span> </span><span> </span>-- for strings passed to LocalizeAll function</span><br><span> </span><span class="lua5-comment">Scripts.txt <span> </span>-- for strings passed to Localize function</span><br><span class="lua5-comment">These files should be edited with Txt Tables Editor from my site.</span><br><span class="lua5-comment">Alternatively, run GenerateLocalization(true) to generate *.lua localization files. Choose whichever format you prefer.</span><br><span class="lua5-comment">To generate localization for quests only you can use GenerateQuestsLocalization() instead of GenerateLocalization() command.</span><br><span class="lua5-comment">To generate localization excluding quests you can use GenerateLocalization(false, false) command.</span><br><span class="lua5-comment">Note that GenerateLocalization function assumes your scripts contain up to 1 use of LocalizeAll and up to 1 use of Localize function, both of which are at the beginning of the script.</span><br><br><span class="lua5-comment">To test localization changes without restarting the game you can create a script in Globals folder with this line:</span><br><span> </span><span class="lua5-comment">ReloadLocalization()</span><br><span class="lua5-comment">Then you'll only need to reload a saved game to refresh localization.</span><br><br><br><span class="lua5-comment">For more complex quests you can set up the following functions:</span><br><span class="lua5-comment">(here 't' is the table that you passed to the Quest function, it also has some new fields set by Quest function)</span><br><br><span class="lua5-comment">Checks (return value is interpreted as true or false):</span><br><span> </span><span class="lua5-comment">CanShow(t)</span><br><span> </span><span class="lua5-comment">CheckGive(t)</span><br><span> </span><span class="lua5-comment">CheckDone(t)</span><br><br><span class="lua5-comment">Called on corresponding events:</span><br><span> </span><span class="lua5-comment">Give(t)</span><br><span> </span><span class="lua5-comment">Ungive(t)</span><br><span> </span><span class="lua5-comment">Done(t)</span><br><span> </span><span class="lua5-comment">Undone(t)</span><br><br><span class="lua5-comment">For complete control - these will override default behavior:</span><br><span> </span><span class="lua5-comment">GetGreeting(t, NotFirstVisit)</span><br><span> </span><span class="lua5-comment">GetTopic(t)</span><br><span> </span><span class="lua5-comment">Execute(t)</span><br><span> </span><span class="lua5-comment">IsGiven(t)</span><br><br><span class="lua5-comment">GetGreeting and GetTopic functions return a string.</span><br><br><span class="lua5-comment">Note that you can also make custom quest states. Say, you have a quest called MyQuest. If you set vars.Quests.MyQuest = "MyState", Texts.TopicMyState (or StdTopicMyState) will be displayed. When you click it, Texts.MyState will be displayed and MyState function will be called.</span><br><br><span class="lua5-comment">]]</span><br></div></div><label class="spoiler-label" for="spoiler2"></label><span class="spoiler-fade"></span></div>
<b>Quest With 2 NPCs.lua</b> 

- это пример задания, для выполнения которого надо пойти к другому NPC.
<div class="spoiler"><input class="spoiler-checkbox" type="checkbox" id="spoiler3"/><div class="spoiler-scroll"><div class="spoiler-space"></div><div class="pre-spoiler"><span class="lua5-note">local</span> A, B, C, D, E, F <span class="lua5-note">=</span> <span class="lua5-literal">0</span>, <span class="lua5-literal">1</span>, <span class="lua5-literal">2</span>, <span class="lua5-literal">3</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">5</span><br><span class="lua5-note">local</span> Q <span class="lua5-note">=</span> vars.Quests<br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">This is an example of a quest that requires you to go from one NPC to another.</span><br><span class="lua5-comment">Also demonstrates usage of StdTopic to make NPC join the party.</span><br><span class="lua5-comment">Like in Quest Example.lua, short function syntax addon is utilized.</span><br><span class="lua5-comment">--]]</span><br><br><br>QuestNPC <span class="lua5-note">=</span> <span class="lua5-literal">1</span> <span> </span><span class="lua5-comment">-- The lizard in the tavern</span><br><br><span class="lua5-comment">-- quest start: take the quest in the tavern</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"PowerStone"</span>,<br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> D,<br><span class="lua5-tab">&#9;</span>GivenItem <span class="lua5-note">=</span> <span class="lua5-literal">617</span>, <span> </span><span class="lua5-comment">-- gives Power Stone upon giving the task</span><br><span class="lua5-tab">&#9;</span>CheckDone <span class="lua5-note">=</span> <span class="lua5-literal">false</span>, <span> </span><span class="lua5-comment">-- the quest can't be completed here</span><br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Frederick Talimere"</span>,<br><span class="lua5-tab">&#9;</span>TopicDone <span class="lua5-note">=</span> <span class="lua5-literal">false</span>, <span> </span><span class="lua5-comment">-- don't show if it's done</span><br><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"Show this stone to Frederick Talimere. He will be interested."</span>,<br><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"Yes, just a stone. Frederick is obsessed with these stones. What a fool..."</span>,<br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Quest <span class="lua5-note">=</span> <span class="lua5-str">"Show a stone to Frederick Talimere in Dagger Wound Islands."</span>,<br><span class="lua5-ctrl">}</span><br><br><br><br>QuestNPC <span class="lua5-note">=</span> <span class="lua5-literal">32</span> <span> </span><span class="lua5-comment">-- Frederick Talimere</span><br><br><span class="lua5-comment">-- quest end: talk to Frederick to get the stone</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>BaseName <span class="lua5-note">=</span> <span class="lua5-str">"PowerStone"</span>,<br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> D,<br><span class="lua5-tab">&#9;</span>Exp <span class="lua5-note">=</span> <span class="lua5-literal">1000</span>, <span> </span><span class="lua5-comment">-- reward: experience</span><br><span class="lua5-tab">&#9;</span>QuestItem <span class="lua5-note">=</span> <span class="lua5-literal">617</span>, <span> </span><span class="lua5-comment">-- need Power Stone</span><br><span class="lua5-tab">&#9;</span>KeepQuestItem <span class="lua5-note">=</span> <span class="lua5-literal">true</span>, <span> </span><span class="lua5-comment">-- don't take power stone away</span><br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- no Topic - don't show the topic if the quest isn't taken</span><br><span class="lua5-tab">&#9;</span>TopicGiven <span class="lua5-note">=</span> <span class="lua5-str">"Power Stone"</span>,<br><span class="lua5-tab">&#9;</span>TopicDone <span class="lua5-note">=</span> <span class="lua5-str">"Power Stone"</span>,<br><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"Wow, this is a stone! I love stones!"</span>,<br><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"One lizard told me you have a stone, and so do I. Why don't you show me yours and I'll show you mine?"</span>,<br><span class="lua5-tab">&#9;</span>After <span class="lua5-note">=</span> <span class="lua5-str">"I have about 30 of these stones. You know what, let's go looking for stones together! But I need to get a sword first. Because who knows, we might meet some enemies on our way. With a sword in my hands I'll look more persuasive and will calm down any enemy. Trust me, negotiations are my thing!"</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- show Join topic when both example quests are completed</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> D,<br><span class="lua5-tab">&#9;</span>StdTopic <span class="lua5-note">=</span> <span class="lua5-literal">602</span>, <span> </span><span class="lua5-comment">-- Join topic of Frederick Talimere</span><br><span class="lua5-tab">&#9;</span>CanShow <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span><span class="lua5-ctrl">|</span> Q.PowerStone <span class="lua5-operator">==</span> <span class="lua5-str">"Done"</span> <span class="lua5-ctrl">and</span> Q.SimpleExampleQuest <span class="lua5-operator">==</span> <span class="lua5-str">"Done"</span>,<br><span class="lua5-ctrl">}</span><br></div></div><label class="spoiler-label" for="spoiler3"></label><span class="spoiler-fade"></span></div>
<b>Quest Alchemy.lua</b> 

- это пример задания, подобного стандартным "собери ингредиенты для зелья" с небольшой дополнительной фишкой.
<div class="spoiler"><input class="spoiler-checkbox" type="checkbox" id="spoiler4"/><div class="spoiler-scroll"><div class="spoiler-space"></div><div class="pre-spoiler"><span class="lua5-note">local</span> A, B, C, D, E, F <span class="lua5-note">=</span> <span class="lua5-literal">0</span>, <span class="lua5-literal">1</span>, <span class="lua5-literal">2</span>, <span class="lua5-literal">3</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">5</span><br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">This is an example of an alchemic quest like those seen in MM8. It works smarter by removing weaker ingredients first.</span><br><span class="lua5-comment">It replaces default quest of Thistle that normally makes a Potion of Pure Speed.</span><br><span class="lua5-comment">Like the example with 2 NPCs, it uses BaseName property to make a cross-topic quest easily.</span><br><span class="lua5-comment">Then there is some stuff just for fun: I reinitiate a conversation 2 minutes after the quest is completed and show some text.</span><br><span class="lua5-comment">--]]</span><br><br>QuestNPC <span class="lua5-note">=</span> <span class="lua5-literal">88</span> <span> </span><span class="lua5-comment">-- Thistle</span><br><br><br>Quest<span class="lua5-ctrl">{</span> <span> </span><span class="lua5-comment">-- Get quest</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"StreetAlchemy"</span>,<br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>FirstTopic <span class="lua5-note">=</span> <span class="lua5-str">"Street Alchemy"</span>, <span> </span><span class="lua5-comment">-- only show if it isn't given</span><br><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"Hey! Hey fellas! I'm chronicling a Street Alchemy special. You wanna see some alchemy?"</span>,<br><span class="lua5-tab">&#9;</span>Quest <span class="lua5-note">=</span> <span class="lua5-str">"Bring Thistle on the Dagger Wound Islands the basic ingredients for a Potion of Disappearance."</span>,<br><span class="lua5-ctrl">}</span><br><br><br>NPCTopic<span class="lua5-ctrl">{</span> <span> </span><span class="lua5-comment">-- Ingredients topic</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Ingredients"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Ultimate Potions are made of a complex blending of the three basic ingredients: Swords, Boots and Armor. Potion of Disappearance requires 6 Longswords, 2 pairs of boots and 2 leather armors."</span><br><span class="lua5-ctrl">}</span><br><br><br>Quest<span class="lua5-ctrl">{</span> <span> </span><span class="lua5-comment">-- Finish quest</span><br><span class="lua5-tab">&#9;</span>BaseName <span class="lua5-note">=</span> <span class="lua5-str">"StreetAlchemy"</span>,<br><span class="lua5-tab">&#9;</span>QuestItem <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">{</span><span class="lua5-literal">1</span>,<span class="lua5-literal">2</span>,<span class="lua5-literal">3</span>,<span class="lua5-literal">4</span>,<span class="lua5-literal">5</span>, Count <span class="lua5-note">=</span> <span class="lua5-literal">6</span><span class="lua5-ctrl">}</span>, <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- all kinds of Longswords, 6 in total</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">{</span><span class="lua5-literal">132</span>,<span class="lua5-literal">133</span>,<span class="lua5-literal">134</span>,<span class="lua5-literal">135</span>,<span class="lua5-literal">136</span>, Count <span class="lua5-note">=</span> <span class="lua5-literal">2</span><span class="lua5-ctrl">}</span>, <span> </span><span class="lua5-comment">-- all kinds of Boots, 2 in total</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">{</span><span class="lua5-literal">84</span>,<span class="lua5-literal">85</span>,<span class="lua5-literal">86</span>,<span class="lua5-literal">87</span>,<span class="lua5-literal">88</span>, Count <span class="lua5-note">=</span> <span class="lua5-literal">2</span><span class="lua5-ctrl">}</span>, <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- all kinds of Leather Armor, 2 in total</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-tab">&#9;</span>Exp <span class="lua5-note">=</span> <span class="lua5-literal">1000</span>,<br><span class="lua5-tab">&#9;</span>RewardItem <span class="lua5-note">=</span> <span class="lua5-literal">535</span>, <span> </span><span class="lua5-comment">-- Ring of Fusion</span><br><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">220</span>) <span> </span><span class="lua5-comment">-- add an empty bottle to make it appear as if it's the reward</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- now make him speak to us again after some time</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> npc <span class="lua5-note">=</span> QuestNPC <span> </span><span class="lua5-comment">-- QuestNPC is set to NPC being spoken to in a dialog</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Sleep(const.Minute<span class="lua5-operator">*</span><span class="lua5-literal">3</span>, <span class="lua5-literal">nil</span>, <span class="lua5-ctrl">{</span><span class="lua5-literal">0</span><span class="lua5-ctrl">}</span>) <span> </span><span class="lua5-comment">-- sleep for 3 minutes and only wake up when no dialog is active (hence, the 3rd parameter)</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.SpeakNPC(npc)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>TopicGiven <span class="lua5-note">=</span> <span class="lua5-str">"Do you have the Ingredients?"</span>, <span> </span><span class="lua5-comment">-- only show if it's given</span><br><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"Hey look, the Potion of Disappearance has disappeared! Take this empty bottle, it's yours now."</span>,<br><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"You are missing all or some of the needed ingredients. Remember, to make a Potion of Disappearance I need 6 Longswords, 2 pairs of boots and 2 leather armors."</span>,<br><span class="lua5-ctrl">}</span><br><br><br>Quest<span class="lua5-ctrl">{</span> <span> </span><span class="lua5-comment">-- Instead of Ingredients topic</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> B,<br><span class="lua5-tab">&#9;</span>CanShow <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>t<span class="lua5-ctrl">|</span> Game.CurrentScreen <span class="lua5-operator">~=</span> const.Screens.House, <span> </span><span class="lua5-comment">-- only show if NPC was met on the street</span><br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Greet <span class="lua5-note">=</span> <span class="lua5-str">"I think there's something in your backpack..."</span>,<br><span class="lua5-ctrl">}</span></div></div><label class="spoiler-label" for="spoiler4"></label><span class="spoiler-fade"></span></div>
<b>Quest Kill Monsters.lua</b> 

содержит 2 задания <a href="#KillMonstersQuest">"убить определённых монстров"</a> &ndash; MMExtension поддерживает такие задания "из коробки", так что Вам не придётся прописывать проверки убийства вручную во все задействованные карты.
<div class="spoiler"><input class="spoiler-checkbox" type="checkbox" id="spoiler5"/><div class="spoiler-scroll"><div class="spoiler-space"></div><div class="pre-spoiler"><span class="lua5-comment">--[[</span><br><span class="lua5-comment">These are 2 example quests that require killing multiple kinds of monsters.</span><br><span class="lua5-comment">Go to the Clan Leader's Hall in Dagger Wound to see the quests in action.</span><br><span class="lua5-comment">--]]</span><br><br>QuestNPC <span class="lua5-note">=</span> <span class="lua5-literal">182</span> <span> </span><span class="lua5-comment">-- Dirthic, an empty NPC in a house on an island</span><br><br>evt.MoveNPC(QuestNPC, <span class="lua5-literal">173</span>) <span> </span><span class="lua5-comment">-- move him to Clan Leader's Hall</span><br><br><br><span class="lua5-comment">-- Quest 1: Kill all pirates</span><br>KillMonstersQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- quest name is optional</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">{</span>Map <span class="lua5-note">=</span> <span class="lua5-str">"out01.odm"</span>, Monster <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><span class="lua5-literal">181</span>, <span class="lua5-literal">182</span>, <span class="lua5-literal">183</span><span class="lua5-ctrl">}</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Exp <span class="lua5-note">=</span> <span class="lua5-literal">2000</span>,<br><span class="lua5-tab">&#9;</span>Gold <span class="lua5-note">=</span> <span class="lua5-literal">2000</span>,<br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Greet <span class="lua5-note">=</span> <span class="lua5-str">"Hi there!"</span>,<br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Pirates!"</span>,<br><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"Kill all da Pirates on Dagger Wound Islands."</span>,<br><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"It's great that you've killed them! 2000 gold for you."</span>,<br><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"Just kill 'em, ok?"</span>,<br><span class="lua5-tab">&#9;</span>TopicDone <span class="lua5-note">=</span> <span class="lua5-literal">false</span>, <span> </span><span class="lua5-comment">-- hide the topic when the quest is completed</span><br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Quest <span class="lua5-note">=</span> <span class="lua5-str">"Kill all Pirates on Dagger Wound Islands. Return to Dirthic in Clan Leader's Hall."</span>,<br><span class="lua5-tab">&#9;</span>Killed <span class="lua5-note">=</span> <span class="lua5-str">"You have killed all Pirates!"</span>, <span> </span><span class="lua5-comment">-- completion message</span><br><span class="lua5-ctrl">}</span><br><br><br><span class="lua5-comment">-- Quest 2: Kill all creatures in Abandoned Temple</span><br>KillMonstersQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"ClearAbandonedTemple"</span>, <span> </span><span class="lua5-comment">-- quest name</span><br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">{</span>Map <span class="lua5-note">=</span> <span class="lua5-str">"d05.blv"</span>, Monster <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><span class="lua5-literal">7</span>, <span class="lua5-literal">8</span>, <span class="lua5-literal">9</span><span class="lua5-ctrl">}</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"You have killed all Couatls! Serpentmen are yet to be killed."</span>, <span> </span><span class="lua5-comment">-- partial completion message (optional)</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">{</span>Map <span class="lua5-note">=</span> <span class="lua5-str">"d05.blv"</span>, Monster <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><span class="lua5-literal">94</span>, <span class="lua5-literal">95</span>, <span class="lua5-literal">96</span><span class="lua5-ctrl">}</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"You have killed all Serpentmen! Some Couatls are alive."</span>, <span> </span><span class="lua5-comment">-- partial completion message (optional)</span><br><br><span class="lua5-tab">&#9;</span>Exp <span class="lua5-note">=</span> <span class="lua5-literal">5000</span>,<br><span class="lua5-tab">&#9;</span>Gold <span class="lua5-note">=</span> <span class="lua5-literal">5000</span>,<br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Snakes!"</span>,<br><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"Kill all of them creatures in Abandoned Temple."</span>,<br><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"It's great that you've killed them! 5000 gold for you."</span>,<br><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"Just kill 'em, ok?"</span>,<br><span class="lua5-tab">&#9;</span>TopicDone <span class="lua5-note">=</span> <span class="lua5-literal">false</span>, <span> </span><span class="lua5-comment">-- hide the topic when the quest is completed</span><br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Quest <span class="lua5-note">=</span> <span class="lua5-str">"Kill all creatures in Abandoned Temple. Return to Dirthic in Clan Leader's Hall."</span>,<br><span class="lua5-tab">&#9;</span>Killed <span class="lua5-note">=</span> <span class="lua5-str">"You have killed all Couatls and Serpentmen!"</span>, <span> </span><span class="lua5-comment">-- completion message</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">KillMonstersQuest function takes a list of tasks that it checks with CheckMonstersKilled.</span><br><span class="lua5-comment">Here are ways of using CheckMonstersKilled:</span><br><span> </span><span class="lua5-comment">CheckMonstersKilled{} <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- killed all monsters on the map?</span><br><span> </span><span class="lua5-comment">CheckMonstersKilled{Group = 1} <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- killed all monsters belonging to group 1?</span><br><span> </span><span class="lua5-comment">CheckMonstersKilled{Monster = 7} <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- killed all monsters of kind 7 (Young Couatl)?</span><br><span> </span><span class="lua5-comment">CheckMonstersKilled{NameId = 3} <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- killed all monsters with NameId = 3 in placemon.txt (Dragon Hunter Pet)?</span><br><span> </span><span class="lua5-comment">CheckMonstersKilled{MonsterIndex = 5} <span> </span>-- killed monster with index 5 in Map.Monsters array?</span><br><span class="lua5-comment">Instead of a single number you can pass a table with numbers, like I do in this example.</span><br><span class="lua5-comment">Additonal parameters:</span><br><span> </span><span class="lua5-comment">Count <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- need to kill at least this many monsters</span><br><span> </span><span class="lua5-comment">InvisibleAsDead <span> </span><span> </span>-- treat invisible (that is, currently disabled) monsters as dead when counting (MM8 only. 'true' by default)</span><br><br><span class="lua5-comment">MM6 currently isn't supported, because it doesn't have evt.CheckMonstersKilled command. InvisibleAsDead = false is only supported in MM8.</span><br><br><span class="lua5-comment">KillMonstersQuest tasks have an extra required Map parameter. A quest can span across multiple maps.</span><br><br><span class="lua5-comment">You can specify partial completion messages. They are placed after a group of tasks. For example:</span><br><span class="lua5-comment">{task1},</span><br><span class="lua5-comment">{task2},</span><br><span class="lua5-comment">{task3},</span><br><span class="lua5-comment">"first 3 tasks done",</span><br><span class="lua5-comment">{task4},</span><br><span class="lua5-comment">{task5},</span><br><span class="lua5-comment">"tasks 4 and 5 done",</span><br><span class="lua5-comment">{task6},</span><br><span class="lua5-comment">"task 6 done",</span><br><br><span class="lua5-comment">KillMonstersQuest adds completion messages to Texts under names Killed1, Killed2, Killed3 and so on, for localization.</span><br><br><span class="lua5-comment">KillMonstersQuest supports all parameters of Quest function. It sets Quest parameter to 'true' if it isn't specified.</span><br><span class="lua5-comment">]]</span></div></div><label class="spoiler-label" for="spoiler5"></label><span class="spoiler-fade"></span></div>
<b>Multilevel Quest.lua</b> 

создаёт сложный древовидный диалог, но код остаётся вполне элегантным. Используется функция <a href="#QuestBranch">QuestBranch</a>.
<div class="spoiler"><input class="spoiler-checkbox" type="checkbox" id="spoiler6"/><div class="spoiler-scroll"><div class="spoiler-space"></div><div class="pre-spoiler"><span class="lua5-note">local</span> A, B, C, D, E, F <span class="lua5-note">=</span> <span class="lua5-literal">0</span>, <span class="lua5-literal">1</span>, <span class="lua5-literal">2</span>, <span class="lua5-literal">3</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">5</span><br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">This example demonstrates a complex branched dialog.</span><br><span class="lua5-comment">It isn't too easy to understand, but it's elegant.</span><br><span class="lua5-comment">It also shows how you can have item name as topic name and some other bells and whistles.</span><br><span class="lua5-comment">Go to the Clan Leader's Hall in Dagger Wound to see it in action.</span><br><span class="lua5-comment">--]]</span><br><br><span class="lua5-note">local</span> MyNPC <span class="lua5-note">=</span> <span class="lua5-literal">2</span> <span> </span><span class="lua5-comment">-- Dadeross in the lizards tavern</span><br><br><span class="lua5-comment">-- For fun: play sound when entering the conversation</span><br><span class="lua5-ctrl">function</span> events.EnterNPC(npc)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> npc <span class="lua5-operator">==</span> MyNPC <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.PlaySound(<span class="lua5-literal">130</span>) <span> </span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> SetBranch(t)<br><span class="lua5-tab">&#9;</span>QuestBranch(t.NewBranch)<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> ItemTopic(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- return 'false' if the quest is given, which means the item is given away</span><br><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> <span class="lua5-ctrl">not</span> vars.Quests[t.Name] <span class="lua5-ctrl">and</span> Game.ItemsTxt[t.MyItem].Name<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> GiveItem(t)<br><span class="lua5-tab">&#9;</span>evt.ForPlayer().Add(<span class="lua5-str">"Inventory"</span>, t.MyItem) <span> </span><span class="lua5-comment">-- give item</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- Game.PlaySound(205) <span> </span>-- make only sound</span><br><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Experience"</span>, <span class="lua5-literal">0</span>) <span> </span><span class="lua5-comment">-- make sound and animation</span><br><span class="lua5-tab">&#9;</span>evt.FaceAnimation(Game.CurrentPlayer, const.FaceAnimation.SmileHuge) <span> </span><span class="lua5-comment">-- a happy face</span><br><span class="lua5-tab">&#9;</span>QuestBranch(<span class="lua5-str">"Thanks"</span>)<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-comment">-- sipmlify similar quests creation</span><br><span class="lua5-note">local</span> QuestBase <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> MyQuest(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-std">table</span>.copy(QuestBase, t) <span> </span><span class="lua5-comment">-- copy common values</span><br><span class="lua5-tab">&#9;</span>QuestBase.Slot <span class="lua5-note">=</span> QuestBase.Slot <span class="lua5-ctrl">and</span> QuestBase.Slot <span class="lua5-operator">+</span> <span class="lua5-literal">1</span> <span> </span><span class="lua5-comment">-- auto-increment Slot</span><br><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> Quest(t)<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">Now, let's get to the quests themselves.</span><br><br><span class="lua5-comment">Dialog structure:</span><br><br><span class="lua5-comment">- Weapons</span><br><span> </span><span> </span><span class="lua5-comment">- Swords</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Sword 1</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Sword 2</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Sword 3</span><br><span> </span><span> </span><span class="lua5-comment">- Daggers</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Dagger 1</span><br><span> </span><span> </span><span class="lua5-comment">- Axes</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Axe 1</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Axe 2</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Axe 3</span><br><span> </span><span> </span><span class="lua5-comment">- Blasters</span><br><span class="lua5-comment">- Magic</span><br><span> </span><span> </span><span class="lua5-comment">- Book 1</span><br><span> </span><span> </span><span class="lua5-comment">- Book 2</span><br><span> </span><span> </span><span class="lua5-comment">- Book 3</span><br><span> </span><span> </span><span class="lua5-comment">- Book 4</span><br><span class="lua5-comment">- Dadeross' Letter to Fellmoon</span><br><span class="lua5-comment">- Certificate of Authentication (for Axe of Balthazar)</span><br><span class="lua5-comment">(+ Thanks screen)</span><br><span class="lua5-comment">]]</span><br><br>QuestNPC <span class="lua5-note">=</span> MyNPC<br><br><span class="lua5-comment">-- greeting</span><br><br>Greeting<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"I'm placed here to give you free stuff."</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Please choose your free stuff."</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- default topics</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span>Slot <span class="lua5-note">=</span> A<span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- get rid of standard topics of this NPC</span><br>MyQuest<span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br><span class="lua5-comment">-- A topic that's shown when there are no items left. This one is a bit hackish.</span><br><span class="lua5-comment">-- Since the quest-matching function goes from slot A to slot F, by the time it</span><br><span class="lua5-comment">-- asks for topic in slot F it has done all other slots. So, I check that these</span><br><span class="lua5-comment">-- slots have no topics and then enable the topic of this slot</span><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Ungive <span class="lua5-note">=</span> SetBranch,<br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">""</span>,<br><span class="lua5-tab">&#9;</span>GetTopic <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i <span class="lua5-note">=</span> <span class="lua5-literal">0</span>, <span class="lua5-literal">4</span> <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> Game.NPC[MyNPC].Events[i] <span class="lua5-operator">~=</span> <span class="lua5-literal">0</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> t.Texts.Topic<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Sorry, I don't have any of these"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Ungive <span class="lua5-note">=</span> <span class="lua5-str">"Sorry, I don't have any of these. Maybe you want something else?"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- base branch topics</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">""</span>, Slot <span class="lua5-note">=</span> A, Ungive <span class="lua5-note">=</span> SetBranch<span class="lua5-ctrl">}</span><br><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">"Weapons"</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Weapons"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Ungive <span class="lua5-note">=</span> <span class="lua5-str">"Choose which you prefer."</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">"Magic"</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Magic"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Ungive <span class="lua5-note">=</span> <span class="lua5-str">"I have a few books."</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Weapons branch</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">"Weapons"</span>, Slot <span class="lua5-note">=</span> A, Ungive <span class="lua5-note">=</span> SetBranch<span class="lua5-ctrl">}</span><br><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">"Swords"</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Swords"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">"Daggers"</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Daggers"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">"Axes"</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Axes"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">"Blasters"</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Blasters"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Swords branch</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">"Swords"</span>, Slot <span class="lua5-note">=</span> A,<br><span class="lua5-tab">&#9;</span>GetTopic <span class="lua5-note">=</span> ItemTopic,<br><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> GiveItem,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"Use it well!"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">1</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">10</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">502</span><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Daggers branch</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-std">table</span>.copy(QuestBase, <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">"Daggers"</span>, Slot <span class="lua5-note">=</span> A,<br><span class="lua5-ctrl">}</span>)<br><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">508</span><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Axes branch</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-std">table</span>.copy(QuestBase, <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">"Axes"</span>, Slot <span class="lua5-note">=</span> A,<br><span class="lua5-ctrl">}</span>)<br><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">34</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">37</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">541</span><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Magic branch</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-std">table</span>.copy(QuestBase, <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">"Magic"</span>, Slot <span class="lua5-note">=</span> A,<br><span class="lua5-ctrl">}</span>)<br><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">460</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">430</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">444</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">404</span><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Letter and Certificate of Authentication items in main branch</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-std">table</span>.copy(QuestBase, <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">""</span>, Slot <span class="lua5-note">=</span> C,<br><span class="lua5-ctrl">}</span>)<br><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">741</span><span class="lua5-ctrl">}</span> <span> </span><span class="lua5-comment">-- Dadeross' Letter to Fellmoon</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">732</span>, <span> </span><span class="lua5-comment">-- Certificate of Authentication</span><br><span class="lua5-tab">&#9;</span>CanShow <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> evt.All.Cmp(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">541</span>) <span> </span><span class="lua5-comment">-- check for Axe of Balthazar</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Thanks branch</span><br><br>NPCTopic<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">"Thanks"</span>, Slot <span class="lua5-note">=</span> A,<br><span class="lua5-tab">&#9;</span>Ungive <span class="lua5-note">=</span> SetBranch,<br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">""</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Thanks!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Maybe you want something else?"</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">Here's how dialog branches work:</span><br><br><span class="lua5-comment">A quest with Branch field is only shown if that's the current branch.</span><br><br><span class="lua5-comment">Current branch can be set with QuestBranch function:</span><br><span> </span><span class="lua5-comment">QuestBranch("BranchName")</span><br><span class="lua5-comment">You can also make the branch persist after you reenter NPC dialog:</span><br><span> </span><span class="lua5-comment">QuestBranch("BranchName", true)</span><br><span class="lua5-comment">Or you can obtain current branch:</span><br><span> </span><span class="lua5-comment">local branch = QuestBranch()</span><br><br><span class="lua5-comment">If there is no persisted branch name, when you enter NPC dialog the branch is set to "".</span><br><br><span class="lua5-comment">Branches support is really simple. Previous version of this example implemented it manually.</span><br><span class="lua5-comment">]]</span></div></div><label class="spoiler-label" for="spoiler6"></label><span class="spoiler-fade"></span></div>

В MM7 часть примеров тоже будет работать, если Вы найдёте персонажей, к которыми они применяются. Что касается MM6, в нём нет приветствий персонажей и всего 3 пункта диалога, плюс 2 исключительно текстовых пункта. Первый пример задания на нём должен работать.
<br>
<br>

<a id="Localization"></a><h3>Локализация</h3>

Чтобы сделать скрипт локализуемым, Вы должны в нём вызвать функцию <a href="#Localize">Localize</a>, передав ей таблицу со строками по умолчанию. Она вернёт таблицу с локализованными строками. См.  
<a href="#LocalizeScriptExample">предыдущий пример</a>.<br>



Для общих строк, используемых несколькими скриптами, используйте функцию <a href="#LocalizeAll">LocalizeAll</a>. Она работает так же, но Вам не потребуется возвращаемая ей таблица. Таблица, возвращаемая <a href="#Localize">Localize</a>, автоматически берёт отсутствующие строки из таблицы общих строк.<br>
Вообще, таблицы локализации могут содержать любые значения, а не только строки. В том числе, подтаблицы.<br>
Задания локализуются автоматически.
<br>
<br>

Локализация максимально автоматизирована. Функция <a href="#GenerateLocalization">GenerateLocalization()</a> автоматически извлекает информацию о локализации из всех скриптов и генерирует файлы локализации. Она накладывает ограничения на скрипты в папках <b>Maps</b> и <b>Modules</b>. Эти скрипты не должны ничего делать до вызова функций <a href="#Localize">Localize</a> и/или <a href="#LocalizeAll">LocalizeAll</a>. К тому же, каждую функцию они должны вызывать только 1 раз, иначе строки, переданные в последующих вызовах, могут быть проигнорированы.
<br>

Чтобы сгенерировать файлы локализации для всех скриптов, загрузите любую игру, нажмите Ctrl+F1, напишите <b>GenerateLocalization()</b> и нажмите Ctrl+Enter. В папке <b>Scripts\Localization</b> будут созданы следующие файлы:
<table class="table">
<tbody>
	<tr><td><i>&nbsp;Файл</i></td><td><i>&nbsp;Описание</i></td></tr>
	<tr><td>Quests.txt</td><td>Локализация заданий.</td></tr>
	<tr><td>Common.txt</td><td>Строки, переданные в функцию <a href="#LocalizeAll">LocalizeAll</a>.</td></tr>
	<tr><td>Scripts.txt</td><td>Строки, переданные в функцию <a href="#Localize">Localize</a>.</td></tr>
</tbody>
</table>
 Для редактирования этих файлов используйте <a href="https://sites.google.com/site/sergroj/wog/TxtEdit.rar">Txt Tables Editor</a>.<br>

 Или же можно запустить команду <b>GenerateLocalization(true)</b>, чтобы сгенерировать файлы локализации <b class="def-param">*.lua</b>. Выбирайте тот формат, который Вам удобнее.<br>

 Чтобы сгенерировать локализацию только для заданий, можно использовать команду <a href="#GenerateQuestsLocalization">GenerateQuestsLocalization()</a>.<br>
Чтобы сгенерировать локализацию для всего, кроме заданий, можно использовать команду <b>GenerateLocalization(false, false)</b>.
<br>
<br>

 Чтобы тестировать изменения локализации без перезапуска игры, можно создать скрит в папке <b>Global</b> со следующей строкой:
<br>
<div class="pre-outer"><div class="pre">ReloadLocalization()</div></div>

 После этого для для тестирования изменений локализации достаточно будет перезагрузить сохраненную игру.
<br>
<br>

<a id="Known-Issues"></a><h3>Известные ошибки</h3>
Не вызываёте <a href="#Evt-Commands">команды evt.*</a> из обработчика события <a href="#events.EnterNPC">events.EnterNPC</a> или <a href="#events.ShowNPCTopics">events.ShowNPCTopics</a> . Такой вызов изменит список команд и прекратит выполнение текущей последовательности.
<br>
<br>

<br>
<hr>
<a id="Examples"></a><h2>Примеры</h2>

Вы найдёте больше примеров в <a href="http://www.celestialheavens.com/forums/viewtopic.php?t=10423">теме для обсуждения MMExtension</a>.

<a id="Players-Skills-And-Spells"></a><h3>Умения и заклинания игроков</h3>

Здесь есть кое-какие скрипты, показывающие, как можно работать с умениями и заклинаниями. Скопируйте приглянувшийся скрипт в отладочную консоль, чтобы протестировать его.<br>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- learn all spells</span><br><span class="lua5-ctrl">for</span> _, pl <span class="lua5-ctrl">in</span> Party <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i <span class="lua5-ctrl">in</span> pl.Spells <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>pl.Spells[i] <span class="lua5-note">=</span> <span class="lua5-literal">true</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- give Expert Perception for all players</span><br><span class="lua5-ctrl">for</span> _, pl <span class="lua5-ctrl">in</span> Party <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> skill, mastery <span class="lua5-note">=</span> SplitSkill(pl.Skills[const.Skills.Perception])<br><span class="lua5-tab">&#9;</span>pl.Skills[const.Skills.Perception] <span class="lua5-note">=</span> JoinSkill(<span class="lua5-std">math</span>.<span class="lua5-std">max</span>(skill, <span class="lua5-literal">4</span>), <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(mastery, const.Expert))<br><span class="lua5-ctrl">end</span></div></div>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- get all skills at Master 12</span><br><span class="lua5-ctrl">for</span> _, pl <span class="lua5-ctrl">in</span> Party <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i, val <span class="lua5-ctrl">in</span> pl.Skills <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> skill, mastery <span class="lua5-note">=</span> SplitSkill(val)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>pl.Skills[i] <span class="lua5-note">=</span> JoinSkill(<span class="lua5-std">math</span>.<span class="lua5-std">max</span>(skill, <span class="lua5-literal">12</span>), <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(mastery, const.Master))<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- get all learned skills to Master 12</span><br><span class="lua5-ctrl">for</span> _, pl <span class="lua5-ctrl">in</span> Party <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i, val <span class="lua5-ctrl">in</span> pl.Skills <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> val <span class="lua5-operator">~=</span> <span class="lua5-literal">0</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> skill, mastery <span class="lua5-note">=</span> SplitSkill(val)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>pl.Skills[i] <span class="lua5-note">=</span> JoinSkill(<span class="lua5-std">math</span>.<span class="lua5-std">max</span>(skill, <span class="lua5-literal">12</span>), <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(mastery, const.Master))<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- learn all available skills at Expert</span><br><span class="lua5-ctrl">for</span> _, pl <span class="lua5-ctrl">in</span> Party <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i, learn <span class="lua5-ctrl">in</span> EnumAvailableSkills(pl.Class) <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> learn <span class="lua5-operator">&gt;=</span> const.Expert <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> skill, mastery <span class="lua5-note">=</span> SplitSkill(pl.Skills[i])<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>skill <span class="lua5-note">=</span> <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(skill, <span class="lua5-literal">4</span>) <span> </span><span class="lua5-comment">-- learn at least level 4</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mastery <span class="lua5-note">=</span> <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(mastery, const.Expert) <span> </span><span class="lua5-comment">-- learn the mastery</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>pl.Skills[i] <span class="lua5-note">=</span> JoinSkill(skill, mastery)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- learn all available skills at their maximum level</span><br><span class="lua5-note">local</span> LearnLevel <span class="lua5-note">=</span> (Game.Version <span class="lua5-operator">&gt;</span> <span class="lua5-literal">6</span> <span class="lua5-ctrl">and</span> <span class="lua5-ctrl">{</span><span class="lua5-literal">1</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">7</span>, <span class="lua5-literal">10</span><span class="lua5-ctrl">}</span> <span class="lua5-ctrl">or</span> <span class="lua5-ctrl">{</span><span class="lua5-literal">1</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">12</span><span class="lua5-ctrl">}</span>)<br><br><span class="lua5-ctrl">for</span> _, pl <span class="lua5-ctrl">in</span> Party <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i, learn <span class="lua5-ctrl">in</span> EnumAvailableSkills(pl.Class) <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> skill, mastery <span class="lua5-note">=</span> SplitSkill(pl.Skills[i])<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>skill <span class="lua5-note">=</span> <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(skill, LearnLevel[learn]) <span> </span><span class="lua5-comment">-- learn at least the usual needed level</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mastery <span class="lua5-note">=</span> <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(mastery, learn) <span> </span><span class="lua5-comment">-- learn the mastery</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>pl.Skills[i] <span class="lua5-note">=</span> JoinSkill(skill, mastery)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

<a id="Artifact-Bonuses"></a><h3>Бонусы артефактов</h3>
Giving Hareck's Leather an 'Of Earth Magic' enhancement. (untested)
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> events.CalcStatBonusByItems(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> t.Stat <span class="lua5-operator">~=</span> const.Stats.EarthMagic <span class="lua5-ctrl">or</span> t.Player.Skills[const.Skills.EarthMagic] <span class="lua5-operator">==</span> <span class="lua5-literal">0</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> item, slot <span class="lua5-ctrl">in</span> t.Player:EnumActiveItems() <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> item.Number <span class="lua5-operator">==</span> <span class="lua5-literal">516</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t:SetMagicBonus(SplitSkill(t.Player.Skills[const.Skill.EarthMagic]):div(<span class="lua5-literal">2</span>))<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>
Giving Hareck's Leather 'Armsmaster + 8' bonus. (untested)
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> events.CalcStatBonusByItems(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> t.Stat <span class="lua5-operator">~=</span> const.Stats.Armsmaster <span class="lua5-ctrl">or</span> t.Player.Skills[const.Skills.Armsmaster] <span class="lua5-operator">==</span> <span class="lua5-literal">0</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> item, slot <span class="lua5-ctrl">in</span> t.Player:EnumActiveItems() <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> item.Number <span class="lua5-operator">==</span> <span class="lua5-literal">516</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t:SetArtifactBonus(<span class="lua5-literal">8</span>)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>
Q: Is there a way to change values of enchantments? For example, to make Of the Gods one give say +30 stats instead of +10?<br>
A: (untested)
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> events.CalcStatBonusByItems(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> t.Stat <span class="lua5-operator">&gt;=</span> const.Stats.Might <span class="lua5-ctrl">and</span> t.Stat <span class="lua5-operator">&lt;=</span> const.Stats.Luck <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> it <span class="lua5-ctrl">in</span> t.Player:EnumActiveItems() <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> it.Bonus2 <span class="lua5-operator">==</span> <span class="lua5-literal">2</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t.Result <span class="lua5-note">=</span> t.Result <span class="lua5-operator">+</span> <span class="lua5-literal">20</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

<a id="Spells-Damage"></a><h3>Урон заклинания</h3>
Change damage of spell 2 &ndash; Flame Arrow. You can also make damage depend on <b class="def-param">t.Mastery</b> and <b class="def-param">t.HP</b> (monster hit points).
<div class="pre-outer"><div class="pre"><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> Randoms(<span class="lua5-std">min</span>, <span class="lua5-std">max</span>, count)<br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> r <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i <span class="lua5-note">=</span> <span class="lua5-literal">1</span>, count <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>r <span class="lua5-note">=</span> r <span class="lua5-operator">+</span> <span class="lua5-std">math</span>.<span class="lua5-std">random</span>(<span class="lua5-std">min</span>, <span class="lua5-std">max</span>)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> r<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-ctrl">function</span> events.CalcSpellDamage(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> t.Spell <span class="lua5-operator">==</span> <span class="lua5-literal">2</span> <span class="lua5-ctrl">then</span> <span> </span><span class="lua5-comment">-- Flame Arrow</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t.Result <span class="lua5-note">=</span> <span class="lua5-literal">100</span> <span class="lua5-operator">+</span> Randoms(<span class="lua5-literal">1</span>, <span class="lua5-literal">100</span>, t.Skill) <span> </span><span class="lua5-comment">-- 100 + (1-100) per skill level</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

<a id="Controlling-monsters-aggression-in-MM6"></a><h3>Управление агрессией монстров в MM6</h3>

Положите этот скрипт в папку <b>Scripts\Global</b>. Это делает лучников в Free Haven дружественными, а крестьян &ndash; агрессивными. В других местах лучники будут по-прежнему агрессивными, а крестьяне &ndash; дружелюбными.
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> events.BeforeLoadMap() <br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> Game.Map.Name <span class="lua5-operator">==</span> <span class="lua5-str">"outc2.odm"</span> <span class="lua5-ctrl">then</span> <br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>LocalMonstersTxt()<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.MonstersTxt[<span class="lua5-literal">1</span>].HostileType <span class="lua5-note">=</span> <span class="lua5-literal">0</span> <span> </span><span class="lua5-comment">-- ArcherA </span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.MonstersTxt[<span class="lua5-literal">2</span>].HostileType <span class="lua5-note">=</span> <span class="lua5-literal">0</span> <span> </span><span class="lua5-comment">-- ArcherB </span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.MonstersTxt[<span class="lua5-literal">3</span>].HostileType <span class="lua5-note">=</span> <span class="lua5-literal">0</span> <span> </span><span class="lua5-comment">-- ArcherC </span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.MonstersTxt[<span class="lua5-literal">121</span>].HostileType <span class="lua5-note">=</span> <span class="lua5-literal">4</span> <span> </span><span class="lua5-comment">-- PeasantF1A </span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.MonstersTxt[<span class="lua5-literal">122</span>].HostileType <span class="lua5-note">=</span> <span class="lua5-literal">4</span> <span> </span><span class="lua5-comment">-- PeasantF1B </span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.MonstersTxt[<span class="lua5-literal">123</span>].HostileType <span class="lua5-note">=</span> <span class="lua5-literal">4</span> <span> </span><span class="lua5-comment">-- PeasantF1C </span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>

Вместо проверки имени карты вы можете поставить любое условие. Например, после того как игрок выполнит задание, вы можете сделать некоторых монстров дружественными или агрессивными.<br>
<br>

<a id="Flowers-you-can-pick-up-(MM8)"></a><h3>Цветы, которые можно подобрать (MM8)</h3>

Положите этот скрипт в папку <b>Scripts\Global</b>.
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- You can find such flowers in Ravenshore at X = 16921, Y = 4112</span><br><span class="lua5-comment">-- Flowers disappear when picked up, which makes life easier than in Barrels script</span><br><span class="lua5-comment">-- The game remembers which sprites are hidden by itself</span><br><br><span class="lua5-note">local</span> SpriteEvents <span class="lua5-note">=</span> <span class="lua5-literal">20000</span><br><span class="lua5-note">local</span> TXT <span class="lua5-note">=</span> Localize<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>FlowerHint <span class="lua5-note">=</span> <span class="lua5-str">"Flowers"</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> Flower(EvtId)<br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> i <span class="lua5-note">=</span> EvtId &ndash; SpriteEvents<br><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">208</span>)<br><span class="lua5-tab">&#9;</span>evt.SetSprite(i, <span class="lua5-literal">false</span>) <span> </span><span class="lua5-comment">-- alternatively, for the same effect: <span> </span>Map.Sprites[i].Invisible = true</span><br><span class="lua5-ctrl">end</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> InitFlower(i, a)<br><span class="lua5-tab">&#9;</span>a.Event <span class="lua5-note">=</span> SpriteEvents <span class="lua5-operator">+</span> i<br><span class="lua5-tab">&#9;</span>evt.map[SpriteEvents <span class="lua5-operator">+</span> i] <span class="lua5-note">=</span> Flower<br><span class="lua5-tab">&#9;</span>evt.hint[SpriteEvents <span class="lua5-operator">+</span> i] <span class="lua5-note">=</span> TXT.FlowerHint<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-ctrl">function</span> events.LoadMap()<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i, a <span class="lua5-ctrl">in</span> Map.Sprites <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> a.DecName <span class="lua5-operator">==</span> <span class="lua5-str">"plant27"</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>InitFlower(i, a)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

<a id="Unusually-looking-barrels-(MM7)"></a><h3>Необычно выглядящие бочки (MM7)</h3>
Положите этот скрипт в папку <b>Scripts\Global</b>, чтобы превратить деревья в бочки.
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- Turns trees into barrels</span><br><br><span class="lua5-note">local</span> SpriteEvents <span class="lua5-note">=</span> <span class="lua5-literal">20000</span><br><span class="lua5-note">local</span> TopicBase <span class="lua5-note">=</span> <span class="lua5-literal">383</span><br><span class="lua5-note">local</span> TextBase <span class="lua5-note">=</span> <span class="lua5-literal">582</span><br><span class="lua5-note">local</span> Reorder <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span>[<span class="lua5-literal">0</span>] <span class="lua5-note">=</span> <span class="lua5-literal">0</span>, <span class="lua5-literal">1</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">3</span>, <span class="lua5-literal">5</span>, <span class="lua5-literal">2</span>, <span class="lua5-literal">6</span>, <span class="lua5-literal">7</span><span class="lua5-ctrl">}</span> <span> </span><span class="lua5-comment">-- NPC topics order is messed up</span><br><span class="lua5-note">local</span> AutonotesBase <span class="lua5-note">=</span> <span class="lua5-literal">32</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> Barrel(EvtId)<br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> i <span class="lua5-note">=</span> EvtId &ndash; SpriteEvents<br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> v <span class="lua5-note">=</span> mapvars.Barrels[i]<br><span class="lua5-tab">&#9;</span>Game.ShowStatusText(Game.NPCText[TextBase <span class="lua5-operator">+</span> Reorder[v]])<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> v <span class="lua5-operator">&gt;</span> <span class="lua5-literal">0</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(evt.VarNum.BaseStats[v &ndash; <span class="lua5-literal">1</span>], <span class="lua5-literal">2</span>)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Set(<span class="lua5-str">"AutonotesBits"</span>, AutonotesBase <span class="lua5-operator">+</span> v)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mapvars.Barrels[i] <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.hint[SpriteEvents <span class="lua5-operator">+</span> i] <span class="lua5-note">=</span> Game.NPCTopic[TopicBase]<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> InitBarrel(i, a)<br><span class="lua5-tab">&#9;</span>mapvars.Barrels <span class="lua5-note">=</span> mapvars.Barrels <span class="lua5-ctrl">or</span> <span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br><span class="lua5-tab">&#9;</span>mapvars.Barrels[i] <span class="lua5-note">=</span> mapvars.Barrels[i] <span class="lua5-ctrl">or</span> <span class="lua5-std">math</span>.<span class="lua5-std">random</span>(<span class="lua5-literal">1</span>, <span class="lua5-literal">7</span>)<br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>a.Event <span class="lua5-note">=</span> SpriteEvents <span class="lua5-operator">+</span> i<br><span class="lua5-tab">&#9;</span>evt.map[SpriteEvents <span class="lua5-operator">+</span> i] <span class="lua5-note">=</span> Barrel<br><span class="lua5-tab">&#9;</span>evt.hint[SpriteEvents <span class="lua5-operator">+</span> i] <span class="lua5-note">=</span> Game.NPCTopic[TopicBase <span class="lua5-operator">+</span> Reorder[mapvars.Barrels[i]]]<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-ctrl">function</span> events.LoadMap()<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i, a <span class="lua5-ctrl">in</span> Map.Sprites <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> a.DecName <span class="lua5-ctrl">and</span> a.DecName:match(<span class="lua5-str">"^tree"</span>) <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>InitBarrel(i, a)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

<a id="Other-Examples"></a><h3>Еще примеры</h3>
Призвать монстра (крестьянина):
<div class="pre-outer"><div class="pre"><span class="lua5-note">local</span> mon <span class="lua5-note">=</span> SummonMonster(<span class="lua5-literal">151</span>, Party.X, Party.Y, Party.Z, <span class="lua5-literal">true</span>)<br>mon.NPC_ID <span class="lua5-note">=</span> <span class="lua5-literal">52</span><br>mon.Hostile <span class="lua5-note">=</span> <span class="lua5-literal">false</span></div></div>
<br>
Посмотреть номер глобального события (скопируйте в консоль, чтобы легко увидеть, какое событие вызывает пункт диалога):
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- on:</span><br><span class="lua5-ctrl">function</span> events.EvtGlobal(evt)<br><span class="lua5-tab">&#9;</span>Message(evt)<br><span class="lua5-ctrl">end</span></div></div>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- off:</span><br>events.EvtGlobal.clear()</div></div>
<br>
Посмотреть номера текущего дома и NPC (вызывайте из консоли):
<div class="pre-outer"><div class="pre">Game.GetCurrentHouse(), GetCurrentNPC()</div></div>
<br>
Q: How to change the home position after the death of the team on current map?<br>
A: Pass any coordinates in call to <a href="#XYZ">XYZ</a> and set any <a href="#structs.GameParty.Direction">Direction</a>:
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> events.DeathMap(t)<br><span class="lua5-tab">&#9;</span>t.Name <span class="lua5-note">=</span> <span class="lua5-str">"out05.odm"</span><br><span class="lua5-tab">&#9;</span>XYZ(Party, <span class="lua5-literal">0</span>, <span class="lua5-literal">0</span>, <span class="lua5-literal">0</span>)<br><span class="lua5-tab">&#9;</span>Party.Direction <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-tab">&#9;</span>Party.LookAngle <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-ctrl">end</span></div></div>
<br>
Changing starting map (similar to previous example):
<div class="pre-outer"><div class="pre">Game.NewGameMap <span class="lua5-note">=</span> <span class="lua5-str">"out05.odm"</span><br><span class="lua5-ctrl">function</span> events.NewGameMap()<br><span class="lua5-tab">&#9;</span>XYZ(Party, <span class="lua5-literal">0</span>, <span class="lua5-literal">0</span>, <span class="lua5-literal">0</span>)<br><span class="lua5-tab">&#9;</span>Party.Direction <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-tab">&#9;</span>Party.LookAngle <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-ctrl">end</span></div></div>
<br>
Q: How to run a method when a user presses a specific key?<br>
Method 1:
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> Keys.F1(t)<br><span class="lua5-tab">&#9;</span>Message(<span class="lua5-str">"F1 pressed"</span>)<br><span class="lua5-ctrl">end</span></div></div>
Method 2:
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> events.KeyDown(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> t.Key <span class="lua5-operator">==</span> const.Keys.F1 <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Message(<span class="lua5-str">"F1 pressed"</span>)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
Absolete method provided for backward compatibility: <i>(This is NOT the same as setting Keys.F1)</i>
<div class="pre-outer"><div class="pre">Keys[const.Keys.F1] <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span>Message(<span class="lua5-str">"F1 pressed"</span>)<br><span class="lua5-ctrl">end</span></div></div>
<br>
<!--
<div class="pre-outer"><div class="pre"></div></div>
<br>

<div class="pre-outer"><div class="pre"></div></div>
<br>

<div class="pre-outer"><div class="pre"></div></div>
<br>

<div class="pre-outer"><div class="pre"></div></div>
<br>

<div class="pre-outer"><div class="pre"></div></div>
<br>
-->
<br>
<hr>




<br>
<a id="Evt-Commands"></a><h2>Evt Commands</h2>



<br>
<a id="evt.EnterHouse"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>evt.EnterHouse</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 In 2DEvents.txt<br>600 = you won<br>601 = you won 2 / you lost
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.PlaySound"></a><h3>evt.PlaySound</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.MoveToMap"></a><h3>evt.MoveToMap</h3>
 Notes:<br>If cancel is pressed, event execution is stopped<br>If <b class="def-param">X</b>, <b class="def-param">Y</b>, <b class="def-param">Z</b>, <b class="def-param">Direction</b>, <b class="def-param">LookAngle</b>, <b class="def-param">SpeedZ</b> are all 0, the party isn't moved<br>If <b class="def-param">HouseId</b> and <b class="def-param">Icon</b> are 0, the enter dungeon dialog isn't shown<br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Direction
</td><td class="def-right">
 -1 = special case
</td>
</tr><tr>
<td class="def-left">
LookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
SpeedZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
HouseId
</td><td class="def-right">
 In 2DEvents.txt
</td>
</tr><tr>
<td class="def-left">
Icon
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Name
</td><td class="def-right">
 if unspecified or starts with "0" =&gt; current map
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.OpenChest"></a><h3>evt.OpenChest</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.FaceExpression"></a><h3>evt.FaceExpression</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.Players">Player</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Frame
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.DamagePlayer"></a><h3>evt.DamagePlayer</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.Players">Player</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a href="#const.Damage">DamageType</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Damage
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetSnow"></a><h3>evt.SetSnow</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
EffectId
</td><td class="def-right">
 Only 0 available
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetTexture"></a><h3>evt.SetTexture</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Facet
</td><td class="def-right">
 <span class="def-ver">[MM6]</span> <span class="def-nbsp"> </span>Index in <a href="#structs.GameMap.Facets">Map.Facets</a> indoors.<br><span class="def-ver">[MM7+]</span> <span class="def-nbsp"> </span>Id of facets group.
</td>
</tr><tr>
<td class="def-left">
Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetTextureOutdoors"></a><h3>evt.SetTextureOutdoors</h3>
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Model
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Facet
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.ShowMovie"></a><h3>evt.ShowMovie</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
DoubleSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
ExitCurrentScreen
</td><td class="def-right">
 Use <b class="def-param">true</b> only before using <a href="#evt.MoveToMap">evt.MoveToMap</a> command in houses and before showing game ending.<br>Prevents loading of house anmation after the movie stops playing, but doesn't exit the screen properly.
</td>
</tr><tr>
<td class="def-left">
Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetSprite"></a><h3>evt.SetSprite</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
SpriteId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Visible
</td><td class="def-right">
 bit 0x20 of sprite
</td>
</tr><tr>
<td class="def-left">
Name
</td><td class="def-right">
 If <b class="def-param">Name</b> is unspecified or "0", the sprite isn't changed
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.Cmp"></a><h3>evt.Cmp</h3>
 Usually performs Variable &gt;= Value comparison<br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.VarNum">VarNum</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Value
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetDoorState"></a><h3>evt.SetDoorState</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
State
</td><td class="def-right">
 0 &ndash; state (0),<br>1 &ndash; state (1),<br>2 &ndash; switch state if the door isn't moving,<br>3 &ndash; switch state
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.Add"></a><h3>evt.Add</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.VarNum">VarNum</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Value
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.Subtract"></a><h3>evt.Subtract</h3>
 Also available as <b class="def-param">evt.Sub</b>.<br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.VarNum">VarNum</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Value
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.Set"></a><h3>evt.Set</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.VarNum">VarNum</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Value
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SummonMonsters"></a><h3>evt.SummonMonsters</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
TypeIndexInMapStats
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Level
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Count
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
NPCGroup
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
unk
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.CastSpell"></a><h3>evt.CastSpell</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Spell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a href="#const">Mastery</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Skill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
FromX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
FromY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
FromZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
ToX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
ToY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
ToZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SpeakNPC"></a><h3>evt.SpeakNPC</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPC
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetFacetBit"></a><h3>evt.SetFacetBit</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 <span class="def-ver">[MM6]</span> <span class="def-nbsp"> </span>Index in <a href="#structs.GameMap.Facets">Map.Facets</a> indoors.<br><span class="def-ver">[MM7+]</span> <span class="def-nbsp"> </span>Id of facets group.
</td>
</tr><tr>
<td class="def-left">
<a href="#const.FacetBits">Bit</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetFacetBitOutdoors"></a><h3>evt.SetFacetBitOutdoors</h3>
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Model
</td><td class="def-right">
 Model index in <a href="#structs.GameMap.Models">Map.Models</a>
</td>
</tr><tr>
<td class="def-left">
Facet
</td><td class="def-right">
 -1 = for all faces of the model
</td>
</tr><tr>
<td class="def-left">
<a href="#const.FacetBits">Bit</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetMonsterBit"></a><h3>evt.SetMonsterBit</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Monster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a href="#const.MonsterBits">Bit</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.Question"></a><h3>evt.Question</h3>
 Use <a href="#Question">Question</a> function instead, e.g.<div class="def-codeblock"><span class="lua5-ctrl">if</span> Question(<span class="lua5-str">"Restricted area - Keep out."</span>, <span class="lua5-str">"What's the password?"</span>):<span class="lua5-std">lower</span>() <span class="lua5-operator">==</span> <span class="lua5-str">"jbard"</span> <span class="lua5-ctrl">then</span> ...</div><br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Question
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Answer1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Answer2
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.StatusText"></a><h3>evt.StatusText</h3>
 Use <a href="#structs.GameStructure.ShowStatusText">Game.ShowStatusText</a> function instead, e.g.<div class="def-codeblock">Game.ShowStatusText(<span class="lua5-str">"Hi!"</span>)</div><br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Str
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetMessage"></a><h3>evt.SetMessage</h3>
 Use <a href="#Message">Message</a> function instead, e.g.<div class="def-codeblock">Message(<span class="lua5-str">"Hi!"</span>)</div><br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Str
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetLight"></a><h3>evt.SetLight</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 <span class="def-ver">[MM6, MM7]</span> <span class="def-nbsp"> </span><a href="#structs.GameMap.Lights">Map.Lights</a> index<br><span class="def-ver">[MM8]</span> <span class="def-nbsp"> </span>Light group id
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SimpleMessage"></a><h3>evt.SimpleMessage</h3>
 Use <a href="#Message">Message</a> function instead, e.g.<div class="def-codeblock">Message(<span class="lua5-str">"Hi!"</span>)</div><br><br>
&nbsp;<i>Нет параметров.</i><br>
</td>
</tr>
<tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SummonObject"></a><h3>evt.SummonObject</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Item
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  Item index. Index over 1000 means random item of the same kind as <b class="def-param">Item</b> % 1000 of strength <b class="def-param">Item</b> div 1000. For backward compatibility, this parameter can also be called <b class="def-param">Type</b>.
</td>
</tr><tr>
<td class="def-left">
Type
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  Object kind index (ObjList.txt)
</td>
</tr><tr>
<td class="def-left">
X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Speed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Count
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
RandomAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.ForPlayer"></a><h3>evt.ForPlayer</h3>
 Sets current player and returns <b class="def-param">evt</b>. You can thus write things like this:<div class="def-codeblock"><span class="lua5-tab">&#9;</span>evt.ForPlayer(<span class="lua5-str">"All"</span>).Add(<span class="lua5-str">"Exp"</span>, <span class="lua5-literal">1000</span>)</div><br>You can also manipulate <a href="#evt.Player">evt.Player</a> and <a href="#evt.CurrentPlayer">evt.CurrentPlayer</a> variables directly.<br>Usually a better approach is to specify player after <b class="def-param">evt</b>, this way it only effects one call that follows:<div class="def-codeblock"><span class="lua5-tab">&#9;</span>evt.All.Add(<span class="lua5-str">"Exp"</span>, <span class="lua5-literal">1000</span>)<br><span class="lua5-tab">&#9;</span>evt[<span class="lua5-literal">0</span>].Add(<span class="lua5-str">"Gold"</span>, <span class="lua5-literal">1000</span>)</div><br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.Players">Player</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetNPCTopic"></a><h3>evt.SetNPCTopic</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPC
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Index
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Event
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.MoveNPC"></a><h3>evt.MoveNPC</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPC
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
HouseId
</td><td class="def-right">
 In 2DEvents.txt
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.GiveItem"></a><h3>evt.GiveItem</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Strength
</td><td class="def-right">
 1-6 (like described at the end of STDITEMS.TXT)
</td>
</tr><tr>
<td class="def-left">
<a href="#const.ItemType">Type</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Id
</td><td class="def-right">
 If <b class="def-param">Id</b> is 0, a random item is chosen from the specified class with specified strength,<br>otherwise, <b class="def-param">Type</b> and <b class="def-param">Strength</b> determine the enchantments
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.ChangeEvent"></a><h3>evt.ChangeEvent</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NewEvent
</td><td class="def-right">
 Changes global event for barrels, pedestals etc. The kinds of sprites with such events are hard-coded.
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.CheckSkill"></a><h3>evt.CheckSkill</h3>
 Checks that the skill meets specified <b class="def-param">Mastery</b> and <b class="def-param">Level</b> requirements<br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#const.Skills">Skill</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a href="#const">Mastery</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Level
</td><td class="def-right">
 Includes "Double effect" enchantments and NPC bonuses
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetNPCGroupNews"></a><h3>evt.SetNPCGroupNews</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPCGroup
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
NPCNews
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetMonsterGroup"></a><h3>evt.SetMonsterGroup</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Monster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
NPCGroup
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetNPCItem"></a><h3>evt.SetNPCItem</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPC
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Item
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetNPCGreeting"></a><h3>evt.SetNPCGreeting</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPC
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Greeting
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.CheckMonstersKilled"></a><h3>evt.CheckMonstersKilled</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
CheckType
</td><td class="def-right">
 0 &ndash; any monster, 1 &ndash; in group, 2 &ndash; of type, 3 &ndash; specific monster, 4 &ndash; specific monster by name (MM8)
</td>
</tr><tr>
<td class="def-left">
Id
</td><td class="def-right">
 Depending on <b class="def-param">CheckType</b>: 0 &ndash; not used, 1 &ndash; group id, 2 &ndash; monster type minus 1, 3 &ndash; monster id, 4 &ndash; id in placemon.txt (MM8 only)
</td>
</tr><tr>
<td class="def-left">
Count
</td><td class="def-right">
 0 &ndash; all must be killed, else a number of monsters that must be killed
</td>
</tr><tr>
<td class="def-left">
InvisibleAsDead
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  1 (default) &ndash; treat invisible (that is, currently disabled, like pirates in Ravenshore before you enter Regna) monsters as dead when counting, 0 &ndash; include invisible monsters
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.ChangeGroupToGroup"></a><h3>evt.ChangeGroupToGroup</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Old
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
New
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.ChangeGroupAlly"></a><h3>evt.ChangeGroupAlly</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPCGroup
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Ally
</td><td class="def-right">
 Monster class that guards this group. That is, <span class="def-code">(Id <span class="lua5-operator">+</span> <span class="lua5-literal">2</span>):div(<span class="lua5-literal">3</span>)</span>, like in Hostile.txt.
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.CheckSeason"></a><h3>evt.CheckSeason</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Season
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetMonGroupBit"></a><h3>evt.SetMonGroupBit</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPCGroup
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a href="#const.MonsterBits">Bit</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetChestBit"></a><h3>evt.SetChestBit</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
ChestId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a href="#const.ChestBits">Bit</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.FaceAnimation"></a><h3>evt.FaceAnimation</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.Players">Player</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Animation
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetMonsterItem"></a><h3>evt.SetMonsterItem</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Monster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Item
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Has
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.StopDoor"></a><h3>evt.StopDoor</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.CheckItemsCount"></a><h3>evt.CheckItemsCount</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
MinItemIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
MaxItemIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Count
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.RemoveItems"></a><h3>evt.RemoveItems</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
MinItemIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
MaxItemIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Count
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.Jump"></a><h3>evt.Jump</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
ZAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Speed
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.IsTotalBountyInRange"></a><h3>evt.IsTotalBountyInRange</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
MinGold
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
MaxGold
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.IsPlayerInParty"></a><h3>evt.IsPlayerInParty</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 Roster.txt
</td>
</tr></tbody>
</table>
<br>


<br>
<hr>
<a id="Events"></a><h2>Events</h2>



<br>
<a id="Core-events.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>events.lua</h3>
 
&nbsp;<i class="def-ib">События:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="events.CalcSpellDamage" class="abs"></a><h4 class="def-h4">CalcSpellDamage</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>HP<br><span class="def-nbsp">  </span>HitPoints<br><span class="def-nbsp">  </span><a href="#const">Mastery</a><br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>Skill<br><span class="def-nbsp">  </span>Spell<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.WalkToMap" class="abs"></a><h4 class="def-h4">WalkToMap</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Days <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span>EnterMap<br><span class="def-nbsp">  </span>EnterSide <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span>LeaveMap<br><span class="def-nbsp">  </span>LeaveSide <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span>X<br><span class="def-nbsp">  </span>Y<br><b class="def-rargs">}</b>
</td><td class="def-right">
 Sides:<br><span class="def-nbsp">  </span>0, "up", "down", "left", "right".<br><span class="def-nbsp">  </span>0 means "party start" sprite.
</td>
</tr><tr>
<td class="def-left">
<a id="events.NewGameMap" class="abs"></a><h4 class="def-h4">NewGameMap</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>AutoFallStart<br><span class="def-nbsp">  </span>Set<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">Set</b><b class="def-largs-i">(</b>x, y, z, direction, lookAngle, speedZ<b class="def-rargs-i">)</b> function sets both party position (saved in autosave) and map transition (used on start immediately).
</td>
</tr><tr>
<td class="def-left">
<a id="events.DeathMap" class="abs"></a><h4 class="def-h4">DeathMap</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Name<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.FogRange" class="abs"></a><h4 class="def-h4">FogRange</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GameInitialized1" class="abs"></a><h4 class="def-h4">GameInitialized1</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 loaded .bin data
</td>
</tr><tr>
<td class="def-left">
<a id="events.GameInitialized2" class="abs"></a><h4 class="def-h4">GameInitialized2</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 loaded .txt data
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanSaveGame" class="abs"></a><h4 class="def-h4">CanSaveGame</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>IsArena<br><span class="def-nbsp">  </span>SaveKind<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">SaveKind</b>: 0 &ndash; normal, 1 &ndash; autosave, 2 &ndash; quick save
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanCastLloyd" class="abs"></a><h4 class="def-h4">CanCastLloyd</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.IsUnderwater" class="abs"></a><h4 class="def-h4">IsUnderwater</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Map<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="events.SetMapNoNPC" class="abs"></a><h4 class="def-h4">SetMapNoNPC</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 <span class="def-ver">[MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="events.EnterNPC" class="abs"></a><h4 class="def-h4">EnterNPC</h4><b class="def-largs">(</b>i<b class="def-rargs">)</b>
</td><td class="def-right">
 Known issue: You shouldn't call any evt.* commands from inside a handler of this event
</td>
</tr><tr>
<td class="def-left">
<a id="events.ShowNPCTopics" class="abs"></a><h4 class="def-h4">ShowNPCTopics</h4><b class="def-largs">(</b>i<b class="def-rargs">)</b>
</td><td class="def-right">
 Known issue: You shouldn't call any evt.* commands from inside a handler of this event
</td>
</tr><tr>
<td class="def-left">
<a id="events.DrawNPCGreeting" class="abs"></a><h4 class="def-h4">DrawNPCGreeting</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>NPC<br><span class="def-nbsp">  </span>Seen<br><span class="def-nbsp">  </span>Text<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.WindowMessage" class="abs"></a><h4 class="def-h4">WindowMessage</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span>LParam<br><span class="def-nbsp">  </span>Msg<br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>WParam<br><span class="def-nbsp">  </span>Window<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.KeyDown" class="abs"></a><h4 class="def-h4">KeyDown</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Alt<br><span class="def-nbsp">  </span>ExtendedKey<br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span><a href="#const.Keys">Key</a><br><span class="def-nbsp">  </span>WasPressed<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.KeyUp" class="abs"></a><h4 class="def-h4">KeyUp</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Alt<br><span class="def-nbsp">  </span>ExtendedKey<br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span><a href="#const.Keys">Key</a><br><span class="def-nbsp">  </span>WasPressed<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.PostRender" class="abs"></a><h4 class="def-h4">PostRender</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.Action" class="abs"></a><h4 class="def-h4">Action</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Action<br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span>Param<br><span class="def-nbsp">  </span>Param2<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.MenuAction" class="abs"></a><h4 class="def-h4">MenuAction</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Action<br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span>Param<br><span class="def-nbsp">  </span>Param2<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanExitNPC" class="abs"></a><h4 class="def-h4">CanExitNPC</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>NPC<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.ExitNPC" class="abs"></a><h4 class="def-h4">ExitNPC</h4><b class="def-largs">(</b>i<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.ExitHouseScreen" class="abs"></a><h4 class="def-h4">ExitHouseScreen</h4><b class="def-largs">(</b>Game.HouseScreen<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanTeachSkillMastery" class="abs"></a><h4 class="def-h4">CanTeachSkillMastery</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>Cost<br><span class="def-nbsp">  </span>Mastery<br><span class="def-nbsp">  </span>Skill<br><span class="def-nbsp">  </span>Text<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.PopulateHouseDialog" class="abs"></a><h4 class="def-h4">PopulateHouseDialog</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span>PicType<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.PopulateLearnSkillsDialog" class="abs"></a><h4 class="def-h4">PopulateLearnSkillsDialog</h4><b class="def-largs">(</b>{}<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.KeysFilter" class="abs"></a><h4 class="def-h4">KeysFilter</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#const.Keys">Key</a><br><span class="def-nbsp">  </span>On<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.BeforeSaveGame" class="abs"></a><h4 class="def-h4">BeforeSaveGame</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.AfterSaveGame" class="abs"></a><h4 class="def-h4">AfterSaveGame</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.SkyBitmap" class="abs"></a><h4 class="def-h4">SkyBitmap</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>FirstVisit<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.ShowMovie" class="abs"></a><h4 class="def-h4">ShowMovie</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>CallDefault = function<b class="def-largs-i">(</b><b class="def-rargs-i">)</b><br><span class="def-nbsp">  </span>DoubleSize<br><span class="def-nbsp">  </span>ExitCurrentScreen<br><span class="def-nbsp">  </span>Name<br><span class="def-nbsp">  </span>Y<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CalcStatBonusByItems" class="abs"></a><h4 class="def-h4">CalcStatBonusByItems</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>ArtifactBonus <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span>IgnoreExtraHand<br><span class="def-nbsp">  </span>MagicBonus <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>SetArtifactBonus<br><span class="def-nbsp">  </span>SetMagicBonus<br><span class="def-nbsp">  </span><a href="#const.Stats">Stat</a><br><b class="def-rargs">}</b>
</td><td class="def-right">
 Here's how <b class="def-param">SetArtifactBonus</b><b class="def-largs-i">(</b>value<b class="def-rargs-i">)</b> method works:<br><span class="def-nbsp">  </span><span class="def-ver">[MM7+]</span> If <b class="def-param">value</b> is bigger than <b class="def-param">ArtifactBonus</b>, it modifies <b class="def-param">ArtifactBonus</b> and increases <b class="def-param">Result</b>.<br><span class="def-nbsp">  </span><span class="def-ver">[MM6]</span> It just adds the <b class="def-param">value</b> to <b class="def-param">Result</b>. The game does the same, but only includes one instance of each artifact into consideration.<br><br><b class="def-param">SetMagicBonus</b> does the same to <b class="def-param">MagicBonus</b>.
</td>
</tr><tr>
<td class="def-left">
<a id="events.CalcStatBonusByMagic" class="abs"></a><h4 class="def-h4">CalcStatBonusByMagic</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span><a href="#const.Stats">Stat</a><br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CalcStatBonusBySkills" class="abs"></a><h4 class="def-h4">CalcStatBonusBySkills</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span><a href="#const.Stats">Stat</a><br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetSkill" class="abs"></a><h4 class="def-h4">GetSkill</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>Skill<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetAttackDelay" class="abs"></a><h4 class="def-h4">GetAttackDelay</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Ranged<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CalcDamageToPlayer" class="abs"></a><h4 class="def-h4">CalcDamageToPlayer</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Damage<br><span class="def-nbsp">  </span><a href="#const.Damage">DamageKind</a><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.DoBadThingToPlayer" class="abs"></a><h4 class="def-h4">DoBadThingToPlayer</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a> <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span>MonsterIndex <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span><a href="#const.MonsterBonus">Thing</a><br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanTempleHealPlayer" class="abs"></a><h4 class="def-h4">CanTempleHealPlayer</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span>Player<br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetStatisticEffect" class="abs"></a><h4 class="def-h4">GetStatisticEffect</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>Value<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.UseMouseItem" class="abs"></a><h4 class="def-h4">UseMouseItem</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">ActivePlayer</a><br><span class="def-nbsp">  </span>ActivePlayerIndex<br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>CallDefault = function<b class="def-largs-i">(</b><b class="def-rargs-i">)</b><br><span class="def-nbsp">  </span>IsPortraitClick<br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.Regeneration" class="abs"></a><h4 class="def-h4">Regeneration</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>HP<br><span class="def-nbsp">  </span>Player<br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>SP<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">HP</b> and <b class="def-param">SP</b> don't include regeneration values assigned by the game, but setting them takes care of conditions
</td>
</tr><tr>
<td class="def-left">
<a id="events.ModifyItemDamage" class="abs"></a><h4 class="def-h4">ModifyItemDamage</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Damage<br><span class="def-nbsp">  </span>Item<br><span class="def-nbsp">  </span>MonsterId<br><span class="def-nbsp">  </span>Player<br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>Slot<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetShopItemTreatment" class="abs"></a><h4 class="def-h4">GetShopItemTreatment</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Action<br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span>HouseType<br><span class="def-nbsp">  </span>Item<br><span class="def-nbsp">  </span>Player<br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">Action</b>: "buy", "sell", "identify", "repair"<br><b class="def-param">Result</b>: 0-based option from merchant.txt<br><b class="def-param">GetDefault</b><b class="def-largs-i">(</b>HouseType, House, Item, Action, Player<b class="def-rargs-i">)</b> function lets you get item treatment by another shop type (all parameters are optional)
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanShopOperateOnItem" class="abs"></a><h4 class="def-h4">CanShopOperateOnItem</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span>HouseType<br><span class="def-nbsp">  </span>Item<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">GetDefault</b><b class="def-largs-i">(</b>House, Item<b class="def-rargs-i">)</b> function lets you get item treatment by another shop type (all parameters are optional)
</td>
</tr><tr>
<td class="def-left">
<a id="events.ShopItemsGenerated" class="abs"></a><h4 class="def-h4">ShopItemsGenerated</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span>HouseType<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GuildItemsGenerated" class="abs"></a><h4 class="def-h4">GuildItemsGenerated</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span>HouseType<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.MonsterKilled" class="abs"></a><h4 class="def-h4">MonsterKilled</h4><b class="def-largs">(</b><a href="#structs.MapMonster">mon</a>, monIndex, defaultHandler, <a href="#structs.Player">player</a>, playerIndex<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">player</b> and <b class="def-param">playerIndex</b> parameters are only passed in some cases
</td>
</tr><tr>
<td class="def-left">
<a id="events.ItemAdditionalDamage" class="abs"></a><h4 class="def-h4">ItemAdditionalDamage</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#const.Damage">DamageKind</a><br><span class="def-nbsp">  </span>Item<br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>Vampiric<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">Monster</b>, <b class="def-param">MonsterIndex</b>, <b class="def-param">Player</b> and <b class="def-param">PlayerIndex</b> fields are only set if the function is called by the game itself and not a script
</td>
</tr><tr>
<td class="def-left">
<a id="events.CalcDamageToMonster" class="abs"></a><h4 class="def-h4">CalcDamageToMonster</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Damage<br><span class="def-nbsp">  </span><a href="#const.Damage">DamageKind</a><br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a><br><span class="def-nbsp">  </span>MonsterIndex<br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">Player</b> and <b class="def-param">PlayerIndex</b> fields are only set in some cases. For example, in MM6 they're not set when bonus elemental damage of weapons is applied
</td>
</tr><tr>
<td class="def-left">
<a id="events.PickCorpse" class="abs"></a><h4 class="def-h4">PickCorpse</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>CallDefault = function<b class="def-largs-i">(</b><b class="def-rargs-i">)</b><br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a><br><span class="def-nbsp">  </span>MonsterIndex<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CastTelepathy" class="abs"></a><h4 class="def-h4">CastTelepathy</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>CallDefault = function<b class="def-largs-i">(</b><b class="def-rargs-i">)</b><br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a><br><span class="def-nbsp">  </span>MonsterIndex<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-evt.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>evt.lua</h3>
 
&nbsp;<i class="def-ib">События:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="events.LeaveMap" class="abs"></a><h4 class="def-h4">LeaveMap</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.LeaveGame" class="abs"></a><h4 class="def-h4">LeaveGame</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.BeforeLoadMap" class="abs"></a><h4 class="def-h4">BeforeLoadMap</h4><b class="def-largs">(</b>WasInGame<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CancelLoadingMapScripts" class="abs"></a><h4 class="def-h4">CancelLoadingMapScripts</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Return <b class="def-param">true</b> to cancel execution of map scripts. Used by the Editor.
</td>
</tr><tr>
<td class="def-left">
<a id="events.BeforeLoadMapScripts" class="abs"></a><h4 class="def-h4">BeforeLoadMapScripts</h4><b class="def-largs">(</b>WasInGame<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.LoadMapScripts" class="abs"></a><h4 class="def-h4">LoadMapScripts</h4><b class="def-largs">(</b>WasInGame<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.LoadMap" class="abs"></a><h4 class="def-h4">LoadMap</h4><b class="def-largs">(</b>WasInGame, NoScripts<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">NoScripts</b> = <b class="def-param">true</b> if map scripts execution was cancelled by <a href="#events.CancelLoadingMapScripts">CancelLoadingMapScripts</a> event.
</td>
</tr><tr>
<td class="def-left">
<a id="events.AfterLoadMap" class="abs"></a><h4 class="def-h4">AfterLoadMap</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetEventHint" class="abs"></a><h4 class="def-h4">GetEventHint</h4><b class="def-largs">(</b>evtId<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetMazeInfo" class="abs"></a><h4 class="def-h4">GetMazeInfo</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.EvtMap" class="abs"></a><h4 class="def-h4">EvtMap</h4><b class="def-largs">(</b>evtId, seq<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.EvtGlobal" class="abs"></a><h4 class="def-h4">EvtGlobal</h4><b class="def-largs">(</b>evtId, seq<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-main.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>main.lua</h3>
 
&nbsp;<i class="def-ib">События:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="events.StructsLoaded" class="abs"></a><h4 class="def-h4">StructsLoaded</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.ScriptsLoaded" class="abs"></a><h4 class="def-h4">ScriptsLoaded</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-timers.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>timers.lua</h3>
 
&nbsp;<i class="def-ib">События:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="events.Tick" class="abs"></a><h4 class="def-h4">Tick</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Modules-PaperDoll.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Modules\ </span>PaperDoll.lua</h3>
 
&nbsp;<i class="def-ib">События:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="events.ReloadPaperDollGraphics" class="abs"></a><h4 class="def-h4">ReloadPaperDollGraphics</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 when corresponding function is called
</td>
</tr><tr>
<td class="def-left">
<a id="events.PaperDollHiddenPieces" class="abs"></a><h4 class="def-h4">PaperDollHiddenPieces</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>PlayerBody = hidden if wearing Wetsuit<br><span class="def-nbsp">  </span>arm1 = 1st arm when holding a weapon<br><span class="def-nbsp">  </span>arm1f = 1st arm when not holding a weapon<br><span class="def-nbsp">  </span>arm2 = 2nd arm without 2-handed weapon<br><span class="def-nbsp">  </span>arm2f = 2nd arm when not holding anything, drawn behind armor<br><span class="def-nbsp">  </span>arm2h = 2nd arm for 2-handed weapon<br><span class="def-nbsp">  </span>arm2hb = 2nd arm for 2-handed weapon, drawn behind armor<br><span class="def-nbsp">  </span>hand1 = 1st hand always drawn<br><span class="def-nbsp">  </span>hand1x = 1st hand when holding a weapon<br><span class="def-nbsp">  </span>hand2 = 2nd hand for dual-wielding<br><span class="def-nbsp">  </span>hand2h = 2nd hand for 2-handed weapon<br><span class="def-nbsp">  </span>shield = drawn when holding a shield<br><b class="def-rargs">}</b>
</td><td class="def-right">
 Here I've described pieces that <b class="def-param">PaperDoll</b> module handles automatically. You can define your own pieces through <a href="#PaperDollDrawOrder">PaperDollDrawOrder</a> array and hide them conditionally here.
</td>
</tr></tbody>
</table>
<br>


<br>
<hr>
<a id="General-Functions"></a><h2>General Functions</h2>



<br>
<a id="StructsAfter-Backup.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Structs\After\ </span>Backup.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="LocalFile" class="abs"></a><h5 class="def-h5">LocalFile</h5><b class="def-largs">(</b>t<b class="def-rargs">)</b>
</td><td class="def-right">
 Pass any table from <a href="#structs.GameStructure">Game.*</a> to this function to make it restore its original state after the player exits the map.
</td>
</tr><tr>
<td class="def-left">
<a id="LocalMonstersTxt" class="abs"></a><h5 class="def-h5">LocalMonstersTxt</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="LocalHostileTxt" class="abs"></a><h5 class="def-h5">LocalHostileTxt</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="LocalNPCNews" class="abs"></a><h5 class="def-h5">LocalNPCNews</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="StructsAfter-DataTablesSupport.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Structs\After\ </span>DataTablesSupport.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="SplitLines" class="abs"></a><h5 class="def-h5">SplitLines</h5><b class="def-largs">(</b>str, startIdx<b class="def-rargs">)</b>
</td><td class="def-right">
 \r\n, \r
</td>
</tr><tr>
<td class="def-left">
<a id="SplitLinesAny" class="abs"></a><h5 class="def-h5">SplitLinesAny</h5><b class="def-largs">(</b>str, startIdx<b class="def-rargs">)</b>
</td><td class="def-right">
 \r\n, \n, \r
</td>
</tr><tr>
<td class="def-left">
<a id="SplitTabs" class="abs"></a><h5 class="def-h5">SplitTabs</h5><b class="def-largs">(</b>str, startIdx<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="StructsAfter-Draw.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Structs\After\ </span>Draw.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="DrawScreenEffectD3D" class="abs"></a><h5 class="def-h5">DrawScreenEffectD3D</h5><b class="def-largs">(</b>BitmapIndex, u, v, du, dv, x1, y1, x2, y2, cl, cl2, cl3, cl4<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="StructsAfter-Functions.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Structs\After\ </span>Functions.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="SplitSkill" class="abs"></a><h5 class="def-h5">SplitSkill</h5><b class="def-largs">(</b>val<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="JoinSkill" class="abs"></a><h5 class="def-h5">JoinSkill</h5><b class="def-largs">(</b>skill, <a href="#const">mastery</a><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="XYZ" class="abs"></a><h5 class="def-h5">XYZ</h5><b class="def-largs">(</b>t, x, y, z<b class="def-rargs">)</b>
</td><td class="def-right">
 Get X,Y,Z fields:<div class="def-codeblock"><span class="lua5-note">local</span> x, y, z <span class="lua5-note">=</span> XYZ(Party)</div><br>Set X,Y,Z fields:<div class="def-codeblock">XYZ(Party, x, y, z)</div><br>Enumerate "X", "Y", "Z" strings:<div class="def-codeblock"><span class="lua5-ctrl">for</span> X <span class="lua5-ctrl">in</span> XYZ <span class="lua5-ctrl">do</span><br><span> </span><span> </span><span class="lua5-std">print</span>(Party[X])<br><span class="lua5-ctrl">end</span></div><br>
</td>
</tr><tr>
<td class="def-left">
<a id="ClearConsoleEvents" class="abs"></a><h5 class="def-h5">ClearConsoleEvents</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="Message" class="abs"></a><h5 class="def-h5">Message</h5><b class="def-largs">(</b>text, KeepSound<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="Question" class="abs"></a><h5 class="def-h5">Question</h5><b class="def-largs">(</b>text, qtext<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns the reply. <b class="def-param">text</b> is shown as message, <b class="def-param">qtext</b> is shown at the beginning of reply field.<br>Doesn't work in houses in MM7.
</td>
</tr><tr>
<td class="def-left">
<a id="ReplaceNPCTopic" class="abs"></a><h5 class="def-h5">ReplaceNPCTopic</h5><b class="def-largs">(</b>old, new<b class="def-rargs">)</b>
</td><td class="def-right">
 Searches through all NPC topics and replaces one topic with another
</td>
</tr><tr>
<td class="def-left">
<a id="AddGoldExp" class="abs"></a><h5 class="def-h5">AddGoldExp</h5><b class="def-largs">(</b>gold, exp<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ShowQuestEffect" class="abs"></a><h5 class="def-h5">ShowQuestEffect</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Plays sound and shows visual effect on current character's face
</td>
</tr><tr>
<td class="def-left">
<a id="TakeItemFromParty" class="abs"></a><h5 class="def-h5">TakeItemFromParty</h5><b class="def-largs">(</b>id, keep<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">id</b> can also be a table or a table of tables. See <b class="def-param">Quest Alchemy.lua</b> from <a href="#Quests">quest examples</a>
</td>
</tr><tr>
<td class="def-left">
<a id="CheckMonstersKilled" class="abs"></a><h5 class="def-h5">CheckMonstersKilled</h5><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Group<br><span class="def-nbsp">  </span>Monster<br><span class="def-nbsp">  </span>MonsterIndex<br><span class="def-nbsp">  </span>NameId<br><span class="def-nbsp">  </span>Count<br><span class="def-nbsp">  </span>InvisibleAsDead<br><b class="def-rargs">}</b>
</td><td class="def-right">
 See <b class="def-param">Quest Kill Monsters.lua</b> from <a href="#Quests">quest examples</a>
</td>
</tr><tr>
<td class="def-left">
<a id="EnumAvailableSkills" class="abs"></a><h5 class="def-h5">EnumAvailableSkills</h5><b class="def-largs">(</b>class<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <a href="#const.Skills">Skill</a>, <a href="#const">MaxMastery</a>
</td>
</tr><tr>
<td class="def-left">
<a id="RGB" class="abs"></a><h5 class="def-h5">RGB</h5><b class="def-largs">(</b>r, g, b<b class="def-rargs">)</b>
</td><td class="def-right">
 else<br><span class="def-nbsp">  </span>end<br>end
</td>
</tr><tr>
<td class="def-left">
<a id="StrLeft" class="abs"></a><h5 class="def-h5">StrLeft</h5><b class="def-largs">(</b>v<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="StrRight" class="abs"></a><h5 class="def-h5">StrRight</h5><b class="def-largs">(</b>v<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="StrColor" class="abs"></a><h5 class="def-h5">StrColor</h5><b class="def-largs">(</b>r, g, b<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="SummonMonster" class="abs"></a><h5 class="def-h5">SummonMonster</h5><b class="def-largs">(</b>id, x, y, z, treasure, place<b class="def-rargs">)</b>
</td><td class="def-right">
 Unless <b class="def-param">treasure</b> is <b class="def-param">true</b>, the monster doesn't have any items or gold.<br><b class="def-param">place</b> defines monster index in <a href="#structs.GameMap.Monsters">Map.Monsters</a> array if specified.
</td>
</tr><tr>
<td class="def-left">
<a id="SummonItem" class="abs"></a><h5 class="def-h5">SummonItem</h5><b class="def-largs">(</b>number, x, y, z, speed<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="RebildIDList" class="abs"></a><h5 class="def-h5">RebildIDList</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ChangeSprite" class="abs"></a><h5 class="def-h5">ChangeSprite</h5><b class="def-largs">(</b>n, name<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="CreateSprite" class="abs"></a><h5 class="def-h5">CreateSprite</h5><b class="def-largs">{</b>name, x, y, z;<br><span class="def-nbsp">  </span>Bits<br><span class="def-nbsp">  </span>X<br><span class="def-nbsp">  </span>Y<br><span class="def-nbsp">  </span>Z<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="MoveModel" class="abs"></a><h5 class="def-h5">MoveModel</h5><b class="def-largs">(</b>m, dx, dy, dz, MoveParty<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">MoveParty</b> isn't supported yet
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="StructsAfter-LocalizationAndQuests.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Structs\After\ </span>LocalizationAndQuests.lua</h3>
 
&nbsp;<i class="def-ib">Переменные:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="TakeQuestOperation" class="abs"></a><h5 class="def-h5">TakeQuestOperation</h5>
</td><td class="def-right">
 Should be either "Add" or "Set". This determines the overlay flash on character face when a quest is taken.<br><span class="def-ver">[MM6, MM8]</span> Defaults to "Add".<br><span class="def-ver">[MM7]</span> Defaults to "Set".
</td>
</tr><tr>
<td class="def-left">
<a id="Quests-" class="abs"></a><h5 class="def-h5">Quests</h5>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="QuestNPC" class="abs"></a><h5 class="def-h5">QuestNPC</h5>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="vars.Quests" class="abs"></a><h5 class="def-h5">vars.Quests</h5>[name]
</td><td class="def-right">
 Quest states: nil, "Given", "Done" or a custom state.
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="LocalizeAll" class="abs"></a><h5 class="def-h5">LocalizeAll</h5><b class="def-largs">(</b>t, over<b class="def-rargs">)</b>
</td><td class="def-right">
 See <a href="#Localization">Localization</a>.<br>Possible values of <b class="def-param">over</b>:<br><span class="def-nbsp">  </span>true: <span class="def-nbsp"> </span>permanent setup &ndash; overwrite all (used in <b>Localization</b> scripts only)<br><span class="def-nbsp">  </span>false: <span class="def-nbsp"> </span>temporary setup &ndash; overwrite temporary setup only<br><span class="def-nbsp">  </span>"update": <span class="def-nbsp"> </span>remove all previous temporary setup, overwrite temporary setup only
</td>
</tr><tr>
<td class="def-left">
<a id="Localize" class="abs"></a><h5 class="def-h5">Localize</h5><b class="def-largs">(</b>t, over, lev = 1<b class="def-rargs">)</b>
</td><td class="def-right">
 See <a href="#Localization">Localization</a>.<br>Possible values of <b class="def-param">over</b>:<br><span class="def-nbsp">  </span>true: <span class="def-nbsp"> </span>permanent setup &ndash; overwrite all (used in <b>Localization</b> scripts only)<br><span class="def-nbsp">  </span>false: <span class="def-nbsp"> </span>temporary setup &ndash; overwrite temporary setup only<br><span class="def-nbsp">  </span>"update": <span class="def-nbsp"> </span>remove all previous temporary setup, overwrite temporary setup only
</td>
</tr><tr>
<td class="def-left">
<a id="GenerateQuestsLocalization" class="abs"></a><h5 class="def-h5">GenerateQuestsLocalization</h5><b class="def-largs">(</b>IsLua<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="GenerateLocalization" class="abs"></a><h5 class="def-h5">GenerateLocalization</h5><b class="def-largs">(</b>IsLua, IncludeQuests<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="UpdateNPCQuests" class="abs"></a><h5 class="def-h5">UpdateNPCQuests</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="QuestBranch" class="abs"></a><h5 class="def-h5">QuestBranch</h5><b class="def-largs">(</b>branch, persist<b class="def-rargs">)</b>
</td><td class="def-right">
 Sets current dialog branch to <b class="def-param">branch</b> if it's specified.<br><b class="def-param">persist</b> parameter makes the branch persist after you reenter NPC dialog.<br>Returns current branch when called without parameters.<br>If there is no persisted branch name, when you enter NPC dialog the branch is set to "".
</td>
</tr><tr>
<td class="def-left">
<a id="QuestBranchScreen" class="abs"></a><h5 class="def-h5">QuestBranchScreen</h5><b class="def-largs">(</b>branch<b class="def-rargs">)</b>
</td><td class="def-right">
 Switches dialog branch to <b class="def-param">branch</b>, but returns to current branch upon pressing Esc.
</td>
</tr><tr>
<td class="def-left">
<a id="ExitQuestBranch" class="abs"></a><h5 class="def-h5">ExitQuestBranch</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Exits current branch opened with <a href="#QuestBranchScreen">QuestBranchScreen</a>. If no branch screens are left open, simulates Esc press to exit the dialog.
</td>
</tr><tr>
<td class="def-left">
<a id="GetQuestBranchStack" class="abs"></a><h5 class="def-h5">GetQuestBranchStack</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns a table with branch names stored by <a href="#QuestBranchScreen">QuestBranchScreen</a> function (on each call it adds previous branch to the end of this table).
</td>
</tr><tr>
<td class="def-left">
<a id="Quest" class="abs"></a><h5 class="def-h5">Quest</h5><b class="def-largs">{</b>name;<br><span class="def-nbsp">  </span>After<br><span class="def-nbsp">  </span>Awards<br><span class="def-nbsp">  </span>BaseName<br><span class="def-nbsp">  </span>Branch<br><span class="def-nbsp">  </span>CheckDone<br><span class="def-nbsp">  </span>CheckGive<br><span class="def-nbsp">  </span>Done<br><span class="def-nbsp">  </span>DoneState<br><span class="def-nbsp">  </span>Event<br><span class="def-nbsp">  </span>Execute<br><span class="def-nbsp">  </span>Exp<br><span class="def-nbsp">  </span>Experience<br><span class="def-nbsp">  </span>FirstStdTopic<br><span class="def-nbsp">  </span>GetGreeting<br><span class="def-nbsp">  </span>GetTopic<br><span class="def-nbsp">  </span>Give<br><span class="def-nbsp">  </span>GivenItem<br><span class="def-nbsp">  </span>GivenState<br><span class="def-nbsp">  </span>Gold<br><span class="def-nbsp">  </span>IsGiven<br><span class="def-nbsp">  </span>KeepQuestItem<br><span class="def-nbsp">  </span>NPC<br><span class="def-nbsp">  </span>Name<br><span class="def-nbsp">  </span>NeverDone<br><span class="def-nbsp">  </span>NeverGiven<br><span class="def-nbsp">  </span>Quest<br><span class="def-nbsp">  </span>QuestGold<br><span class="def-nbsp">  </span>QuestItem<br><span class="def-nbsp">  </span>RewardItem<br><span class="def-nbsp">  </span>SetTexts<br><span class="def-nbsp">  </span>Slot<br><span class="def-nbsp">  </span>StdTopic<br><span class="def-nbsp">  </span>StdTopicDone<br><span class="def-nbsp">  </span>StdTopicGiven<br><span class="def-nbsp">  </span>TakeQuestOperation<br><span class="def-nbsp">  </span>Texts<br><span class="def-nbsp">  </span>Undone<br><span class="def-nbsp">  </span>Ungive<br><b class="def-rargs">}</b>
</td><td class="def-right">
 See <a href="#Quests">quest examples</a>
</td>
</tr><tr>
<td class="def-left">
<a id="Greeting" class="abs"></a><h5 class="def-h5">Greeting</h5><b class="def-largs">{</b>text, textSeen;<br><span class="def-nbsp">  </span>Text<br><span class="def-nbsp">  </span>TextSeen<br><span class="def-nbsp">  </span>... Quest() parameters ...<br><b class="def-rargs">}</b>
</td><td class="def-right">
 See <a href="#Quests">quest examples</a>
</td>
</tr><tr>
<td class="def-left">
<a id="NPCTopic" class="abs"></a><h5 class="def-h5">NPCTopic</h5><b class="def-largs">{</b>topic, text;<br><span class="def-nbsp">  </span>Topic<br><span class="def-nbsp">  </span>Text<br><span class="def-nbsp">  </span>... Quest() parameters ...<br><b class="def-rargs">}</b>
</td><td class="def-right">
 See <a href="#Quests">quest examples</a>
</td>
</tr><tr>
<td class="def-left">
<a id="KillMonstersQuest" class="abs"></a><h5 class="def-h5">KillMonstersQuest</h5><b class="def-largs">{</b>name = nil, ... A list of either tables with CheckMonstersKilled() parameters or partial completion messages ...;<br><span class="def-nbsp">    </span>... Quest() parameters ...<br><b class="def-rargs">}</b>
</td><td class="def-right">
 See <b class="def-param">Quest Kill Monsters.lua</b> from <a href="#Quests">quest examples</a>
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="StructsAfter-Text-Tables.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Structs\After\ </span>Text Tables.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="ParseTextTable" class="abs"></a><h5 class="def-h5">ParseTextTable</h5><b class="def-largs">(</b>s, r, SkipEmpty, AssignTables<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="LoadTextTable" class="abs"></a><h5 class="def-h5">LoadTextTable</h5><b class="def-largs">(</b>s, r, SkipEmpty, AssignTables<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ParseBasicTextTable" class="abs"></a><h5 class="def-h5">ParseBasicTextTable</h5><b class="def-largs">(</b>s, StartingLinesCount<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="LoadBasicTextTable" class="abs"></a><h5 class="def-h5">LoadBasicTextTable</h5><b class="def-largs">(</b>s, StartingLinesCount<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="WriteBasicTextTable" class="abs"></a><h5 class="def-h5">WriteBasicTextTable</h5><b class="def-largs">(</b>t, fname<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ParseNumbersTextTable" class="abs"></a><h5 class="def-h5">ParseNumbersTextTable</h5><b class="def-largs">(</b>s, StartingLinesCount<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="LoadNumbersTextTable" class="abs"></a><h5 class="def-h5">LoadNumbersTextTable</h5><b class="def-largs">(</b>s, StartingLinesCount<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ParseNamedColTable" class="abs"></a><h5 class="def-h5">ParseNamedColTable</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="LoadNamedColTable" class="abs"></a><h5 class="def-h5">LoadNamedColTable</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="WriteNamedColTable" class="abs"></a><h5 class="def-h5">WriteNamedColTable</h5><b class="def-largs">(</b>t, fname<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="TransposeTextTable" class="abs"></a><h5 class="def-h5">TransposeTextTable</h5><b class="def-largs">(</b>t<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ReadLodTextTable" class="abs"></a><h5 class="def-h5">ReadLodTextTable</h5><b class="def-largs">(</b>fname, row, col<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-Common.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>Common.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="assertnum" class="abs"></a><h5 class="def-h5">assertnum</h5><b class="def-largs">(</b>v, level, msg<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="tget" class="abs"></a><h5 class="def-h5">tget</h5><b class="def-largs">(</b>t, k, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <span class="def-code">t[k]</span> if it exists, otherwise sets <span class="def-code">t[k] <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span></span> and returns <span class="def-code">t[k]</span>.<br>The process is repeated for additional parameters, e.g. <span class="def-code">t[k][k1]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="pcall2" class="abs"></a><h5 class="def-h5">pcall2</h5><b class="def-largs">(</b>...<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <b class="def-param">pcall</b>, but in case of an error shows error message
</td>
</tr><tr>
<td class="def-left">
<a id="xpcall2" class="abs"></a><h5 class="def-h5">xpcall2</h5><b class="def-largs">(</b>...<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <b class="def-param">xpcall</b>, but in case of an error shows error message
</td>
</tr><tr>
<td class="def-left">
<a id="cocall" class="abs"></a><h5 class="def-h5">cocall</h5><b class="def-largs">(</b>f, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 Same as <span class="def-code"><span class="lua5-std">coroutine</span>.<span class="lua5-std">resume</span>(<span class="lua5-std">coroutine</span>.<span class="lua5-std">create</span>(f), ...)</span>
</td>
</tr><tr>
<td class="def-left">
<a id="cocall2" class="abs"></a><h5 class="def-h5">cocall2</h5><b class="def-largs">(</b>f, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <a href="#cocall">cocall</a>, but in case of an error shows error message
</td>
</tr><tr>
<td class="def-left">
<a id="dofile2" class="abs"></a><h5 class="def-h5">dofile2</h5><b class="def-largs">(</b>path, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 Loads file in protected mode, in case of an error shows error message. Return format is the same as that of <b class="def-param">pcall</b>
</td>
</tr><tr>
<td class="def-left">
<a id="coroutine.resume2" class="abs"></a><h5 class="def-h5">coroutine.resume2</h5><b class="def-largs">(</b>...<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <b class="def-param">coroutine.resume</b>, but in case of an error shows error message
</td>
</tr><tr>
<td class="def-left">
<a id="os.GetErrorText" class="abs"></a><h5 class="def-h5">os.GetErrorText</h5><b class="def-largs">(</b>code<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="path.find" class="abs"></a><h5 class="def-h5">path.find</h5><b class="def-largs">(</b>filter, dir<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="path.FindFirst" class="abs"></a><h5 class="def-h5">path.FindFirst</h5><b class="def-largs">(</b>filter, dir<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="path.findfirst" class="abs"></a><h5 class="def-h5">path.findfirst</h5><b class="def-largs">(</b>filter, dir<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="os.chdir" class="abs"></a><h5 class="def-h5">os.chdir</h5><b class="def-largs">(</b>[dir]<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns previous current directory. Call without parameters to look up current dirrectory
</td>
</tr><tr>
<td class="def-left">
<a id="os.mkdir" class="abs"></a><h5 class="def-h5">os.mkdir</h5><b class="def-largs">(</b>dir<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="os.copy" class="abs"></a><h5 class="def-h5">os.copy</h5><b class="def-largs">(</b>old, new, FailIfExists<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="path.GetRelativePath" class="abs"></a><h5 class="def-h5">path.GetRelativePath</h5><b class="def-largs">(</b>from, to, isDir<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="string.convert" class="abs"></a><h5 class="def-h5">string.convert</h5><b class="def-largs">(</b>s, encFrom, encTo, defChar<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="debug.FunctionFile" class="abs"></a><h5 class="def-h5">debug.FunctionFile</h5><b class="def-largs">(</b>f<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-Debug.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>Debug.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="debug.HideConsole" class="abs"></a><h5 class="def-h5">debug.HideConsole</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-ErrorFunction.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>ErrorFunction.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="errorinfo" class="abs"></a><h5 class="def-h5">errorinfo</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="tostring2" class="abs"></a><h5 class="def-h5">tostring2</h5><b class="def-largs">(</b>v, lim, tabs<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-RSFunctions.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>RSFunctions.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="table.swap" class="abs"></a><h5 class="def-h5">table.swap</h5><b class="def-largs">(</b>t, min, max<b class="def-rargs">)</b>
</td><td class="def-right">
 Swaps order of the array. <b class="def-param">min</b> and <b class="def-param">max</b> default to 1 and <b class="def-param">#t</b> respectively
</td>
</tr><tr>
<td class="def-left">
<a id="table.move" class="abs"></a><h5 class="def-h5">table.move</h5><b class="def-largs">(</b>t, from, to<b class="def-rargs">)</b>
</td><td class="def-right">
 Moves an element from one index to another
</td>
</tr><tr>
<td class="def-left">
<a id="table.copy" class="abs"></a><h5 class="def-h5">table.copy</h5><b class="def-largs">(</b>src, dest, overwrite<b class="def-rargs">)</b>
</td><td class="def-right">
 Performs shallow copy. If <b class="def-param">dest</b> = <b class="def-param">nil</b>, a new table is created
</td>
</tr><tr>
<td class="def-left">
<a id="table.find" class="abs"></a><h5 class="def-h5">table.find</h5><b class="def-largs">(</b>t, v<b class="def-rargs">)</b>
</td><td class="def-right">
 Finds value <b class="def-param">v</b>, returns corresponding key
</td>
</tr><tr>
<td class="def-left">
<a id="table.ifind" class="abs"></a><h5 class="def-h5">table.ifind</h5><b class="def-largs">(</b>t, v, start<b class="def-rargs">)</b>
</td><td class="def-right">
 Finds value <b class="def-param">v</b> in array part of the table, returns first match. Uses raw access (<b class="def-param">rawget</b>)
</td>
</tr><tr>
<td class="def-left">
<a id="table.invert" class="abs"></a><h5 class="def-h5">table.invert</h5><b class="def-largs">(</b>t, out<b class="def-rargs">)</b>
</td><td class="def-right">
 Swaps keys and values
</td>
</tr><tr>
<td class="def-left">
<a id="table.clear" class="abs"></a><h5 class="def-h5">table.clear</h5><b class="def-largs">(</b>t<b class="def-rargs">)</b>
</td><td class="def-right">
 Removes all elements from the table
</td>
</tr><tr>
<td class="def-left">
<a id="table.join" class="abs"></a><h5 class="def-h5">table.join</h5><b class="def-largs">(</b>t, t1<b class="def-rargs">)</b>
</td><td class="def-right">
 Adds <b class="def-param">t1</b> array to the end of <b class="def-param">t</b>
</td>
</tr><tr>
<td class="def-left">
<a id="coroutine.yieldN" class="abs"></a><h5 class="def-h5">coroutine.yieldN</h5><b class="def-largs">(</b>n, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">n</b> times in a raw calls <span class="def-code"><span class="lua5-std">coroutine</span>.<span class="lua5-std">yield</span>(...)</span>. Returns the result of last call
</td>
</tr><tr>
<td class="def-left">
<a id="path.ext" class="abs"></a><h5 class="def-h5">path.ext</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 Extracts extension (e.g. returns <span class="def-code"><span class="lua5-str">".txt"</span></span> etc.)
</td>
</tr><tr>
<td class="def-left">
<a id="path.setext" class="abs"></a><h5 class="def-h5">path.setext</h5><b class="def-largs">(</b>s, ext<b class="def-rargs">)</b>
</td><td class="def-right">
 Changes extension (e.g. <span class="def-code">path.setext(<span class="lua5-str">"my.txt"</span>, <span class="lua5-str">"_2.txt"</span>) <span class="lua5-operator">==</span> <span class="lua5-str">"my_2.txt"</span></span>)
</td>
</tr><tr>
<td class="def-left">
<a id="path.name" class="abs"></a><h5 class="def-h5">path.name</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 Extracts file name
</td>
</tr><tr>
<td class="def-left">
<a id="path.dir" class="abs"></a><h5 class="def-h5">path.dir</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 Extracts file path including trailing slash
</td>
</tr><tr>
<td class="def-left">
<a id="path.addslash" class="abs"></a><h5 class="def-h5">path.addslash</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 Adds trailing slash
</td>
</tr><tr>
<td class="def-left">
<a id="path.noslash" class="abs"></a><h5 class="def-h5">path.noslash</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 Removes trailing slash (or multiple slashes)
</td>
</tr><tr>
<td class="def-left">
<a id="io.save" class="abs"></a><h5 class="def-h5">io.save</h5><b class="def-largs">(</b>path, s, translate<b class="def-rargs">)</b>
</td><td class="def-right">
 Saves a string into a file (overwrites it)
</td>
</tr><tr>
<td class="def-left">
<a id="io.load" class="abs"></a><h5 class="def-h5">io.load</h5><b class="def-largs">(</b>path, translate<b class="def-rargs">)</b>
</td><td class="def-right">
 Loads a file as a string
</td>
</tr><tr>
<td class="def-left">
<a id="string.print" class="abs"></a><h5 class="def-h5">string.print</h5><b class="def-largs">(</b>...<b class="def-rargs">)</b>
</td><td class="def-right">
 returns the string that <b class="def-param">print</b> function would normally print out
</td>
</tr><tr>
<td class="def-left">
<a id="string.split" class="abs"></a><h5 class="def-h5">string.split</h5><b class="def-largs">(</b>str, delim, plain<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns a table of strings. <b class="def-param">delim</b> can be a plain string (<b class="def-param">plain</b> = <b class="def-param">true</b>) or a pattern
</td>
</tr><tr>
<td class="def-left">
<a id="string.csplit" class="abs"></a><h5 class="def-h5">string.csplit</h5><b class="def-largs">(</b>str, charlist<b class="def-rargs">)</b>
</td><td class="def-right">
 Any character from <b class="def-param">charlist</b> string is a delimiter
</td>
</tr><tr>
<td class="def-left">
<a id="string.replace" class="abs"></a><h5 class="def-h5">string.replace</h5><b class="def-largs">(</b>str, old, new<b class="def-rargs">)</b>
</td><td class="def-right">
 Parameters are treated as plain strings, not patterns
</td>
</tr><tr>
<td class="def-left">
<a id="sortpairs" class="abs"></a><h5 class="def-h5">sortpairs</h5><b class="def-largs">(</b>t<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">pairs</b> in ascending order with the following comparison rule: <span class="def-nbsp"> </span>number &lt; boolean &lt; string &lt; userdata &lt; table &lt; function &lt; thread
</td>
</tr><tr>
<td class="def-left">
<a id="debug.findupvalue" class="abs"></a><h5 class="def-h5">debug.findupvalue</h5><b class="def-largs">(</b>f, name<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">index</b>, <b class="def-param">value</b> of an upvalue with the given name, or <b class="def-param">nil</b> if it doesn't exist
</td>
</tr><tr>
<td class="def-left">
<a id="debug.findlocal" class="abs"></a><h5 class="def-h5">debug.findlocal</h5><b class="def-largs">(</b>thread, lev, name<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">index</b>, <b class="def-param">value</b> of a local variable with the given name, or <b class="def-param">nil</b> if it doesn't exist
</td>
</tr><tr>
<td class="def-left">
<a id="debug.upvalues" class="abs"></a><h5 class="def-h5">debug.upvalues</h5><b class="def-largs">(</b>f, cache<b class="def-rargs">)</b>
</td><td class="def-right">
 If <b class="def-param">cache</b> = <b class="def-param">true</b>, upvalue indexes are cached.<br>Usage:<br>1) <span class="def-code">v <span class="lua5-note">=</span> <span class="lua5-std">debug</span>.upvalues(f).upvalue_name</span><br>2) <span class="def-code"><span class="lua5-std">debug</span>.upvalues(f).upvalue_name <span class="lua5-note">=</span> v</span><br>3) <span class="def-code"><span class="lua5-ctrl">for</span> k, v <span class="lua5-ctrl">in</span> <span class="lua5-std">debug</span>.upvalues(f) <span class="lua5-ctrl">do</span> <span> </span><span class="lua5-std">print</span>(k, v) <span> </span><span class="lua5-ctrl">end</span></span>
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-RSMem.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>RSMem.lua</h3><a id="&#8230;"></a><h5 class="def-hidden">&#8230;</h5>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="mem.string" class="abs"></a>mem.string<b class="def-largs">(</b>p, size, ReadNull<b class="def-rargs">)</b>
</td><td class="def-right">
 <span class="def-code">mem.<span class="lua5-std">string</span>(p)</span> &ndash; read null-terminated string<br><span class="def-code">mem.<span class="lua5-std">string</span>(p, size)</span> &ndash; read null-terminated string not more than <b class="def-param">size</b> bytes<br><span class="def-code">mem.<span class="lua5-std">string</span>(p, size, <span class="lua5-literal">true</span>)</span> &ndash; read <b class="def-param">size</b> bytes as string
</td>
</tr><tr>
<td class="def-left">
<a id="mem.call" class="abs"></a>mem.call<b class="def-largs">(</b>t, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.IgnoreProtection" class="abs"></a>mem.IgnoreProtection<b class="def-largs">(</b>on<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.malloc" class="abs"></a>mem.malloc<b class="def-largs">(</b>size<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.alloc" class="abs"></a>mem.alloc<b class="def-largs">(</b>size<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.free" class="abs"></a>mem.free<b class="def-largs">(</b>p<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.realloc" class="abs"></a>mem.realloc<b class="def-largs">(</b>p, size<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.new" class="abs"></a>mem.new<b class="def-largs">(</b>size, f, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.StaticAlloc" class="abs"></a>mem.StaticAlloc<b class="def-largs">(</b>size<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.copy" class="abs"></a>mem.copy<b class="def-largs">(</b>dest, src, count<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">count</b> can be omitted if <b class="def-param">src</b> is a string or a structure
</td>
</tr><tr>
<td class="def-left">
<a id="mem.fill" class="abs"></a>mem.fill<b class="def-largs">(</b>ptr, n, c = 0<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.LuaAlloc" class="abs"></a>mem.LuaAlloc<b class="def-largs">(</b>size<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.func" class="abs"></a>mem.func<b class="def-largs">(</b>...<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.LoadDll" class="abs"></a>mem.LoadDll<b class="def-largs">(</b>name, cc<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.UnloadDll" class="abs"></a>mem.UnloadDll<b class="def-largs">(</b>t<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.GetProcAddress" class="abs"></a>mem.GetProcAddress<b class="def-largs">(</b>p, proc<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.structs.getdefine" class="abs"></a>mem.structs.getdefine<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.structs.getunions" class="abs"></a>mem.structs.getunions<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.structs.CustomType" class="abs"></a>mem.structs.CustomType<b class="def-largs">(</b>name, size, f<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.struct" class="abs"></a>mem.struct<b class="def-largs">(</b>f, class, p<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.GetHookSize" class="abs"></a>mem.GetHookSize<b class="def-largs">(</b>p<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">n</b>, <b class="def-param">short</b>, <b class="def-param">long</b>.<br><b class="def-param">n</b> is the number of bytes occupied by instructions at address <b class="def-param">p</b>. <b class="def-param">n</b> is 5 or more, because placing a hook requires 5 bytes.<br><b class="def-param">short</b> is <b class="def-param">true</b> if the code contains a short jump leading outside of it.<br><b class="def-param">long</b> is <b class="def-param">true</b> if the code contains a near jump or call to a relative address.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.GetInstructionSize" class="abs"></a>mem.GetInstructionSize<b class="def-largs">(</b>p<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">n</b>, <b class="def-param">short</b>, <b class="def-param">long</b>.<br><b class="def-param">n</b> is the number of bytes occupied by the instruction at address <b class="def-param">p</b>.<br><b class="def-param">short</b> is <b class="def-param">true</b> if the instruction is a short jump and it doesn't lead to itself.<br><b class="def-param">long</b> is <b class="def-param">true</b> if the instruction is a near jump or call to a relative address.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.hook" class="abs"></a>mem.hook<b class="def-largs">(</b>p, f, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Primitive call hook: 5-byte call instruction that calls into Lua code
</td>
</tr><tr>
<td class="def-left">
<a id="mem.hookjmp" class="abs"></a>mem.hookjmp<b class="def-largs">(</b>p, f, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Primitive jump hook
</td>
</tr><tr>
<td class="def-left">
<a id="mem.hookalloc" class="abs"></a>mem.hookalloc<b class="def-largs">(</b>size<b class="def-rargs">)</b>
</td><td class="def-right">
 Allocate memory for code
</td>
</tr><tr>
<td class="def-left">
<a id="mem.hookfree" class="abs"></a>mem.hookfree<b class="def-largs">(</b>p<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.copycode" class="abs"></a>mem.copycode<b class="def-largs">(</b>ptr, size, MemPtr, NoJumpBack, DuplicateHooks<b class="def-rargs">)</b>
</td><td class="def-right">
 Copies standard code into a memory block and then writes a jump back into the function<br>(the copied code must not contain short jumps that lead outside of it)<br><b class="def-param">MemPtr</b> can optionally specify a pre-allocated memory address.<br>If <b class="def-param">DuplicateHooks</b> is <b class="def-param">true</b>, Lua hooks are kept in both new and old code, otherwise they're moved to the new location.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.autohook" class="abs"></a>mem.autohook<b class="def-largs">(</b>p, f, size<b class="def-rargs">)</b>
</td><td class="def-right">
 <a href="#mem.hookjmp">hookjmp</a> with automatic calling of overwritten code (see <a href="#mem.copycode">copycode</a> note)<br>If the function returns <b class="def-param">true</b>, the jump to original code isn't performed
</td>
</tr><tr>
<td class="def-left">
<a id="mem.autohook2" class="abs"></a>mem.autohook2<b class="def-largs">(</b>p, f, size<b class="def-rargs">)</b>
</td><td class="def-right">
 <a href="#mem.hookjmp">hookjmp</a> with automatic calling of overwritten code (see <a href="#mem.copycode">copycode</a> note)<br>The function is called after the overwritten code<br>If the function returns <b class="def-param">true</b>, the jump to original code isn't performed
</td>
</tr><tr>
<td class="def-left">
<a id="mem.bytecodehook" class="abs"></a>mem.bytecodehook<b class="def-largs">(</b>p, code, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <a href="#mem.autohook">autohook</a>, but takes a compiled Asm code string as parameter<br><b class="def-param">code</b> can also be a function <span class="def-code">f(ptr)</span>. <b class="def-param">ptr</b> is the address of memory allocated for hook code or <b class="def-param">nil</b> (to calculate size)
</td>
</tr><tr>
<td class="def-left">
<a id="mem.bytecodehook2" class="abs"></a>mem.bytecodehook2<b class="def-largs">(</b>p, code, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <a href="#mem.autohook2">autohook2</a>, but takes a compiled Asm code string as parameter<br>See note of <a href="#mem.bytecodehook">bytecodehook</a> about <b class="def-param">code</b>
</td>
</tr><tr>
<td class="def-left">
<a id="mem.bytecodepatch" class="abs"></a>mem.bytecodepatch<b class="def-largs">(</b>p, code, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Replaces original instructions with new ones, jumping out if needed<br>See note of <a href="#mem.bytecodehook">bytecodehook</a> about <b class="def-param">code</b>
</td>
</tr><tr>
<td class="def-left">
<a id="mem.asmhook" class="abs"></a>mem.asmhook<b class="def-largs">(</b>p, code, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <a href="#mem.autohook">autohook</a>, but takes an Asm code string as parameter
</td>
</tr><tr>
<td class="def-left">
<a id="mem.asmhook2" class="abs"></a>mem.asmhook2<b class="def-largs">(</b>p, code, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <a href="#mem.autohook2">autohook2</a>, but takes an Asm code string as parameter
</td>
</tr><tr>
<td class="def-left">
<a id="mem.asmpatch" class="abs"></a>mem.asmpatch<b class="def-largs">(</b>p, code, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Replaces original instructions with new ones, jumping out if needed
</td>
</tr><tr>
<td class="def-left">
<a id="mem.asmproc" class="abs"></a>mem.asmproc<b class="def-largs">(</b>code<b class="def-rargs">)</b>
</td><td class="def-right">
 Creates an Asm function
</td>
</tr><tr>
<td class="def-left">
<a id="mem.hookfunction" class="abs"></a>mem.hookfunction<b class="def-largs">(</b>p, nreg, nstack, f, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Set hook at the beginning of a function, allows calling the original function (see <a href="#mem.copycode">copycode</a> note)<br>Function <b class="def-param">f</b> is as follows: <span class="def-code">f(d, def, params...)</span><br>Here <b class="def-param">d</b> is HookData object, <b class="def-param">def</b> is the default function defined as <span class="def-code">def(params...)</span> and <b class="def-param">params...</b> are the parameters.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.hookcall" class="abs"></a>mem.hookcall<b class="def-largs">(</b>p, nreg, nstack, f<b class="def-rargs">)</b>
</td><td class="def-right">
 Replaces an existing CALL instruction and uses the same protocol as <a href="#mem.hookfunction">hookfunction</a>
</td>
</tr><tr>
<td class="def-left">
<a id="mem.luaproc" class="abs"></a>mem.luaproc<b class="def-largs">(</b>f, nreg, nstack<b class="def-rargs">)</b>
</td><td class="def-right">
 Creates a Lua callback (because any use of FFI for function calls leads to random bugs)
</td>
</tr><tr>
<td class="def-left">
<a id="mem.nop" class="abs"></a>mem.nop<b class="def-largs">(</b>p, n<b class="def-rargs">)</b>
</td><td class="def-right">
 Writes <b class="def-param">n</b> NOPs. If <b class="def-param">n</b> is omitted, replaces a single instruction at the given address with NOPs
</td>
</tr><tr>
<td class="def-left">
<a id="mem.nop2" class="abs"></a>mem.nop2<b class="def-largs">(</b>p, p2<b class="def-rargs">)</b>
</td><td class="def-right">
 Writes NOPs from <b class="def-param">p</b> to <b class="def-param">p2</b> - 1
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-RSPersist.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>RSPersist.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="persist" class="abs"></a><h5 class="def-h5">persist</h5><b class="def-largs">(</b>t, perm<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="unpersist" class="abs"></a><h5 class="def-h5">unpersist</h5><b class="def-largs">(</b>buf, perm, data<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-dump.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>dump.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="dump" class="abs"></a><h5 class="def-h5">dump</h5><b class="def-largs">(</b>t, depth, exact, detectClones, limit<b class="def-rargs">)</b>
</td><td class="def-right">
 Useful for debugging and experiments. Shows <b class="def-param">t</b>, expanding all tables in it up to the <b class="def-param">depth</b> level. In <b class="def-param">exact</b> = <b class="def-param">true</b> mode outputs proper Lua code.
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-events.lua-"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>events.lua</h3>
 
&nbsp;<i class="def-ib">Переменные:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="VFlipUnfixed" class="abs"></a><h5 class="def-h5">VFlipUnfixed</h5>
</td><td class="def-right">
 <span class="def-ver">[MM6]</span> <span class="def-nbsp"> </span>Textures on horizontal outdoor surfaces are flipped vertically. This is default to preserve look of standard maps.
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="HookManager" class="abs"></a><h5 class="def-h5">HookManager</h5><b class="def-largs">(</b>ref<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="GetCurrentNPC" class="abs"></a><h5 class="def-h5">GetCurrentNPC</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="SkillToHouseTopic" class="abs"></a><h5 class="def-h5">SkillToHouseTopic</h5><b class="def-largs">(</b>i<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="HouseTopicToSkill" class="abs"></a><h5 class="def-h5">HouseTopicToSkill</h5><b class="def-largs">(</b>i<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="FixVFlip" class="abs"></a><h5 class="def-h5">FixVFlip</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 <span class="def-ver">[MM6]</span> <span class="def-nbsp"> </span>Turns off texture flip on horizontal outdoor surfaces. Note that the editor accounts for vertical flip, so you probably shouldn't call this function.
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-evt.lua-"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>evt.lua</h3>
 
&nbsp;<i class="def-ib">Переменные:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="vars" class="abs"></a><h5 class="def-h5">vars</h5>
</td><td class="def-right">
 Variables that are stored in saved game
</td>
</tr><tr>
<td class="def-left">
<a id="mapvars" class="abs"></a><h5 class="def-h5">mapvars</h5>
</td><td class="def-right">
 Variables stored in a saved game that belong to current map. On map refill <b class="def-param">mapvars</b> are cleared, but old table is stored in <a href="#structs.GameMap.Refilled">Map.Refilled</a>.
</td>
</tr><tr>
<td class="def-left">
<a id="evt.CanShowTopic" class="abs"></a><h5 class="def-h5">evt.CanShowTopic</h5>[]
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span> <span class="def-nbsp"> </span>Functions that can return <b class="def-param">true</b> or <b class="def-param">false</b> to change topic visibility
</td>
</tr><tr>
<td class="def-left">
<a id="evt.map" class="abs"></a><h5 class="def-h5">evt.map</h5>[]
</td><td class="def-right">
 Event handlers<br><br>Event indexes convention:<br>Indexes 20000 &ndash; 22999 are for sprite events, so that event (20000 + i) corresponds to <a href="#structs.GameMap.Sprites">Map.Sprites</a>[i].
</td>
</tr><tr>
<td class="def-left">
<a id="evt.hint" class="abs"></a><h5 class="def-h5">evt.hint</h5>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.MazeInfo" class="abs"></a><h5 class="def-h5">evt.MazeInfo</h5>
</td><td class="def-right">
 <span class="def-ver">[MM6]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="evt.str" class="abs"></a><h5 class="def-h5">evt.str</h5>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.house" class="abs"></a><h5 class="def-h5">evt.house</h5>[]
</td><td class="def-right">
 House name used for hint
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Player" class="abs"></a><h5 class="def-h5">evt.Player</h5>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.CurrentPlayer" class="abs"></a><h5 class="def-h5">evt.CurrentPlayer</h5>
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="evt.InGlobal" class="abs"></a><h5 class="def-h5">evt.InGlobal</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.ForPlayer-" class="abs"></a><h5 class="def-h5">evt.ForPlayer</h5><b class="def-largs">(</b>n<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.HouseDoor" class="abs"></a><h5 class="def-h5">evt.HouseDoor</h5><b class="def-largs">(</b>evtId, houseId<b class="def-rargs">)</b>
</td><td class="def-right">
 Here's what it does:<div class="def-codeblock">evt.house[evtId] <span class="lua5-note">=</span> houseId<br>evt.map[evtId] <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span>evt.EnterHouse(houseId)<br><span class="lua5-ctrl">end</span></div><br>
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-main.lua-"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>main.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="MessageBox" class="abs"></a><h5 class="def-h5">MessageBox</h5><b class="def-largs">(</b>text, caption, typ<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="debug.Message" class="abs"></a><h5 class="def-h5">debug.Message</h5><b class="def-largs">(</b>...<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="debug.ErrorMessage" class="abs"></a><h5 class="def-h5">debug.ErrorMessage</h5><b class="def-largs">(</b>msg<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ErrorMessage" class="abs"></a><h5 class="def-h5">ErrorMessage</h5><b class="def-largs">(</b>msg<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ReloadLocalization" class="abs"></a><h5 class="def-h5">ReloadLocalization</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-timers.lua-"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>timers.lua</h3>
 &nbsp;<i class="def-ib">Examples:</i><br><br>Damage selected player every minute:<div class="def-codeblock">Timer(<span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span>evt.DamagePlayer<span class="lua5-ctrl">{</span>Damage <span class="lua5-note">=</span> <span class="lua5-literal">1</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">end</span>, const.Minute)</div><br><br>Check some condition (e.g. that you killed all monsters) every 5 minutes, including the moment you enter the map:<div class="def-codeblock">Timer(CheckCondition, <span class="lua5-literal">5</span><span class="lua5-operator">*</span>const.Minute, <span class="lua5-literal">true</span>)</div><br><br>Refill a well every week on Tuesday at 3 AM:<div class="def-codeblock">RefillTimer(RefillWell, const.Week, const.Day <span class="lua5-operator">+</span> <span class="lua5-literal">3</span><span class="lua5-operator">*</span>const.Hour)</div><br><br>Make "eat" sound at 3 AM every day:<div class="def-codeblock">Timer(<span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span>evt.PlaySound(Game.Version <span class="lua5-operator">==</span> <span class="lua5-literal">8</span> <span class="lua5-ctrl">and</span> <span class="lua5-literal">144</span> <span class="lua5-ctrl">or</span> <span class="lua5-literal">211</span>)<br><span class="lua5-ctrl">end</span>, const.Day, <span class="lua5-literal">3</span><span class="lua5-operator">*</span>const.Hour, <span class="lua5-literal">false</span>)</div><br><br>
&nbsp;<i class="def-ib">Переменные:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="Keys" class="abs"></a><h5 class="def-h5">Keys</h5>[<a href="#const.Keys">key</a>]
</td><td class="def-right">
 Example 1 (recommended):<div class="def-codeblock"><span class="lua5-ctrl">function</span> Keys.F2(t)<br><span> </span><span> </span>Message(<span class="lua5-str">"F2 pressed"</span>)<br><span class="lua5-ctrl">end</span></div><br>Example 2 (not recommended):<div class="def-codeblock">Keys[const.Keys.F2] <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>()<br><span> </span><span> </span>Message(<span class="lua5-str">"F2 pressed"</span>)<br><span class="lua5-ctrl">end</span></div><br>These examples are actually handled differently. The first one is equivalent to using <a href="#events.KeyDown">events.KeyDown</a> and checking <b class="def-param">t.Key</b>.<br>The second is mostly for backward compatibility. Instead of relying on messages, it checks key state on every frame and calls the function if the key was pressed. It may miss a very short key press.
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="timeGetTime" class="abs"></a><h5 class="def-h5">timeGetTime</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns time since Windows has started in milliseconds
</td>
</tr><tr>
<td class="def-left">
<a id="Timer" class="abs"></a><h5 class="def-h5">Timer</h5><b class="def-largs">(</b>f, Period = const.Minute, [Start,] [PastAware,] [Exact]<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">f</b> = <span class="def-code"><span class="lua5-ctrl">function</span>(TriggerTime, Period, LastTick, Tick)</span>:<br><span class="def-nbsp">  </span>Function to call when the timer is triggered.<br><b class="def-param">Start</b> is <span class="def-code">Game.Time <span class="lua5-operator">+</span> Period</span> if not specified (or <span class="def-code">Game.Time</span> if <b class="def-param">PastAware</b> = <b class="def-param">true</b>).<br><b class="def-param">PastAware</b> = remember last visit time and fire right away if timer condition was met in the period of your absence.<br><span class="def-nbsp">  </span>If not specified, it's <b class="def-param">true</b> if <b class="def-param">Start</b> is specified, <b class="def-param">false</b> otherwise.<br>Possible <b class="def-param">Exact</b> values:<br><span class="def-nbsp">  </span>false: <span class="def-nbsp"> </span>re-fires after <b class="def-param">Period</b> passes since last invocation (this is the default if <b class="def-param">Start</b> is not specified).<br><span class="def-nbsp">  </span>true: <span class="def-nbsp"> </span>fires whenever (start + period*N) line is crossed (this is the default if <b class="def-param">Start</b> is specified).<br><span class="def-nbsp">  </span><span class="def-code"><span class="lua5-ctrl">function</span>(TriggerTime, Period, LastTick, IsInit)</span>: <span class="def-nbsp"> </span>returns next trigger time when called.<br><span class="def-nbsp">    </span><b class="def-param">IsInit</b> = <b class="def-param">true</b> if it's called by Timer function itself which happens if <b class="def-param">Start</b> has already passed.<br>Note that the timer remembers last time you were in the location, so for example,<br>an exact weekly timer would fire right away if you haven't visited the map for a week.
</td>
</tr><tr>
<td class="def-left">
<a id="RefillTimer" class="abs"></a><h5 class="def-h5">RefillTimer</h5><b class="def-largs">(</b>f, Period = const.Day, Start<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">f</b> = <span class="def-code"><span class="lua5-ctrl">function</span>(TriggerTime, Period, LastTick, Tick)</span>:<br><span class="def-nbsp">  </span>Called when the timer is triggered.<br>If <b class="def-param">Start</b> is not specified, triggers when <b class="def-param">Period</b> passes since last time it was triggered and on map refill.<br>If <b class="def-param">Start</b> is specified, acts like exact Timer, but also fires at map refills.
</td>
</tr><tr>
<td class="def-left">
<a id="Sleep" class="abs"></a><h5 class="def-h5">Sleep</h5><b class="def-largs">(</b>time, realtime, screens<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="Sleep2" class="abs"></a><h5 class="def-h5">Sleep2</h5><b class="def-largs">(</b>f, time, realtime, screens<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="RemoveTimer" class="abs"></a><h5 class="def-h5">RemoveTimer</h5><b class="def-largs">(</b>f<b class="def-rargs">)</b>
</td><td class="def-right">
 You can remove the timer being executed by calling this function without a parameter
</td>
</tr><tr>
<td class="def-left">
<a id="Keys.IsPressed" class="abs"></a><h5 class="def-h5">Keys.IsPressed</h5><b class="def-largs">(</b><a href="#const.Keys">key</a><b class="def-rargs">)</b>
</td><td class="def-right">
 String representations of <a href="#const.Keys">const.Keys</a> are also supported, e.g. <span class="def-code">Keys.IsPressed<span class="lua5-str">"SHIFT"</span></span>
</td>
</tr><tr>
<td class="def-left">
<a id="Keys.IsToggled" class="abs"></a><h5 class="def-h5">Keys.IsToggled</h5><b class="def-largs">(</b><a href="#const.Keys">key</a><b class="def-rargs">)</b>
</td><td class="def-right">
 String representations of <a href="#const.Keys">const.Keys</a> are also supported, e.g. <span class="def-code">Keys.IsToggled<span class="lua5-str">"CAPSLOCK"</span></span>
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Modules-PaperDoll.lua-"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Modules\ </span>PaperDoll.lua</h3>
 To use, first place the PaperDol.txt file from https://github.com/GrayFace/MMExtension/tree/master/Misc corresponding to your game of choice into DataFiles folder (create it right next to Data folder of the game if it doesn't exist). Modifiy it as needed. You'll later distribute this file inside your mod's LOD achive.<br><br>Including the module:<div class="def-codeblock"><span class="lua5-std">require</span><span class="lua5-str">'PaperDoll'</span></div><br><br>
&nbsp;<i class="def-ib">Переменные:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="PaperDollCategories" class="abs"></a><h5 class="def-h5">PaperDollCategories</h5>
</td><td class="def-right">
 Maps category name to a <span class="def-code"><span class="lua5-ctrl">function</span>(i)</span> that returns <b class="def-param">true</b> if player face number <b class="def-param">i</b> belongs to the category. Use <a href="#PaperDollAddBodies">PaperDollAddBodies</a> or <a href="#PaperDollAddRace">PaperDollAddRace</a> to populate.
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollContitionalPieces" class="abs"></a><h5 class="def-h5">PaperDollContitionalPieces</h5>
</td><td class="def-right">
 Pieces of the doll that can be hidden or replaced by specifying corresponding piece of an item. Default (hair that can be hidden by helmets):<br><span class="def-code"><span class="lua5-ctrl">{</span>hair <span class="lua5-note">=</span> <span class="lua5-literal">true</span>, hair2 <span class="lua5-note">=</span> <span class="lua5-literal">true</span><span class="lua5-ctrl">}</span></span>
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollDirectPieces" class="abs"></a><h5 class="def-h5">PaperDollDirectPieces</h5>
</td><td class="def-right">
 Specifies which pieces inherit item graphics by default. Default:<br><span class="def-code"><span class="lua5-ctrl">{</span>ItemExtraHand <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span>hand2 <span class="lua5-note">=</span> <span class="lua5-literal">true</span>, shield <span class="lua5-note">=</span> <span class="lua5-literal">true</span><span class="lua5-ctrl">}</span><span class="lua5-ctrl">}</span></span>
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollCount" class="abs"></a><h5 class="def-h5">PaperDollCount</h5>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollBaseRace" class="abs"></a><h5 class="def-h5">PaperDollBaseRace</h5>
</td><td class="def-right">
 <span class="def-ver">[MM7]</span> Races that share the "Base" paper doll. Default:<br><span class="def-code"><span class="lua5-ctrl">{</span>[const.Race.Human] <span class="lua5-note">=</span> <span class="lua5-literal">true</span>, [const.Race.Goblin] <span class="lua5-note">=</span> <span class="lua5-literal">true</span>, [const.Race.Elf] <span class="lua5-note">=</span> <span class="lua5-literal">true</span><span class="lua5-ctrl">}</span></span><br>After altering call this command:<br><span class="def-code">PaperDollAddRace(<span class="lua5-str">'Base'</span>, PaperDollBaseRace)</span>
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollSpecialBodies" class="abs"></a><h5 class="def-h5">PaperDollSpecialBodies</h5>
</td><td class="def-right">
 After altering call <a href="#PaperDollAddBodies">PaperDollAddBodies</a>. Here are default MM8 values:<br><span class="def-code"><span class="lua5-ctrl">{</span>[<span class="lua5-literal">20</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Minotaur'</span>, [<span class="lua5-literal">21</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Minotaur'</span>, [<span class="lua5-literal">22</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Troll'</span>, [<span class="lua5-literal">23</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Troll'</span>, [<span class="lua5-literal">24</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Dragon'</span>, [<span class="lua5-literal">25</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Dragon'</span><span class="lua5-ctrl">}</span></span>
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollMode" class="abs"></a><h5 class="def-h5">PaperDollMode</h5>
</td><td class="def-right">
 Defaults to <a href="#structs.GameStructure.Version">Game.Version</a>. If set to <b class="def-param">6</b> prior to including <b class="def-param">PaperDoll</b> module, <a href="#PaperDollDrawOrder">PaperDollDrawOrder</a> would be different. If set to <b class="def-param">8</b>, spears aren't treated as a 2-handed weapon.
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollDrawOrder" class="abs"></a><h5 class="def-h5">PaperDollDrawOrder</h5>
</td><td class="def-right">
 Default (depending on <a href="#PaperDollMode">PaperDollMode</a>):<br><span class="def-code"><span class="lua5-ctrl">{</span><span class="lua5-str">'ItemBow'</span>, <span class="lua5-str">'ItemCloak'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'PlayerBody'</span>, <span class="lua5-str">'PlayerBody.arm1'</span>, <span class="lua5-str">'PlayerBody.arm1f'</span>, <span class="lua5-str">'PlayerBody.arm2hb'</span>, <span class="lua5-str">'PlayerBody.arm2f'</span>, <span class="lua5-str">'PlayerBody.shield'</span>, <span class="lua5-str">'ItemHelm.hair2'</span>, <span class="lua5-str">'ItemHelm.hair'</span>,<br><span class="lua5-tab">&#9;</span>mm6 <span class="lua5-ctrl">and</span> <span class="lua5-str">'ItemHelm'</span> <span class="lua5-ctrl">or</span> <span class="lua5-str">'ItemHelm.mm6'</span>, mm6 <span class="lua5-ctrl">and</span> <span class="lua5-str">'ItemBoots'</span> <span class="lua5-ctrl">or</span> <span class="lua5-str">'ItemBoots.mm6'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'ItemArmor'</span>, <span class="lua5-str">'ItemArmor.arm1'</span>, <span class="lua5-str">'ItemArmor.arm1f'</span>,<br><span class="lua5-tab">&#9;</span>mm6 <span class="lua5-ctrl">and</span> <span class="lua5-str">'ItemBoots.boots'</span> <span class="lua5-ctrl">or</span> <span class="lua5-str">'ItemBoots'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'ItemBelt'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'PlayerBody.arm2'</span>, <span class="lua5-str">'PlayerBody.arm2h'</span>, <span class="lua5-str">'ItemArmor.arm2'</span>, <span class="lua5-str">'ItemArmor.arm2h'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'ItemCloak.scarf'</span>, <span class="lua5-str">'PlayerBody.scarf'</span>, mm6 <span class="lua5-ctrl">and</span> <span class="lua5-str">'ItemHelm.scarf'</span> <span class="lua5-ctrl">or</span> <span class="lua5-str">'ItemHelm'</span>, <span class="lua5-str">'ItemCloak.scarf2'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'ItemMainHand'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'PlayerBody.hand1'</span>, <span class="lua5-str">'PlayerBody.hand1x'</span>, <span class="lua5-str">'ItemArmor.hand1'</span>, <span class="lua5-str">'ItemArmor.hand1x'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'ItemExtraHand.hand2'</span>, <span class="lua5-str">'ItemExtraHand.shield'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'PlayerBody.hand2'</span>, <span class="lua5-str">'PlayerBody.hand2h'</span>, <span class="lua5-str">'ItemArmor.hand2'</span>, <span class="lua5-str">'ItemArmor.hand2h'</span>,<br><span class="lua5-ctrl">}</span></span>
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="PaperDollAddRace" class="abs"></a><h5 class="def-h5">PaperDollAddRace</h5><b class="def-largs">(</b>name, races<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollAddBodies" class="abs"></a><h5 class="def-h5">PaperDollAddBodies</h5><b class="def-largs">(</b>bodies<b class="def-rargs">)</b>
</td><td class="def-right">
 Defines doll categories for <b class="def-param">bodies</b> array together with male and female variations of each.<br>If <b class="def-param">bodies</b> table isn't specified, uses <a href="#PaperDollSpecialBodies">PaperDollSpecialBodies</a> table and defines the "Base" paper dolls as well.
</td>
</tr><tr>
<td class="def-left">
<a id="AddPaperDollGraphics" class="abs"></a><h5 class="def-h5">AddPaperDollGraphics</h5><b class="def-largs">(</b>t<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">t</b> can be a string following the "PaperDol.txt" convention or a table that's similar to the result of calling <a href="#ParseNamedColTable">ParseNamedColTable</a> for such file.<br>Example &ndash; loading additional paper doll file for mods:<br><span class="def-code">events.ReloadPaperDollGraphics <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span><span class="lua5-ctrl">|</span> AddPaperDollGraphics(Game.LoadTextFileFromLod<span class="lua5-str">'PaperMod.txt'</span>)</span>
</td>
</tr><tr>
<td class="def-left">
<a id="ReloadPaperDollGraphics" class="abs"></a><h5 class="def-h5">ReloadPaperDollGraphics</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Reloads "PaperDol.txt" and calls <a href="#events.ReloadPaperDollGraphics">ReloadPaperDollGraphics</a> event. Very handy while tweaking "PaperDol.txt"
</td>
</tr></tbody>
</table>
<br>


<br>
<hr>
<a id="Structures"></a><h2>Structures</h2>



<br><a id="structs.GameStructure"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>Game</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameStructure.Version" class="abs"></a>Version
</td><td class="def-right">
 (6 &ndash; 8)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Races" class="abs"></a><a href="#structs.GameRaces">Races</a>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Classes" class="abs"></a><a href="#structs.GameClasses">Classes</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ClassKinds" class="abs"></a><a href="#structs.GameClassKinds">ClassKinds</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Party" class="abs"></a><a href="#structs.GameParty">Party</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Map" class="abs"></a><a href="#structs.GameMap">Map</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Mouse" class="abs"></a><a href="#structs.GameMouse">Mouse</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Weather" class="abs"></a><a href="#structs.Weather">Weather</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Screen" class="abs"></a><a href="#structs.GameScreen">Screen</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PatchOptions" class="abs"></a><a href="#structs.PatchOptions">PatchOptions</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CustomLods" class="abs"></a><a href="#structs.CustomLods">CustomLods</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.WindowHandle" class="abs"></a>WindowHandle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Windowed" class="abs"></a>Windowed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CurrentPlayer" class="abs"></a>CurrentPlayer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SkillRecoveryTimes" class="abs"></a>SkillRecoveryTimes[<a href="#const.Skills">skill</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MinMeleeRecoveryTime" class="abs"></a>MinMeleeRecoveryTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CurrentScreen" class="abs"></a>CurrentScreen
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CurrentCharScreen" class="abs"></a>CurrentCharScreen
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadingScreen" class="abs"></a>LoadingScreen
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseScreen" class="abs"></a>HouseScreen
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseNPCSlot" class="abs"></a>HouseNPCSlot
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseCost" class="abs"></a>HouseCost
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseAllowAction" class="abs"></a>HouseAllowAction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseActionInfo" class="abs"></a>HouseActionInfo
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseTeachMastery" class="abs"></a>HouseTeachMastery
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HousePicType" class="abs"></a>HousePicType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseOwnerPic" class="abs"></a>HouseOwnerPic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GuildJoinCost" class="abs"></a>GuildJoinCost[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StatsNames" class="abs"></a>StatsNames[<a href="#const.Stats">stat</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StatsDescriptions" class="abs"></a>StatsDescriptions[<a href="#const.Stats">stat</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SkillNames" class="abs"></a>SkillNames[<a href="#const.Skills">skill</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SkillDescriptions" class="abs"></a>SkillDescriptions[<a href="#const.Skills">skill</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ClassNames" class="abs"></a>ClassNames[<a href="#const.Class">class</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ClassDescriptions" class="abs"></a>ClassDescriptions[<a href="#const.Class">class</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Actions" class="abs"></a><a href="#structs.ActionItem">Actions</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NeedRedraw" class="abs"></a>NeedRedraw
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StatusMessage" class="abs"></a>StatusMessage
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MouseOverStatusMessage" class="abs"></a>MouseOverStatusMessage
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StatusDisappearTime" class="abs"></a>StatusDisappearTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ItemsTxt" class="abs"></a><a href="#structs.ItemsTxtItem">ItemsTxt</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StdItemsTxt" class="abs"></a><a href="#structs.StdItemsTxtItem">StdItemsTxt</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpcItemsTxt" class="abs"></a><a href="#structs.SpcItemsTxtItem">SpcItemsTxt</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PotionTxt" class="abs"></a>PotionTxt[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonstersTxt" class="abs"></a><a href="#structs.MonstersTxtItem">MonstersTxt</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PlaceMonTxt" class="abs"></a>PlaceMonTxt[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MapStats" class="abs"></a><a href="#structs.MapStatsItem">MapStats</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MapDoorSound" class="abs"></a>MapDoorSound[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MapFogChances" class="abs"></a><a href="#structs.FogChances">MapFogChances</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MoveToMap.Pos" class="abs"></a>MoveToMap.Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MoveToMap.X" class="abs"></a>MoveToMap.X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MoveToMap.Y" class="abs"></a>MoveToMap.Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MoveToMap.Z" class="abs"></a>MoveToMap.Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MoveToMap.Direction" class="abs"></a>MoveToMap.Direction
</td><td class="def-right">
 0 &ndash; 2047. 0 is East.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MoveToMap.LookAngle" class="abs"></a>MoveToMap.LookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MoveToMap.SpeedZ" class="abs"></a>MoveToMap.SpeedZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MoveToMap.Defined" class="abs"></a>MoveToMap.Defined
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Lucida_fnt" class="abs"></a>Lucida_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Smallnum_fnt" class="abs"></a>Smallnum_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Arrus_fnt" class="abs"></a>Arrus_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Create_fnt" class="abs"></a>Create_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Comic_fnt" class="abs"></a>Comic_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Book_fnt" class="abs"></a>Book_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Book2_fnt" class="abs"></a>Book2_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Cchar_fnt" class="abs"></a>Cchar_fnt
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Autonote_fnt" class="abs"></a>Autonote_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Spell_fnt" class="abs"></a>Spell_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TextBuffer" class="abs"></a>TextBuffer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TextBuffer2" class="abs"></a>TextBuffer2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.KeyCodes" class="abs"></a>KeyCodes[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.KeyTypes" class="abs"></a>KeyTypes[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Time" class="abs"></a>Time
</td><td class="def-right">
 Since 00 AM, January 1st, 1165/1168/1172
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Year" class="abs"></a>Year
</td><td class="def-right">
 Actual value, like 1172
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Month" class="abs"></a>Month
</td><td class="def-right">
 (0 &ndash; 11)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.WeekOfMonth" class="abs"></a>WeekOfMonth
</td><td class="def-right">
 (0 &ndash; 3)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.DayOfMonth" class="abs"></a>DayOfMonth
</td><td class="def-right">
 (0 &ndash; 27)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Hour" class="abs"></a>Hour
</td><td class="def-right">
 (0 &ndash; 23)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Minute" class="abs"></a>Minute
</td><td class="def-right">
 (0 &ndash; 59)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Second" class="abs"></a>Second
</td><td class="def-right">
 (0 &ndash; 59)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.BaseYear" class="abs"></a>BaseYear
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MaxBirthYear" class="abs"></a>MaxBirthYear
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NeedRender" class="abs"></a>NeedRender
</td><td class="def-right">
 Same as Party.NeedRender
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TurnBased" class="abs"></a>TurnBased
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TurnBasedPhase" class="abs"></a>TurnBasedPhase
</td><td class="def-right">
 1 = monsters move, 2 = combat, 3 = party walking
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TurnBasedDelays" class="abs"></a>TurnBasedDelays[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.RedbookHandle" class="abs"></a>RedbookHandle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MSSHandle" class="abs"></a>MSSHandle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.BinkVideo" class="abs"></a>BinkVideo
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SmackVideo" class="abs"></a>SmackVideo
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.EquipStat2ItemSlot" class="abs"></a>EquipStat2ItemSlot[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonsterClassSex" class="abs"></a>MonsterClassSex[]
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  <span class="def-code">MonClass <span class="lua5-note">=</span> (Id <span class="lua5-operator">+</span> <span class="lua5-literal">2</span>):div(<span class="lua5-literal">3</span>)</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonsterClassRace" class="abs"></a>MonsterClassRace[]
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  <span class="def-code">MonClass <span class="lua5-note">=</span> (Id <span class="lua5-operator">+</span> <span class="lua5-literal">2</span>):div(<span class="lua5-literal">3</span>)</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonsterSex" class="abs"></a>MonsterSex[]
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonsterClassInfoY" class="abs"></a>MonsterClassInfoY[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Paused" class="abs"></a>Paused
</td><td class="def-right">
 pauses game logic
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Paused2" class="abs"></a>Paused2
</td><td class="def-right">
 pauses updating view
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TimeDelta" class="abs"></a>TimeDelta
</td><td class="def-right">
 Time since last tick
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopItems" class="abs"></a><a href="#structs.Item">ShopItems</a>[house][slot]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopSpecialItems" class="abs"></a><a href="#structs.Item">ShopSpecialItems</a>[house][slot]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GuildItems" class="abs"></a><a href="#structs.Item">GuildItems</a>[house][school][slot]
</td><td class="def-right">
 In MM8 in each guild items for all 12 schools of magic are generated. In MM6 and MM7 <b class="def-param">school</b> can only be 0.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ScanlineOffset" class="abs"></a>ScanlineOffset[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopNextRefill" class="abs"></a>ShopNextRefill[house]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ObjectByPixel" class="abs"></a><a href="#structs.ObjectRef">ObjectByPixel</a>[y][x]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ArmageddonTimeLeft" class="abs"></a>ArmageddonTimeLeft
</td><td class="def-right">
 maximum is 417
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ArmageddonSkill" class="abs"></a>ArmageddonSkill
</td><td class="def-right">
 damage is 50 + skill
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.OutdoorViewMul" class="abs"></a>OutdoorViewMul
</td><td class="def-right">
 Acts as the opposite of FOV
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GlobalTxt" class="abs"></a>GlobalTxt[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Houses" class="abs"></a><a href="#structs.Events2DItem">Houses</a>[]
</td><td class="def-right">
 2DEvents.txt
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseMovies" class="abs"></a><a href="#structs.HouseMovie">HouseMovies</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TransTxt" class="abs"></a>TransTxt[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpecialEnterX" class="abs"></a>SpecialEnterX[]
</td><td class="def-right">
 Used for Free Haven Sewer entrances in MM6. Negative Questbit Restrictions field in <b class="def-param">2DEvents.txt</b> corresponds to array index
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpecialEnterY" class="abs"></a>SpecialEnterY[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpecialEnterZ" class="abs"></a>SpecialEnterZ[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpecialEnterDirection" class="abs"></a>SpecialEnterDirection[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCTopic" class="abs"></a>NPCTopic[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCText" class="abs"></a>NPCText[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCGreet" class="abs"></a>NPCGreet[][]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCGroup" class="abs"></a>NPCGroup[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCNews" class="abs"></a><a href="#structs.NPCNewsItem">NPCNews</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HistoryTxt" class="abs"></a><a href="#structs.HistoryTxtItem">HistoryTxt</a>[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCNewsCountByMap" class="abs"></a>NPCNewsCountByMap[]
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCDataTxt" class="abs"></a><a href="#structs.NPC">NPCDataTxt</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPC" class="abs"></a><a href="#structs.NPC">NPC</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StreetNPC" class="abs"></a><a href="#structs.NPC">StreetNPC</a>[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCProfNames" class="abs"></a>NPCProfNames[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCNames" class="abs"></a>NPCNames[][]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCNamesCount" class="abs"></a>NPCNamesCount[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Spells" class="abs"></a><a href="#structs.SpellInfo">Spells</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpellsTxt" class="abs"></a><a href="#structs.SpellsTxtItem">SpellsTxt</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.QuestsTxt" class="abs"></a>QuestsTxt[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.AwardsTxt" class="abs"></a>AwardsTxt[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.AwardsSort" class="abs"></a>AwardsSort[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.AutonoteTxt" class="abs"></a>AutonoteTxt[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.AutonoteCategory" class="abs"></a>AutonoteCategory[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  0 = potion<br>1 = stat<br>2 = obelisk<br>3 = seer<br>4 = misc<br>5 = teacher
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MerchantTxt" class="abs"></a>MerchantTxt[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CtrlPressed" class="abs"></a>CtrlPressed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.RightButtonPressed" class="abs"></a>RightButtonPressed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TownPortalInfo" class="abs"></a><a href="#structs.TownPortalTownInfo">TownPortalInfo</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TownPortalX" class="abs"></a>TownPortalX[]
</td><td class="def-right">
 Town portal picture: townport
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TownPortalY" class="abs"></a>TownPortalY[]
</td><td class="def-right">
 Town portal icons <span class="def-ver">[MM7+]</span>: tpharmndy, tpelf, tpwarlock, tpisland, tpheaven, tphell
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TownPortalHeight" class="abs"></a>TownPortalHeight[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TownPortalWidth" class="abs"></a>TownPortalWidth[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TransportLocations" class="abs"></a><a href="#structs.TravelInfo">TransportLocations</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TransportIndex" class="abs"></a>TransportIndex[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HostileTxt" class="abs"></a>HostileTxt[mon1][mon2]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  0 &ndash; 4. Attitude of <b class="def-param">mon1</b> towards <b class="def-param">mon2</b>. <b class="def-param">mon2</b> = 0 is party. <b class="def-param">mon1</b> and <b class="def-param">mon2</b> are monster classes: <span class="def-code">mon1 <span class="lua5-note">=</span> (Id1 <span class="lua5-operator">+</span> <span class="lua5-literal">2</span>):div(<span class="lua5-literal">3</span>)</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NewGameMap" class="abs"></a>NewGameMap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.WinMapIndex" class="abs"></a>WinMapIndex
</td><td class="def-right">
 Number represented as a string.<br><span class="def-ver">[MM6]</span> Index in games.lod<br>[MM7,8] Index in mapstats.txt
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GlobalEvtLines" class="abs"></a><a href="#structs.EventLine">GlobalEvtLines</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MapEvtLines" class="abs"></a><a href="#structs.EventLine">MapEvtLines</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SFTBin" class="abs"></a><a href="#structs.SFT">SFTBin</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.DecListBin" class="abs"></a><a href="#structs.DecListItem">DecListBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PFTBin" class="abs"></a><a href="#structs.PFTItem">PFTBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.IFTBin" class="abs"></a><a href="#structs.IFTItem">IFTBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TFTBin" class="abs"></a><a href="#structs.TFTItem">TFTBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ChestBin" class="abs"></a><a href="#structs.DChestItem">ChestBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.OverlayBin" class="abs"></a><a href="#structs.OverlayItem">OverlayBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ObjListBin" class="abs"></a><a href="#structs.ObjListItem">ObjListBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonListBin" class="abs"></a><a href="#structs.MonListItem">MonListBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SoundsBin" class="abs"></a><a href="#structs.SoundsItem">SoundsBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TileBin" class="abs"></a><a href="#structs.TileItem">TileBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Tile2Bin" class="abs"></a><a href="#structs.TileItem">Tile2Bin</a>[]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Tile3Bin" class="abs"></a><a href="#structs.TileItem">Tile3Bin</a>[]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CurrentTileBin" class="abs"></a><a href="#structs.CurrentTileBin">CurrentTileBin</a>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MainMenuCode" class="abs"></a>MainMenuCode
</td><td class="def-right">
 -1 = in game, 1 = show new game, 6 = in new game, 3 = load menu, 4 = exit, 2 = show credits, 8 = in credits, 9 = load game
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ExitLevelCode" class="abs"></a>ExitLevelCode
</td><td class="def-right">
 0 = in game, 2 = load other map, 8 = death
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SoundVolume" class="abs"></a>SoundVolume
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GamesLod" class="abs"></a><a href="#structs.Lod">GamesLod</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.IconsLod" class="abs"></a><a href="#structs.BitmapsLod">IconsLod</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.BitmapsLod" class="abs"></a><a href="#structs.BitmapsLod">BitmapsLod</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpritesLod" class="abs"></a><a href="#structs.SpritesLod">SpritesLod</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SaveGameLod" class="abs"></a><a href="#structs.Lod">SaveGameLod</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.EventsLod" class="abs"></a><a href="#structs.Lod">EventsLod</a>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.RendererD3D" class="abs"></a>RendererD3D
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.IsD3D" class="abs"></a>IsD3D
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.RandSeed" class="abs"></a>RandSeed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonsterKinds" class="abs"></a><a href="#structs.MonsterKind">MonsterKinds</a>[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameStructure.ExitHouseScreen" class="abs"></a>ExitHouseScreen<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ProcessActions" class="abs"></a>ProcessActions<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Rand" class="abs"></a>Rand<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SetInterfaceColor" class="abs"></a>SetInterfaceColor<b class="def-largs">(</b>Color, Unk = 1<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  0 = good, 1 = neutral, 2 = evil
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.DoShowMovie" class="abs"></a>DoShowMovie<b class="def-largs">(</b>Name, Y, DoubleSize, ExitCurrentScreen<b class="def-rargs">)</b>
</td><td class="def-right">
 Only call from <a href="#events.ShowMovie">events.ShowMovie</a>, use <a href="#evt.ShowMovie">evt.ShowMovie</a> otherwise.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CalcSpellDamage" class="abs"></a>CalcSpellDamage<b class="def-largs">(</b>Spell, Skill, Mastery, MonsterHP<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GetSpellDamageType" class="abs"></a>GetSpellDamageType<b class="def-largs">(</b>Spell<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GetStatisticEffect" class="abs"></a>GetStatisticEffect<b class="def-largs">(</b>Stat<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.EscMessage" class="abs"></a>EscMessage<b class="def-largs">(</b>Text, Unk = 0<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SummonMonster" class="abs"></a>SummonMonster<b class="def-largs">(</b>Id, X, Y, Z<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.IsMonsterOfKind" class="abs"></a>IsMonsterOfKind<b class="def-largs">(</b>Id, <a href="#const.MonsterKind">Kind</a><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadSound" class="abs"></a>LoadSound<b class="def-largs">(</b>SoundId, Unk = 0, Unk2 = 0<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">Unk2</b> is present only in MM8
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PlaySound" class="abs"></a>PlaySound<b class="def-largs">(</b>SoundId, Object = -1, Loops = 0, X = -1, Y = 0, Unk = 0, Volume = 0, PlaybackRate = 0<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StopAllSounds" class="abs"></a>StopAllSounds<b class="def-largs">(</b>keepMin = -1, keepMax = -1<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadDecSprite" class="abs"></a>LoadDecSprite<b class="def-largs">(</b>Name<b class="def-rargs">)</b>
</td><td class="def-right">
 Loads a sprite and returns its ID.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadBitmap" class="abs"></a>LoadBitmap<b class="def-largs">(</b>Name<b class="def-rargs">)</b>
</td><td class="def-right">
 Loads a texture and returns its ID.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.UpdateDialogTopics" class="abs"></a>UpdateDialogTopics<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShowStatusText" class="abs"></a>ShowStatusText<b class="def-largs">(</b>Text, Seconds = 2<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadPalette" class="abs"></a>LoadPalette<b class="def-largs">(</b>PalNum<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadDataFileFromLod" class="abs"></a>LoadDataFileFromLod<b class="def-largs">(</b>Name, UseMalloc<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadTextFileFromLod" class="abs"></a>LoadTextFileFromLod<b class="def-largs">(</b>Name<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GetCurrentHouse" class="abs"></a>GetCurrentHouse<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameParty"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>Party</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameParty.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Direction" class="abs"></a>Direction
</td><td class="def-right">
 0 &ndash; 2047. 0 is East, 512 is North and so on.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LookAngle" class="abs"></a>LookAngle
</td><td class="def-right">
 -512 &ndash; 512. Values allowed with mouse look: -240 &ndash; 300 (prior to patch 2.5: -200 &ndash; 200). Without mouse look: -128 &ndash; 128
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastX" class="abs"></a>LastX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastY" class="abs"></a>LastY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastZ" class="abs"></a>LastZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastDirection" class="abs"></a>LastDirection
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastLookAngle" class="abs"></a>LastLookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastEyeLevel" class="abs"></a>LastEyeLevel
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.SpeedX" class="abs"></a>SpeedX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.SpeedY" class="abs"></a>SpeedY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.SpeedZ" class="abs"></a>SpeedZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.StableZ" class="abs"></a>StableZ
</td><td class="def-right">
 <b class="def-param">Z</b> changes up and down while flying, <b class="def-param">StableZ</b> stays the same
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastStandFacet" class="abs"></a>LastStandFacet
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.FallStartZ" class="abs"></a>FallStartZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Flying" class="abs"></a>Flying
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.PlayersArray" class="abs"></a><a href="#structs.Player">PlayersArray</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.PlayersIndexes" class="abs"></a>PlayersIndexes[]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Players" class="abs"></a><a href="#structs.Player">Players</a>[]
</td><td class="def-right">
<b class="def-default">(Default)</b> 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.HiredNPC" class="abs"></a><a href="#structs.NPC">HiredNPC</a>[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastRegenerationTime" class="abs"></a>LastRegenerationTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.SpellBuffs" class="abs"></a><a href="#structs.SpellBuff">SpellBuffs</a>[<a href="#const.PartyBuff">buff</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Gold" class="abs"></a>Gold
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.BankGold" class="abs"></a>BankGold
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Food" class="abs"></a>Food
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Deaths" class="abs"></a>Deaths
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.PrisonTerms" class="abs"></a>PrisonTerms
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.BountiesCollected" class="abs"></a>BountiesCollected
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Fine" class="abs"></a>Fine
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.MonsHuntTarget" class="abs"></a>MonsHuntTarget[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.MonsHuntKilled" class="abs"></a>MonsHuntKilled[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.MonsHuntReset" class="abs"></a>MonsHuntReset[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.QBits" class="abs"></a>QBits[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.AutonotesBits" class="abs"></a>AutonotesBits[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.InArenaQuest" class="abs"></a>InArenaQuest
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.ArenaWinsPage" class="abs"></a>ArenaWinsPage
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.ArenaWinsSquire" class="abs"></a>ArenaWinsSquire
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.ArenaWinsKnight" class="abs"></a>ArenaWinsKnight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.ArenaWinsLord" class="abs"></a>ArenaWinsLord
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.ArcomageWins" class="abs"></a>ArcomageWins[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.ArtifactsFound" class="abs"></a>ArtifactsFound[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Alignment" class="abs"></a>Alignment
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  0 = good, 1 = neutral, 2 = evil
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Reputation" class="abs"></a>Reputation
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.History" class="abs"></a>History[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.CurrentPlayer" class="abs"></a>CurrentPlayer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.StateBits" class="abs"></a>StateBits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.NeedRender" class="abs"></a>NeedRender
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Drowning" class="abs"></a>Drowning
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.InAir" class="abs"></a>InAir
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.EnemyDetectorRed" class="abs"></a>EnemyDetectorRed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.EnemyDetectorYellow" class="abs"></a>EnemyDetectorYellow
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.FlyingBit" class="abs"></a>FlyingBit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.WaterWalkingBit" class="abs"></a>WaterWalkingBit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.InJumpSpell" class="abs"></a>InJumpSpell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.InLava" class="abs"></a>InLava
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameParty.RestAndHeal" class="abs"></a>RestAndHeal<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Wait" class="abs"></a>Wait<b class="def-largs">(</b>Minutes<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.FindActivePlayer" class="abs"></a>FindActivePlayer<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.GetFame" class="abs"></a>GetFame<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.GetReputation" class="abs"></a>GetReputation<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.AddGold" class="abs"></a>AddGold<b class="def-largs">(</b>Gold, Kind = 0<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">Kind</b> values:<br>0 = increase by Banker, give some part to followers<br>1 = take exect amount, ignore followers<br>2 = <span class="def-ver">[MM7+]</span> take all and don't show message, just clear status message<br>3 = <span class="def-ver">[MM7+]</span> take all and don't change status message
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.AddKillExp" class="abs"></a>AddKillExp<b class="def-largs">(</b>Experience<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">Experience</b> is shared among conscious players and effected by Learning skill
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.HasNPCProfession" class="abs"></a>HasNPCProfession<b class="def-largs">(</b>arg1<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.CountItems" class="abs"></a>CountItems<b class="def-largs">(</b>{item1, item2, ...}<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameMap"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>Map</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameMap.Refilled" class="abs"></a>Refilled
</td><td class="def-right">
 If the map has been refilled this visit, contains the last <a href="#mapvars">mapvars</a> table.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorOrOutdoor" class="abs"></a>IndoorOrOutdoor
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Monsters" class="abs"></a><a href="#structs.MapMonster">Monsters</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Vars" class="abs"></a>Vars[]
</td><td class="def-right">
 Variables for barrels/contests/etc events start at 75
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Objects" class="abs"></a><a href="#structs.MapObject">Objects</a>[]
</td><td class="def-right">
 Items, spells effects
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Sprites" class="abs"></a><a href="#structs.MapSprite">Sprites</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.SoundSprites" class="abs"></a>SoundSprites[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Chests" class="abs"></a><a href="#structs.MapChest">Chests</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.MapStatsIndex" class="abs"></a>MapStatsIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.NoNPC" class="abs"></a>NoNPC
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorHeader" class="abs"></a><a href="#structs.OdmHeader">OutdoorHeader</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Tilesets" class="abs"></a><a href="#structs.TilesetDef">Tilesets</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.HeightMap" class="abs"></a>HeightMap[y][x]
</td><td class="def-right">
 <span class="def-code">[(<span class="lua5-literal">64</span> <span class="lua5-operator">-</span> Party.Y <span class="lua5-operator">/</span> <span class="lua5-literal">0x200</span>):round()] [(<span class="lua5-literal">64</span> <span class="lua5-operator">+</span> Party.X <span class="lua5-operator">/</span> <span class="lua5-literal">0x200</span>):round()] <span class="lua5-note">=</span> (Party.Z <span class="lua5-operator">/</span> <span class="lua5-literal">32</span>):<span class="lua5-std">floor</span>()</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.TileMap" class="abs"></a>TileMap[y][x]
</td><td class="def-right">
 <span class="def-code">[(<span class="lua5-literal">64</span> <span class="lua5-operator">-</span> Party.Y <span class="lua5-operator">/</span> <span class="lua5-literal">0x200</span>):<span class="lua5-std">floor</span>()] [(<span class="lua5-literal">64</span> <span class="lua5-operator">+</span> Party.X <span class="lua5-operator">/</span> <span class="lua5-literal">0x200</span>):<span class="lua5-std">floor</span>()]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.UnknownMap" class="abs"></a>UnknownMap[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Models" class="abs"></a><a href="#structs.MapModel">Models</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IDList" class="abs"></a><a href="#structs.ObjectRef">IDList</a>[]
</td><td class="def-right">
 IDs of sprites on map (in <a href="#structs.ObjectRef">ObjectRef</a> form)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IDOffsets" class="abs"></a>IDOffsets[y][x]
</td><td class="def-right">
 OMAP &ndash; offsets in IDList
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.LoadedSkyBitmap" class="abs"></a>LoadedSkyBitmap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorSpawns" class="abs"></a><a href="#structs.SpawnPoint">OutdoorSpawns</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorRefillCount" class="abs"></a>OutdoorRefillCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorLastRefillDay" class="abs"></a>OutdoorLastRefillDay
</td><td class="def-right">
 First visit day
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorExtra" class="abs"></a><a href="#structs.MapExtra">OutdoorExtra</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorLastVisitTime" class="abs"></a>OutdoorLastVisitTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.VisibleMap1" class="abs"></a>VisibleMap1[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.VisibleMap2" class="abs"></a>VisibleMap2[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorReputation" class="abs"></a>OutdoorReputation
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.TilesetsFile" class="abs"></a>TilesetsFile
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  0 = dtile.bin, 1 = dtile2.bin, 2 = dtile3.bin
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.UnknownMap2" class="abs"></a>UnknownMap2[][]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Notes" class="abs"></a><a href="#structs.MapNote">Notes</a>[]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.TerNormDist" class="abs"></a>TerNormDist[][][]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.TerNormId" class="abs"></a>TerNormId[][][]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.TerNorm" class="abs"></a><a href="#structs.FloatVector">TerNorm</a>[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorHeader" class="abs"></a><a href="#structs.BlvHeader">IndoorHeader</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Vertexes" class="abs"></a><a href="#structs.MapVertex">Vertexes</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Facets" class="abs"></a><a href="#structs.MapFacet">Facets</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.FacetData" class="abs"></a><a href="#structs.FacetData">FacetData</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Rooms" class="abs"></a><a href="#structs.MapRoom">Rooms</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Lights" class="abs"></a><a href="#structs.MapLight">Lights</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Doors" class="abs"></a><a href="#structs.MapDoor">Doors</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.BSPNodes" class="abs"></a><a href="#structs.BSPNode">BSPNodes</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Outlines" class="abs"></a><a href="#structs.MapOutlines">Outlines</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorSpawns" class="abs"></a><a href="#structs.SpawnPoint">IndoorSpawns</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorRefillCount" class="abs"></a>IndoorRefillCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorLastRefillDay" class="abs"></a>IndoorLastRefillDay
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorExtra" class="abs"></a><a href="#structs.MapExtra">IndoorExtra</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorLastVisitTime" class="abs"></a>IndoorLastVisitTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.VisibileOutlines" class="abs"></a>VisibileOutlines[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorReputation" class="abs"></a>IndoorReputation
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Spawns" class="abs"></a>Spawns
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.RefillCount" class="abs"></a>RefillCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.LastRefillDay" class="abs"></a>LastRefillDay
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.LastVisitTime" class="abs"></a>LastVisitTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Reputation" class="abs"></a>Reputation
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.SpriteLights" class="abs"></a><a href="#structs.BaseLight">SpriteLights</a>[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameMap.Render" class="abs"></a>Render<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IsIndoor" class="abs"></a>IsIndoor<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IsOutdoor" class="abs"></a>IsOutdoor<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.LoadTileset" class="abs"></a>LoadTileset<b class="def-largs">(</b>Id<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.RoomFromPoint" class="abs"></a>RoomFromPoint<b class="def-largs">(</b>x, y, z<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.GetFloorLevel" class="abs"></a>GetFloorLevel<b class="def-largs">(</b>x, y, z, room<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">FloorZ</b>, <b class="def-param">FacetId</b>.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.GetGroundLevel" class="abs"></a>GetGroundLevel<b class="def-largs">(</b>x, y<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.GetFacet" class="abs"></a>GetFacet<b class="def-largs">(</b>Id<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameMouse"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>Mouse</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameMouse.Target" class="abs"></a><a href="#structs.ObjectRef">Target</a>
</td><td class="def-right">
 Use <a href="#structs.GameMouse.GetTarget">Mouse.GetTarget</a> instead.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.Item" class="abs"></a><a href="#structs.Item">Item</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameMouse.GetTarget" class="abs"></a>GetTarget<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <a href="#structs.ObjectRef">ObjectRef</a> of current mouse target
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.GetPos" class="abs"></a>GetPos<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns floating-point mouse position that includes sub-pixel difference caused by upscaling.<br>In UILayout mode this is the only way to find mouse coordinates when it's over 3D view. <a href="#structs.GameMouse.X">Mouse.X</a> and <a href="#structs.GameMouse.Y">Mouse.Y</a> would just return the middle of the view. When mouse is over interface items, both this function and <a href="#structs.GameMouse.X">Mouse.X</a>, <a href="#structs.GameMouse.Y">Mouse.Y</a> get coordinates within traditional interface to which UI layout is mapped.
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameMouse.SetIcon" class="abs"></a>SetIcon<b class="def-largs">(</b>Icon = "MICON1"<b class="def-rargs">)</b>
</td><td class="def-right">
 There are 3 special values:<br>"MICON1" = arrow cursor<br>"MICON2" = crosshair cursor for spells<br>"MICON3" = this cursor doesn't exist, don't use it<br>Other values change the picture of item carried by mouse.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.RemoveItem" class="abs"></a>RemoveItem<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Deletes item carried by the mouse and restores arrow cursor.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.AddItem" class="abs"></a>AddItem<b class="def-largs">(</b><a href="#structs.Item">Item</a><b class="def-rargs">)</b>
</td><td class="def-right">
 If there already was an item carried by the mouse, it will be taken into inventory or dropped.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.ReleaseItem" class="abs"></a>ReleaseItem<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 If there is an item carried by the mouse, it will be taken into inventory or dropped.
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameScreen"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>Screen</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameScreen.IsD3D" class="abs"></a>IsD3D
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.Width" class="abs"></a>Width
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.Pitch" class="abs"></a>Pitch
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.cx1" class="abs"></a>cx1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.cy1" class="abs"></a>cy1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.cx2" class="abs"></a>cx2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.cy2" class="abs"></a>cy2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.Buffer" class="abs"></a>Buffer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.ObjectByPixel" class="abs"></a>ObjectByPixel
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameScreen.Draw" class="abs"></a>Draw<b class="def-largs">(</b>x, y, pic, style, rotate, EnglishD<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.DrawItemEffect" class="abs"></a>DrawItemEffect<b class="def-largs">(</b>x, y, shapePic, effectPic, palShift, palAnimateFrom, palAnimateTo, rotate, EnglishD<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.DrawToObjectByPixel" class="abs"></a>DrawToObjectByPixel<b class="def-largs">(</b>x, y, pic, index, rotate, EnglishD<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameScreen.SaveToPcx" class="abs"></a>SaveToPcx<b class="def-largs">(</b>name, x, y, width, height<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">x</b>, <b class="def-param">y</b>, <b class="def-param">width</b>, <b class="def-param">height</b> are only used in MM6. MM7 and MM8 save a shot of whole screen area.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.SaveBufferToPcx" class="abs"></a>SaveBufferToPcx<b class="def-largs">(</b>name, x, y, width, height<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <b class="def-param">x</b>, <b class="def-param">y</b>, <b class="def-param">width</b>, <b class="def-param">height</b> are only used in MM6. MM7 and MM8 save a shot of whole screen area.
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ActionItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ActionItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ActionItem.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ActionItem.Info1" class="abs"></a>Info1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ActionItem.Info2" class="abs"></a>Info2
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.BSPNode"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.BSPNode</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.BSPNode.FrontNode" class="abs"></a>FrontNode
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BSPNode.BackNode" class="abs"></a>BackNode
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BSPNode.CoplanarOffset" class="abs"></a>CoplanarOffset
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BSPNode.CoplanarSize" class="abs"></a>CoplanarSize
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.BaseBonus"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.BaseBonus</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.BaseBonus.Base" class="abs"></a>Base
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseBonus.Bonus" class="abs"></a>Bonus
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.BaseLight"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.BaseLight</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.BaseLight.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.Radius" class="abs"></a>Radius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.R" class="abs"></a>R
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.G" class="abs"></a>G
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.B" class="abs"></a>B
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.BitmapsLod"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.BitmapsLod</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.BitmapsLod.File" class="abs"></a>File
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.FileName" class="abs"></a>FileName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.Loaded" class="abs"></a>Loaded
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.IOBuffer" class="abs"></a>IOBuffer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.IOBufferSize" class="abs"></a>IOBufferSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.LodHeaderSignature" class="abs"></a>LodHeaderSignature
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.Description" class="abs"></a>Description
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.ArchivesCount" class="abs"></a>ArchivesCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.ArchivesCArray" class="abs"></a>ArchivesCArray
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.ChapterHandle" class="abs"></a>ChapterHandle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.ChapterSize" class="abs"></a>ChapterSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.Files" class="abs"></a><a href="#structs.LodFile">Files</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.FilesOffset" class="abs"></a>FilesOffset
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.Bitmaps" class="abs"></a><a href="#structs.LodBitmap">Bitmaps</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.KeepCompressed" class="abs"></a>KeepCompressed
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.IsHardware" class="abs"></a>IsHardware
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.D3D_Surfaces" class="abs"></a>D3D_Surfaces[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.D3D_Textures" class="abs"></a>D3D_Textures[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.BitmapsLod.LoadBitmap" class="abs"></a>LoadBitmap<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.LoadTFTBitmap" class="abs"></a>LoadTFTBitmap<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.BlvHeader"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.BlvHeader</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.BlvHeader.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BlvHeader.FacetDataSize" class="abs"></a>FacetDataSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BlvHeader.RoomDataSize" class="abs"></a>RoomDataSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BlvHeader.RoomLightDataSize" class="abs"></a>RoomLightDataSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BlvHeader.DoorDataSize" class="abs"></a>DoorDataSize
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.CurrentTileBin"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.CurrentTileBin</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.CurrentTileBin.Items" class="abs"></a><a href="#structs.TileItem">Items</a>[]
</td><td class="def-right">
<b class="def-default">(Default)</b> 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.CustomLods"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.CustomLods</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.CustomLods.RecordIndex" class="abs"></a>RecordIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.CustomLods.Records" class="abs"></a><a href="#structs.LodRecord">Records</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.CustomLods.Load" class="abs"></a>Load<b class="def-largs">(</b>StdLod, Name<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.CustomLods.Free" class="abs"></a>Free<b class="def-largs">(</b>Ptr<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.DChestItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.DChestItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.DChestItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DChestItem.Width" class="abs"></a>Width
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DChestItem.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DChestItem.ImageIndex" class="abs"></a>ImageIndex
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.DecListItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.DecListItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.DecListItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.GameName" class="abs"></a>GameName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Radius" class="abs"></a>Radius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.LightRadius" class="abs"></a>LightRadius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.SFTIndex" class="abs"></a>SFTIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.SFTGroup" class="abs"></a>SFTGroup
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.NoBlockMovement" class="abs"></a>NoBlockMovement
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.NoDraw" class="abs"></a>NoDraw
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.FlickerSlow" class="abs"></a>FlickerSlow
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.FlickerMedium" class="abs"></a>FlickerMedium
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.FlickerFast" class="abs"></a>FlickerFast
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Marker" class="abs"></a>Marker
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.SlowLoop" class="abs"></a>SlowLoop
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.EmitFire" class="abs"></a>EmitFire
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.SoundOnDawn" class="abs"></a>SoundOnDawn
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.SoundOnDusk" class="abs"></a>SoundOnDusk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.EmitSmoke" class="abs"></a>EmitSmoke
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.SoundId" class="abs"></a>SoundId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Red" class="abs"></a>Red
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Green" class="abs"></a>Green
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Blue" class="abs"></a>Blue
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.EventLine"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.EventLine</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.EventLine.Event" class="abs"></a>Event
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.EventLine.Line" class="abs"></a>Line
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.EventLine.Offset" class="abs"></a>Offset
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.EventLine.RemoveEvent" class="abs"></a>RemoveEvent<b class="def-largs">(</b>id<b class="def-rargs">)</b>
</td><td class="def-right">
 It's a method of arrays of EventLine rather than EventLine itself.<br>E.g. <span class="def-code">Game.MapEvtLines:RemoveEvent(<span class="lua5-literal">100</span>)</span> would remove standard map event number <b class="def-param">100</b>, while <span class="def-code">Game.GlobalEvtLines:RemoveEvent(<span class="lua5-literal">100</span>)</span> would remove standard global event number <b class="def-param">100</b>.<br>To know exactly what would be disabled by <b class="def-param">RemoveEvent</b> method, you can look into text representations of decompiled events. For example, if you disable event <b class="def-param">226</b> in <b class="def-param">OUTE3</b> in MM6, it will disable both standard <b class="def-param">evt.map[226]</b> handler and <b class="def-param">events.LoadMap</b> event handler you see after it in the decompiled Lua script. When you see an event handler not associated with a script number in decompiled scripts, it usually belongs to the event right before it.<br>
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.Events2DItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.Events2DItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Events2DItem.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.Picture" class="abs"></a>Picture
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.OwnerName" class="abs"></a>OwnerName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.EnterText" class="abs"></a>EnterText
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.OwnerTitle" class="abs"></a>OwnerTitle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.PictureUnk" class="abs"></a>PictureUnk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.State" class="abs"></a>State
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.Rep" class="abs"></a>Rep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.Per" class="abs"></a>Per
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.C" class="abs"></a>C
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.Val" class="abs"></a>Val
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.A" class="abs"></a>A
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.OpenHour" class="abs"></a>OpenHour
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.CloseHour" class="abs"></a>CloseHour
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.ExitPic" class="abs"></a>ExitPic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.ExitMap" class="abs"></a>ExitMap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.QuestBitRestriction" class="abs"></a>QuestBitRestriction
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.FacetData"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.FacetData</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.FacetData.FacetIndex" class="abs"></a>FacetIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FacetData.BitmapIndex" class="abs"></a>BitmapIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FacetData.TFTIndex" class="abs"></a>TFTIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FacetData.BitmapU" class="abs"></a>BitmapU
</td><td class="def-right">
 Bitmap U Offset
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FacetData.BitmapV" class="abs"></a>BitmapV
</td><td class="def-right">
 Bitmap V Offset
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FacetData.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FacetData.Event" class="abs"></a>Event
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.FloatVector"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.FloatVector</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.FloatVector.1" class="abs"></a>1
</td><td class="def-right">
 same as <b class="def-param">X</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FloatVector.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FloatVector.2" class="abs"></a>2
</td><td class="def-right">
 same as <b class="def-param">Y</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FloatVector.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FloatVector.3" class="abs"></a>3
</td><td class="def-right">
 same as <b class="def-param">Z</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FloatVector.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.FogChances"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.FogChances</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.FogChances.Thick" class="abs"></a>Thick
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FogChances.Medium" class="abs"></a>Medium
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FogChances.Light" class="abs"></a>Light
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameClassKinds"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.GameClassKinds</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameClassKinds.HPBase" class="abs"></a>HPBase[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClassKinds.SPBase" class="abs"></a>SPBase[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClassKinds.StartingStats" class="abs"></a>StartingStats[][<a href="#const.Stats">stat</a>]
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClassKinds.StartingSkills" class="abs"></a>StartingSkills[][<a href="#const.Skills">skill</a>]
</td><td class="def-right">
 <span class="def-ver">[MM6]</span> <span class="def-nbsp"> </span>0 = not available, <span class="def-nbsp"> </span>1 = given on start, <span class="def-nbsp"> </span>2 = can choose on start, <span class="def-nbsp"> </span>3 = can learn<br><span class="def-ver">[MM7+]</span> <span class="def-nbsp"> </span>0 = can't choose, <span class="def-nbsp"> </span>1 = can choose on start, <span class="def-nbsp"> </span>2 = given on start
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameClasses"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.GameClasses</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameClasses.HPFactor" class="abs"></a>HPFactor[<a href="#const.Class">class</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClasses.SPFactor" class="abs"></a>SPFactor[<a href="#const.Class">class</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClasses.HPBase" class="abs"></a>HPBase[<a href="#const.Class">class</a>]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClasses.SPBase" class="abs"></a>SPBase[<a href="#const.Class">class</a>]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClasses.Skills" class="abs"></a>Skills[<a href="#const.Class">class</a>][<a href="#const.Skills">skill</a>]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  0 = not available, <span class="def-nbsp"> </span>1 = Basic, <span class="def-nbsp"> </span>2 = Expert, <span class="def-nbsp"> </span>3 = Master, <span class="def-nbsp"> </span>4 = GM
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClasses.StartingStats" class="abs"></a><a href="#structs.StartStat">StartingStats</a>[<a href="#const.Class">class</a>]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClasses.SPStats" class="abs"></a>SPStats[<a href="#const.Class">class</a>]
</td><td class="def-right">
 0 = no SP, 1 = Intellect, 2 = Personality, 3 = both
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameRaces"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.GameRaces</h3>
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameRaces.StartingStats" class="abs"></a><a href="#structs.StartStat">StartingStats</a>[<a href="#const.Race">race</a>][<a href="#const.Stats">stat</a>]
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.HistoryTxtItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.HistoryTxtItem</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.HistoryTxtItem.Text" class="abs"></a>Text
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.HistoryTxtItem.Title" class="abs"></a>Title
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.HistoryTxtItem.Time" class="abs"></a>Time
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.HouseMovie"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.HouseMovie</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.HouseMovie.FileName" class="abs"></a>FileName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.HouseMovie.Background" class="abs"></a>Background
</td><td class="def-right">
 EVTPAR* index, used only in MM6
</td>
</tr><tr>
<td class="def-left">
<a id="structs.HouseMovie.NPCPic" class="abs"></a>NPCPic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.HouseMovie.HouseType" class="abs"></a>HouseType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.HouseMovie.Sounds" class="abs"></a>Sounds
</td><td class="def-right">
 30000 + Sounds*100 is the Id in Sounds.txt
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.IFTItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.IFTItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.IFTItem.GroupName" class="abs"></a>GroupName
</td><td class="def-right">
 animation name
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.IconName" class="abs"></a>IconName
</td><td class="def-right">
 image name in icons.lod
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.Time" class="abs"></a>Time
</td><td class="def-right">
 time for this frame, units in 1/16 of a second
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.TotalTime" class="abs"></a>TotalTime
</td><td class="def-right">
 total time for this group
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.NotGroupEnd" class="abs"></a>NotGroupEnd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.GroupStart" class="abs"></a>GroupStart
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.IconIndex" class="abs"></a>IconIndex
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.Item"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.Item</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Item.Number" class="abs"></a>Number
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Bonus" class="abs"></a>Bonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.BonusStrength" class="abs"></a>BonusStrength
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Bonus2" class="abs"></a>Bonus2
</td><td class="def-right">
 Value in case of gold
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Charges" class="abs"></a>Charges
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Identified" class="abs"></a>Identified
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Broken" class="abs"></a>Broken
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.TemporaryBonus" class="abs"></a>TemporaryBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Stolen" class="abs"></a>Stolen
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Hardened" class="abs"></a>Hardened
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Condition" class="abs"></a>Condition
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.BodyLocation" class="abs"></a>BodyLocation
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.MaxCharges" class="abs"></a>MaxCharges
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Owner" class="abs"></a>Owner
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.BonusExpireTime" class="abs"></a>BonusExpireTime
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Item.GetValue" class="abs"></a>GetValue<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.GetName" class="abs"></a>GetName<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.GetIdentifiedName" class="abs"></a>GetIdentifiedName<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.GenerateArtifact" class="abs"></a>GenerateArtifact<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Randomize" class="abs"></a>Randomize<b class="def-largs">(</b>Strenght, <a href="#const.ItemType">Type</a><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.T" class="abs"></a>T<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns ItemsTxt entry.
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ItemsTxtItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ItemsTxtItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Picture" class="abs"></a>Picture
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.NotIdentifiedName" class="abs"></a>NotIdentifiedName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Notes" class="abs"></a>Notes
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Value" class="abs"></a>Value
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.EquipStat" class="abs"></a><a href="#const.ItemType">EquipStat</a>
</td><td class="def-right">
 Subtract 1 from <a href="#const.ItemType">const.ItemType</a> value
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Skill" class="abs"></a><a href="#const.Skill">Skill</a>
</td><td class="def-right">
 Add 1 to <a href="#const.Skill">const.Skill</a> value
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Mod1DiceCount" class="abs"></a>Mod1DiceCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Mod1DiceSides" class="abs"></a>Mod1DiceSides
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Mod2" class="abs"></a>Mod2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Material" class="abs"></a>Material
</td><td class="def-right">
 0 = normal, <span class="def-nbsp"> </span>1 = artifact, <span class="def-nbsp"> </span>2 = relic, <span class="def-nbsp"> </span>3 = special
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.ChanceByLevel" class="abs"></a>ChanceByLevel[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.IdRepSt" class="abs"></a>IdRepSt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.SpriteIndex" class="abs"></a>SpriteIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.EquipX" class="abs"></a>EquipX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.EquipY" class="abs"></a>EquipY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Bonus2" class="abs"></a>Bonus2
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  VarA
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Bonus" class="abs"></a>Bonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  VarA
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.BonusStrength" class="abs"></a>BonusStrength
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  VarB
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LloydBeaconSlot"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LloydBeaconSlot</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.ExpireTime" class="abs"></a>ExpireTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.Direction" class="abs"></a>Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.LookAngle" class="abs"></a>LookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.Active" class="abs"></a>Active
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.MapIndex" class="abs"></a>MapIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.Map" class="abs"></a>Map
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.Lod"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.Lod</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Lod.File" class="abs"></a>File
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.FileName" class="abs"></a>FileName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.Loaded" class="abs"></a>Loaded
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.IOBuffer" class="abs"></a>IOBuffer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.IOBufferSize" class="abs"></a>IOBufferSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.LodHeaderSignature" class="abs"></a>LodHeaderSignature
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.Description" class="abs"></a>Description
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.ArchivesCount" class="abs"></a>ArchivesCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.ArchivesCArray" class="abs"></a>ArchivesCArray
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.ChapterHandle" class="abs"></a>ChapterHandle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.ChapterSize" class="abs"></a>ChapterSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.Files" class="abs"></a><a href="#structs.LodFile">Files</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.FilesOffset" class="abs"></a>FilesOffset
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LodBitmap"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LodBitmap</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodBitmap.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.BmpSize" class="abs"></a>BmpSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.DataSize" class="abs"></a>DataSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Width" class="abs"></a>Width
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.WidthLn2" class="abs"></a>WidthLn2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.HeightLn2" class="abs"></a>HeightLn2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.WidthMinus1" class="abs"></a>WidthMinus1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.HeightMinus1" class="abs"></a>HeightMinus1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Palette" class="abs"></a>Palette
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.LoadedPalette" class="abs"></a>LoadedPalette
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.UnpackedSize" class="abs"></a>UnpackedSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Image" class="abs"></a>Image
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.ImageDiv2" class="abs"></a>ImageDiv2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.ImageDiv4" class="abs"></a>ImageDiv4
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.ImageDiv8" class="abs"></a>ImageDiv8
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Palette16" class="abs"></a>Palette16
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Palette24" class="abs"></a>Palette24
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodBitmap.LoadBitmapPalette" class="abs"></a>LoadBitmapPalette<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LodFile"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LodFile</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodFile.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodFile.Offset" class="abs"></a>Offset
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodFile.Size" class="abs"></a>Size
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LodRecord"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LodRecord</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodRecord.LodPtr" class="abs"></a>LodPtr
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodRecord.NamePtr" class="abs"></a>NamePtr
</td><td class="def-right">
 Pointer passed to Load* function
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodRecord.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LodSprite"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LodSprite</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodSprite.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.DataSize" class="abs"></a>DataSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.Width" class="abs"></a>Width
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.Palette" class="abs"></a>Palette
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.YSkip" class="abs"></a>YSkip
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.UnpackedSize" class="abs"></a>UnpackedSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.Lines" class="abs"></a><a href="#structs.LodSpriteLine">Lines</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.Buffer" class="abs"></a>Buffer
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LodSpriteD3D"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LodSpriteD3D</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.Palette" class="abs"></a>Palette
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.Surface" class="abs"></a>Surface
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.Texture" class="abs"></a>Texture
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.AreaX" class="abs"></a>AreaX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.AreaY" class="abs"></a>AreaY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.BufferWidth" class="abs"></a>BufferWidth
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.BufferHeight" class="abs"></a>BufferHeight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.AreaWidth" class="abs"></a>AreaWidth
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.AreaHeight" class="abs"></a>AreaHeight
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LodSpriteLine"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LodSpriteLine</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodSpriteLine.L" class="abs"></a>L
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteLine.R" class="abs"></a>R
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteLine.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapChest"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapChest</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapChest.ChestPicture" class="abs"></a>ChestPicture
</td><td class="def-right">
 0..7 <span class="def-nbsp"> </span>chest id
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapChest.Trapped" class="abs"></a>Trapped
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapChest.ItemsPlaced" class="abs"></a>ItemsPlaced
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapChest.Identified" class="abs"></a>Identified
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapChest.Bits" class="abs"></a><a href="#const.ChestBits">Bits</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapChest.Items" class="abs"></a><a href="#structs.Item">Items</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapChest.Inventory" class="abs"></a>Inventory[]
</td><td class="def-right">
 (<b class="def-param">Items</b> index) for main item cell, <span class="def-nbsp"> </span>-(1 + main <b class="def-param">Inventory</b> cell index) for other cells
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapDoor"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapDoor</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapDoor.StartState2" class="abs"></a>StartState2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.SilentMove" class="abs"></a>SilentMove
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.NoSound" class="abs"></a>NoSound
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.Stopped" class="abs"></a>Stopped
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.TimeStep" class="abs"></a>TimeStep
</td><td class="def-right">
 time since triggered
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.Direction" class="abs"></a>Direction[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.DirectionX" class="abs"></a>DirectionX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.DirectionY" class="abs"></a>DirectionY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.DirectionZ" class="abs"></a>DirectionZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.MoveLength" class="abs"></a>MoveLength
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.Speed2" class="abs"></a>Speed2
</td><td class="def-right">
 State 3 velocity (speed*time/128 = position)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.OpenSpeed" class="abs"></a>OpenSpeed
</td><td class="def-right">
 State 3 velocity (speed*time/128 = position)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.Speed1" class="abs"></a>Speed1
</td><td class="def-right">
 State 1 velocity (speed*time/128 = position)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.CloseSpeed" class="abs"></a>CloseSpeed
</td><td class="def-right">
 State 1 velocity
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.VertexIds" class="abs"></a>VertexIds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.FacetIds" class="abs"></a>FacetIds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.RoomIds" class="abs"></a>RoomIds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.FacetStartU" class="abs"></a>FacetStartU[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.FacetStartV" class="abs"></a>FacetStartV[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.VertexStartX" class="abs"></a>VertexStartX[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.VertexStartY" class="abs"></a>VertexStartY[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.VertexStartZ" class="abs"></a>VertexStartZ[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.State" class="abs"></a>State
</td><td class="def-right">
 <b class="def-param">State</b> compared with evt.SetDoorState:<br>0 = state (0)<br>1 = move to (1)<br>2 = state (1)<br>3 = move to (0)
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapExtra"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapExtra</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapExtra.LastVisitTime" class="abs"></a>LastVisitTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.SkyBitmap" class="abs"></a>SkyBitmap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.Foggy" class="abs"></a>Foggy
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.DayBits" class="abs"></a>DayBits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.FogRange1" class="abs"></a>FogRange1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.FogRange2" class="abs"></a>FogRange2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.Raining" class="abs"></a>Raining
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.Snowing" class="abs"></a>Snowing
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.Underwater" class="abs"></a>Underwater
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  elemw.odm
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.NoTerrain" class="abs"></a>NoTerrain
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  elema.odm
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.AlwaysDark" class="abs"></a>AlwaysDark
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.AlwaysLight" class="abs"></a>AlwaysLight
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  elema.odm
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.AlwaysFoggy" class="abs"></a>AlwaysFoggy
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  elemf.odm, elemw.odm
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.RedFog" class="abs"></a>RedFog
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  elemf.odm
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.Bits" class="abs"></a>Bits
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.Ceiling" class="abs"></a>Ceiling
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.LastWeeklyTimer" class="abs"></a>LastWeeklyTimer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.LastMonthlyTimer" class="abs"></a>LastMonthlyTimer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.LastYearlyTimer" class="abs"></a>LastYearlyTimer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.LastDailyTimer" class="abs"></a>LastDailyTimer
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapFacet"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapFacet</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapFacet.NormalF" class="abs"></a>NormalF[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  normal float
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalFX" class="abs"></a>NormalFX
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  normal X float
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalFY" class="abs"></a>NormalFY
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  normal Y float
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalFZ" class="abs"></a>NormalFZ
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  normal Z float
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalFDistance" class="abs"></a>NormalFDistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  normal distance float
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.Normal" class="abs"></a>Normal[]
</td><td class="def-right">
 normal fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalX" class="abs"></a>NormalX
</td><td class="def-right">
 normal X fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalY" class="abs"></a>NormalY
</td><td class="def-right">
 normal Y fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalZ" class="abs"></a>NormalZ
</td><td class="def-right">
 normal Z fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalDistance" class="abs"></a>NormalDistance
</td><td class="def-right">
 normal distance fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ZCalc1" class="abs"></a>ZCalc1
</td><td class="def-right">
  <span class="def-nbsp"> </span><span class="def-code"><span class="lua5-note">=</span> <span class="lua5-operator">-</span>(NormalX <span class="lua5-operator">*</span> <span class="lua5-literal">2</span><span class="lua5-operator">^</span><span class="lua5-literal">16</span>) <span class="lua5-operator">/</span> NormalZ <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span></span>(or 0 if <b class="def-param">NormalZ</b> is 0)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ZCalc2" class="abs"></a>ZCalc2
</td><td class="def-right">
  <span class="def-nbsp"> </span><span class="def-code"><span class="lua5-note">=</span> <span class="lua5-operator">-</span>(NormalY <span class="lua5-operator">*</span> <span class="lua5-literal">2</span><span class="lua5-operator">^</span><span class="lua5-literal">16</span>) <span class="lua5-operator">/</span> NormalZ <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span></span>(or 0 if <b class="def-param">NormalZ</b> is 0)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ZCalc3" class="abs"></a>ZCalc3
</td><td class="def-right">
  <span class="def-nbsp"> </span><span class="def-code"><span class="lua5-note">=</span> <span class="lua5-operator">-</span>(NormalDistance <span class="lua5-operator">*</span> <span class="lua5-literal">2</span><span class="lua5-operator">^</span><span class="lua5-literal">16</span>) <span class="lua5-operator">/</span> NormalZ <span> </span></span>(or 0 if <b class="def-param">NormalZ</b> is 0)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.EventDisabledByCtrlClick" class="abs"></a>EventDisabledByCtrlClick
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ScrollDown" class="abs"></a>ScrollDown
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ScrollUp" class="abs"></a>ScrollUp
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.TriggerByObject" class="abs"></a>TriggerByObject
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  happens even if there's no event assigned
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.IsLava" class="abs"></a>IsLava
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ScrollLeft" class="abs"></a>ScrollLeft
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.HasData" class="abs"></a>HasData
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.FlipV" class="abs"></a>FlipV
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.AnimatedTFT" class="abs"></a>AnimatedTFT
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.Invisible" class="abs"></a>Invisible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.TriggerByStep" class="abs"></a>TriggerByStep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.IsSecret" class="abs"></a>IsSecret
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  show in red with Perception
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.AlignLeft" class="abs"></a>AlignLeft
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.TriggerByClick" class="abs"></a>TriggerByClick
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.DisableEventByCtrlClick" class="abs"></a>DisableEventByCtrlClick
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  indoor only: click event gets disabled by Ctrl+Click
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.AlternativeSound" class="abs"></a>AlternativeSound
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.TriggerByMonster" class="abs"></a>TriggerByMonster
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  happens even if there's no event assigned
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MoveByDoor" class="abs"></a>MoveByDoor
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.AlignRight" class="abs"></a>AlignRight
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.AlignTop" class="abs"></a>AlignTop
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.IsPortal" class="abs"></a>IsPortal
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.IsWater" class="abs"></a>IsWater
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.IsEventJustHint" class="abs"></a>IsEventJustHint
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ScrollRight" class="abs"></a>ScrollRight
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.IsSky" class="abs"></a>IsSky
</td><td class="def-right">
 outdoor in software mode: horizontal flow
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.Untouchable" class="abs"></a>Untouchable
</td><td class="def-right">
 great for vertical facets of stairs. <span class="def-ver">[MM7+]</span> Shouldn't be used for sloped floor, like it's used in MM6.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.FlipU" class="abs"></a>FlipU
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.AlignBottom" class="abs"></a>AlignBottom
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ProjectToXY" class="abs"></a>ProjectToXY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ProjectToYZ" class="abs"></a>ProjectToYZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ProjectToXZ" class="abs"></a>ProjectToXZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.Bits" class="abs"></a><a href="#const.FacetBits">Bits</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.VertexIds" class="abs"></a>VertexIds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.XInterceptDisplacement" class="abs"></a>XInterceptDisplacement[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.YInterceptDisplacement" class="abs"></a>YInterceptDisplacement[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ZInterceptDisplacement" class="abs"></a>ZInterceptDisplacement[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.UList" class="abs"></a>UList[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.VList" class="abs"></a>VList[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.DataIndex" class="abs"></a>DataIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.BitmapId" class="abs"></a>BitmapId
</td><td class="def-right">
 Bitmap Index
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.Room" class="abs"></a>Room
</td><td class="def-right">
 Room #
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.RoomBehind" class="abs"></a>RoomBehind
</td><td class="def-right">
 Room # Behind facet
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MinX" class="abs"></a>MinX
</td><td class="def-right">
 Bounding Box Min X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MaxX" class="abs"></a>MaxX
</td><td class="def-right">
 Bounding Box Max X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MinY" class="abs"></a>MinY
</td><td class="def-right">
 Bounding Box Min Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MaxY" class="abs"></a>MaxY
</td><td class="def-right">
 Bounding Box Max Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MinZ" class="abs"></a>MinZ
</td><td class="def-right">
 Bounding Box Min Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MaxZ" class="abs"></a>MaxZ
</td><td class="def-right">
 Bounding Box Max Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.PolygonType" class="abs"></a>PolygonType
</td><td class="def-right">
 Polygon type:<br>0 = empty<br>1 = wall<br>2 = unused<br>3 = horizontal floor<br>4 = irregular floor (non-horizontal)<br>5 = horizontal ceiling<br>6 = irregular ceiling (non-horizontal)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.VertexesCount" class="abs"></a>VertexesCount
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapLight"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapLight</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapLight.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Off" class="abs"></a>Off
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Radius" class="abs"></a>Radius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.R" class="abs"></a>R
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.G" class="abs"></a>G
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.B" class="abs"></a>B
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Type" class="abs"></a>Type
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Brightness" class="abs"></a>Brightness
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Id" class="abs"></a>Id
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapModel"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapModel</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapModel.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Name2" class="abs"></a>Name2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.ShowOnMap" class="abs"></a>ShowOnMap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Vertexes" class="abs"></a><a href="#structs.ModelVertex">Vertexes</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.ConvexFacetsCount" class="abs"></a>ConvexFacetsCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Facets" class="abs"></a><a href="#structs.ModelFacet">Facets</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Ordering" class="abs"></a>Ordering[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BSPNodes" class="abs"></a><a href="#structs.BSPNode">BSPNodes</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.GridX" class="abs"></a>GridX
</td><td class="def-right">
 center X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.GridY" class="abs"></a>GridY
</td><td class="def-right">
 center Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.MinX" class="abs"></a>MinX
</td><td class="def-right">
 Bounding MIN X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.MinY" class="abs"></a>MinY
</td><td class="def-right">
 Bounding MIN Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.MinZ" class="abs"></a>MinZ
</td><td class="def-right">
 Bounding MIN Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.MaxX" class="abs"></a>MaxX
</td><td class="def-right">
 Bounding MAX X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.MaxY" class="abs"></a>MaxY
</td><td class="def-right">
 Bounding MAX Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.MaxZ" class="abs"></a>MaxZ
</td><td class="def-right">
 Bounding MAX Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BFMinX" class="abs"></a>BFMinX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BFMinY" class="abs"></a>BFMinY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BFMinZ" class="abs"></a>BFMinZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BFMaxX" class="abs"></a>BFMaxX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BFMaxY" class="abs"></a>BFMaxY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BFMaxZ" class="abs"></a>BFMaxZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BoxCenterX" class="abs"></a>BoxCenterX
</td><td class="def-right">
 Bounding center X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BoxCenterY" class="abs"></a>BoxCenterY
</td><td class="def-right">
 Bounding center Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BoxCenterZ" class="abs"></a>BoxCenterZ
</td><td class="def-right">
 Bounding center Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BoundingRadius" class="abs"></a>BoundingRadius
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapMonster"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapMonster</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapMonster.Name" class="abs"></a>Name
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.NPC_ID" class="abs"></a>NPC_ID
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ShowOnMap" class="abs"></a>ShowOnMap
</td><td class="def-right">
 monster was once seen by party
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.OnAlertMap" class="abs"></a>OnAlertMap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Active" class="abs"></a>Active
</td><td class="def-right">
 inside the active radius
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ShowAsHostile" class="abs"></a>ShowAsHostile
</td><td class="def-right">
 show as hostile on map
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Hostile" class="abs"></a>Hostile
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.TreasureGenerated" class="abs"></a>TreasureGenerated
</td><td class="def-right">
 treasure is in <b class="def-param">Items</b>[0] and <b class="def-param">Items</b>[1], gold is in <b class="def-param">Items</b>[3]
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Invisible" class="abs"></a>Invisible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.IsObeliskChest" class="abs"></a>IsObeliskChest
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.NoFlee" class="abs"></a>NoFlee
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Bits" class="abs"></a><a href="#const.MonsterBits">Bits</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.HP" class="abs"></a>HP
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.HitPoints" class="abs"></a>HitPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Id" class="abs"></a>Id
</td><td class="def-right">
 Changing may cause random crashes after loading the game! Be careful.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Level" class="abs"></a>Level
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.TreasureItemPercent" class="abs"></a>TreasureItemPercent
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.TreasureDiceCount" class="abs"></a>TreasureDiceCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.TreasureDiceSides" class="abs"></a>TreasureDiceSides
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.TreasureItemLevel" class="abs"></a>TreasureItemLevel
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.TreasureItemType" class="abs"></a>TreasureItemType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Fly" class="abs"></a>Fly
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.MoveType" class="abs"></a>MoveType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.AIType" class="abs"></a>AIType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.HostileType" class="abs"></a>HostileType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Vampire" class="abs"></a>Prefers.Vampire
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Troll" class="abs"></a>Prefers.Troll
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Monk" class="abs"></a>Prefers.Monk
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Thief" class="abs"></a>Prefers.Thief
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Cleric" class="abs"></a>Prefers.Cleric
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Male" class="abs"></a>Prefers.Male
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Sorcerer" class="abs"></a>Prefers.Sorcerer
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Female" class="abs"></a>Prefers.Female
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Dragon" class="abs"></a>Prefers.Dragon
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Minotaur" class="abs"></a>Prefers.Minotaur
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.DarkElf" class="abs"></a>Prefers.DarkElf
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Necro" class="abs"></a>Prefers.Necro
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Goblin" class="abs"></a>Prefers.Goblin
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Archer" class="abs"></a>Prefers.Archer
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Paladin" class="abs"></a>Prefers.Paladin
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Druid" class="abs"></a>Prefers.Druid
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Dwarf" class="abs"></a>Prefers.Dwarf
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Ranger" class="abs"></a>Prefers.Ranger
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Elf" class="abs"></a>Prefers.Elf
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Human" class="abs"></a>Prefers.Human
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Knight" class="abs"></a>Prefers.Knight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.PrefClass" class="abs"></a>PrefClass
</td><td class="def-right">
 Preferred target
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Bonus" class="abs"></a>Bonus
</td><td class="def-right">
 (steal, curse, ...)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.BonusMul" class="abs"></a>BonusMul
</td><td class="def-right">
 (Disease1x5 etc. <span class="def-nbsp"> </span>I wish I knew what it means)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Attack1" class="abs"></a><a href="#structs.MonsterAttackInfo">Attack1</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Attack2Chance" class="abs"></a>Attack2Chance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Attack2" class="abs"></a><a href="#structs.MonsterAttackInfo">Attack2</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpellChance" class="abs"></a>SpellChance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Spell" class="abs"></a>Spell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Spell2Chance" class="abs"></a>Spell2Chance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Spell2" class="abs"></a>Spell2
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpellSkill" class="abs"></a>SpellSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Resistances" class="abs"></a>Resistances[<a href="#const.Damage">kind</a>]
</td><td class="def-right">
 For immunity use <a href="#const.MonsterImmune">const.MonsterImmune</a>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FireResistance" class="abs"></a>FireResistance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.AirResistance" class="abs"></a>AirResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.WaterResistance" class="abs"></a>WaterResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.EarthResistance" class="abs"></a>EarthResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.MindResistance" class="abs"></a>MindResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpiritResistance" class="abs"></a>SpiritResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.BodyResistance" class="abs"></a>BodyResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.LightResistance" class="abs"></a>LightResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.DarkResistance" class="abs"></a>DarkResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ElecResistance" class="abs"></a>ElecResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ColdResistance" class="abs"></a>ColdResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.PoisonResistance" class="abs"></a>PoisonResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.PhysResistance" class="abs"></a>PhysResistance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Special" class="abs"></a>Special
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  {shot, summon, explode}
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpecialA" class="abs"></a>SpecialA
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  shot: C = count<br>summon: A = {RandomLevel = 0, fixed = 1} &ndash; monster level (0 means A, B or C is chosen randomly, monster index should be that of A variation. Values of 2 and 3 are the same as 1, but in MM7 before GrayFace Patch v2.1 it was causing a bug), B = {ground = 0, air = 1}, C = already summoned count (up to 3), D = monster index<br>explode: AdB + C, D = attack type
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpecialB" class="abs"></a>SpecialB
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpecialC" class="abs"></a>SpecialC
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.MagicResistance" class="abs"></a>MagicResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.PrefNum" class="abs"></a>PrefNum
</td><td class="def-right">
 Number of party members to hit using Attack1 &amp; Attack2
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.BloodSplat" class="abs"></a>BloodSplat
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Spell2Skill" class="abs"></a>Spell2Skill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpecialD" class="abs"></a>SpecialD
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  (summoned monster or damage type in case of explosive attack)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.QuestItem" class="abs"></a>QuestItem
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FullHP" class="abs"></a>FullHP
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FullHitPoints" class="abs"></a>FullHitPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ArmorClass" class="abs"></a>ArmorClass
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Exp" class="abs"></a>Exp
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Experience" class="abs"></a>Experience
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.MoveSpeed" class="abs"></a>MoveSpeed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.AttackRecovery" class="abs"></a>AttackRecovery
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.RangeAttack" class="abs"></a>RangeAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Id2" class="abs"></a>Id2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.BodyRadius" class="abs"></a>BodyRadius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.BodyHeight" class="abs"></a>BodyHeight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Velocity" class="abs"></a>Velocity
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.VelocityX" class="abs"></a>VelocityX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.VelocityY" class="abs"></a>VelocityY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.VelocityZ" class="abs"></a>VelocityZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Direction" class="abs"></a>Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.LookAngle" class="abs"></a>LookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Room" class="abs"></a>Room
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.CurrentActionLength" class="abs"></a>CurrentActionLength
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.StartX" class="abs"></a>StartX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.StartY" class="abs"></a>StartY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.StartZ" class="abs"></a>StartZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GuardX" class="abs"></a>GuardX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GuardY" class="abs"></a>GuardY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GuardZ" class="abs"></a>GuardZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GuardRadius" class="abs"></a>GuardRadius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.AIState" class="abs"></a><a href="#const.AIState">AIState</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GraphicState" class="abs"></a>GraphicState
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Item" class="abs"></a>Item
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.CurrentActionStep" class="abs"></a>CurrentActionStep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Frames" class="abs"></a>Frames[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesStand" class="abs"></a>FramesStand
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesWalk" class="abs"></a>FramesWalk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesAttack" class="abs"></a>FramesAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesShoot" class="abs"></a>FramesShoot
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesStun" class="abs"></a>FramesStun
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesDie" class="abs"></a>FramesDie
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesDead" class="abs"></a>FramesDead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesFidget" class="abs"></a>FramesFidget
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Sounds" class="abs"></a>Sounds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SoundAttack" class="abs"></a>SoundAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SoundDie" class="abs"></a>SoundDie
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SoundGetHit" class="abs"></a>SoundGetHit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SoundFidget" class="abs"></a>SoundFidget
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpellBuffs" class="abs"></a><a href="#structs.SpellBuff">SpellBuffs</a>[<a href="#const.MonsterBuff">buff</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Items" class="abs"></a><a href="#structs.Item">Items</a>[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  Indexes 0 and 1 are used for stolen items, indexes 2 and 3 are used if TreasureGenerated bit is set: index 2 holds the item and index 3 holds the gold.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Group" class="abs"></a>Group
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Ally" class="abs"></a>Ally
</td><td class="def-right">
 Monster class that guards or is guraded by this one. That is, <span class="def-code">(Id <span class="lua5-operator">+</span> <span class="lua5-literal">2</span>):div(<span class="lua5-literal">3</span>)</span>, like in Hostile.txt.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Schedules" class="abs"></a><a href="#structs.MonsterSchedule">Schedules</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Summoner" class="abs"></a>Summoner
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.LastAttacker" class="abs"></a>LastAttacker
</td><td class="def-right">
 Last one who hit the monster
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.NameId" class="abs"></a>NameId
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  From PlaceMon.txt
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapMonster.LoadFrames" class="abs"></a>LoadFrames<b class="def-largs">(</b>SoundLoaded = false<b class="def-rargs">)</b>
</td><td class="def-right">
 If <b class="def-param">SoundLoaded</b> = <b class="def-param">false</b>, sound indexes would be loaded for the monster as well.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.LoadFramesAndSounds" class="abs"></a>LoadFramesAndSounds<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ChangeLook" class="abs"></a>ChangeLook<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GetPropertiesFromId" class="abs"></a>GetPropertiesFromId<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SetId" class="abs"></a>SetId<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SetCustomFrames" class="abs"></a>SetCustomFrames<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapNote"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapNote</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapNote.Active" class="abs"></a>Active
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapNote.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapNote.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapNote.Text" class="abs"></a>Text
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapNote.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapObject"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapObject</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapObject.Type" class="abs"></a>Type
</td><td class="def-right">
 look type <span class="def-nbsp"> </span>(see Id in dobjlist.bin)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.TypeIndex" class="abs"></a>TypeIndex
</td><td class="def-right">
 line in dobjlist.bin
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Velocity" class="abs"></a>Velocity[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.VelocityX" class="abs"></a>VelocityX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.VelocityY" class="abs"></a>VelocityY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.VelocityZ" class="abs"></a>VelocityZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Direction" class="abs"></a>Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.LookAngle" class="abs"></a>LookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Visible" class="abs"></a>Visible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Temporary" class="abs"></a>Temporary
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.HaltTurnBased" class="abs"></a>HaltTurnBased
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.DroppedByPlayer" class="abs"></a>DroppedByPlayer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.IgnoreRange" class="abs"></a>IgnoreRange
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.NoZBuffer" class="abs"></a>NoZBuffer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.SkipAFrame" class="abs"></a>SkipAFrame
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.AttachToHead" class="abs"></a>AttachToHead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Missile" class="abs"></a>Missile
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Removed" class="abs"></a>Removed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Room" class="abs"></a>Room
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Age" class="abs"></a>Age
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.MaxAge" class="abs"></a>MaxAge
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.LightMultiplier" class="abs"></a>LightMultiplier
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Item" class="abs"></a><a href="#structs.Item">Item</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.SpellType" class="abs"></a>SpellType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.SpellSkill" class="abs"></a>SpellSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.SpellLevel" class="abs"></a>SpellLevel
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.SpellEffect" class="abs"></a><a href="#structs.SpellEffect">SpellEffect</a>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Owner" class="abs"></a>Owner
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Target" class="abs"></a>Target
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Range" class="abs"></a>Range
</td><td class="def-right">
 Distance to target: 0 &ndash; less than 307.2, 1 &ndash; less than 1024, 2 &ndash; less then 2560, 3 &ndash; 2560 or more
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.AttackType" class="abs"></a>AttackType
</td><td class="def-right">
 0 &ndash; Attack1, 1 &ndash; Attack2, 2 &ndash; Spell, 3 &ndash; Spell2
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.StartPos" class="abs"></a>StartPos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.StartX" class="abs"></a>StartX
</td><td class="def-right">
 starting x
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.StartY" class="abs"></a>StartY
</td><td class="def-right">
 starting y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.StartZ" class="abs"></a>StartZ
</td><td class="def-right">
 starting z
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapOutline"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapOutline</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapOutline.Vertex1" class="abs"></a>Vertex1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapOutline.Vertex2" class="abs"></a>Vertex2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapOutline.Facet1" class="abs"></a>Facet1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapOutline.Facet2" class="abs"></a>Facet2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapOutline.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapOutline.Visible" class="abs"></a>Visible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapOutline.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapOutlines"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapOutlines</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapOutlines.Items" class="abs"></a><a href="#structs.MapOutline">Items</a>[]
</td><td class="def-right">
<b class="def-default">(Default)</b> 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapRoom"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapRoom</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapRoom.HasNonVerticalPortals" class="abs"></a>HasNonVerticalPortals
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.HasBSP" class="abs"></a>HasBSP
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.EaxEnvironment" class="abs"></a>EaxEnvironment
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Floors" class="abs"></a>Floors[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Walls" class="abs"></a>Walls[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Ceils" class="abs"></a>Ceils[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Fluids" class="abs"></a>Fluids[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Portals" class="abs"></a>Portals[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.NonBSPDrawFacetsCount" class="abs"></a>NonBSPDrawFacetsCount
</td><td class="def-right">
 # of non-BSP Node facets to draw
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.DrawFacets" class="abs"></a>DrawFacets[]
</td><td class="def-right">
 drawing order
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Cogs" class="abs"></a>Cogs[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Sprites" class="abs"></a>Sprites[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Markers" class="abs"></a>Markers[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Lights" class="abs"></a>Lights[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Darkness" class="abs"></a>Darkness
</td><td class="def-right">
 Min Ambient Light Level
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.FirstBSPNode" class="abs"></a>FirstBSPNode
</td><td class="def-right">
 First BSP Node Index
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.ExitTag" class="abs"></a>ExitTag
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.MinX" class="abs"></a>MinX
</td><td class="def-right">
 Bounding Box Min X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.MaxX" class="abs"></a>MaxX
</td><td class="def-right">
 Bounding Box Max X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.MinY" class="abs"></a>MinY
</td><td class="def-right">
 Bounding Box Min Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.MaxY" class="abs"></a>MaxY
</td><td class="def-right">
 Bounding Box Max Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.MinZ" class="abs"></a>MinZ
</td><td class="def-right">
 Bounding Box Min Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.MaxZ" class="abs"></a>MaxZ
</td><td class="def-right">
 Bounding Box Max Z
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapSprite"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapSprite</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapSprite.DecListId" class="abs"></a>DecListId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.DecName" class="abs"></a>DecName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.ShowOnMap" class="abs"></a>ShowOnMap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.TriggerByMonster" class="abs"></a>TriggerByMonster
</td><td class="def-right">
 triggered when a monster comes into <b class="def-param">TriggerRadius</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Invisible" class="abs"></a>Invisible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.IsObeliskChest" class="abs"></a>IsObeliskChest
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.TriggerByObject" class="abs"></a>TriggerByObject
</td><td class="def-right">
 triggered when an object gets into <b class="def-param">TriggerRadius</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.TriggerByTouch" class="abs"></a>TriggerByTouch
</td><td class="def-right">
 triggered when a player comes into <b class="def-param">TriggerRadius</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.IsShip" class="abs"></a>IsShip
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.IsChest" class="abs"></a>IsChest
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Bits" class="abs"></a><a href="#const.SpriteBits">Bits</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Direction" class="abs"></a>Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Id" class="abs"></a>Id
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.EventVariable" class="abs"></a>EventVariable
</td><td class="def-right">
 event variable for barrels etc.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Event" class="abs"></a>Event
</td><td class="def-right">
 normal event
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.TriggerRadius" class="abs"></a>TriggerRadius
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapStatsItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapStatsItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapStatsItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.FileName" class="abs"></a>FileName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Monster1Pic" class="abs"></a>Monster1Pic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Monster2Pic" class="abs"></a>Monster2Pic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Monster3Pic" class="abs"></a>Monster3Pic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.ResetCount" class="abs"></a>ResetCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.FirstVisitDay" class="abs"></a>FirstVisitDay
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.RefillDays" class="abs"></a>RefillDays
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.AlertDays" class="abs"></a>AlertDays
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.StealPerm" class="abs"></a>StealPerm
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Per" class="abs"></a>Per
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Lock" class="abs"></a>Lock
</td><td class="def-right">
 x5Lock
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Trap" class="abs"></a>Trap
</td><td class="def-right">
 D20sTrap
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Tres" class="abs"></a>Tres
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.EncounterChance" class="abs"></a>EncounterChance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.EncounterChanceM1" class="abs"></a>EncounterChanceM1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.EncounterChanceM2" class="abs"></a>EncounterChanceM2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.EncounterChanceM3" class="abs"></a>EncounterChanceM3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon1Dif" class="abs"></a>Mon1Dif
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon1Low" class="abs"></a>Mon1Low
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon1Hi" class="abs"></a>Mon1Hi
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon2Dif" class="abs"></a>Mon2Dif
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon2Low" class="abs"></a>Mon2Low
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon2Hi" class="abs"></a>Mon2Hi
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon3Dif" class="abs"></a>Mon3Dif
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon3Low" class="abs"></a>Mon3Low
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon3Hi" class="abs"></a>Mon3Hi
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.RedbookTrack" class="abs"></a>RedbookTrack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.EaxEnvironments" class="abs"></a>EaxEnvironments
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapVertex"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapVertex</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapVertex.1" class="abs"></a>1
</td><td class="def-right">
 same as <b class="def-param">X</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapVertex.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapVertex.2" class="abs"></a>2
</td><td class="def-right">
 same as <b class="def-param">Y</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapVertex.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapVertex.3" class="abs"></a>3
</td><td class="def-right">
 same as <b class="def-param">Z</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapVertex.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ModelFacet"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ModelFacet</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ModelFacet.Normal" class="abs"></a>Normal[]
</td><td class="def-right">
 normal fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.NormalX" class="abs"></a>NormalX
</td><td class="def-right">
 normal X fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.NormalY" class="abs"></a>NormalY
</td><td class="def-right">
 normal Y fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.NormalZ" class="abs"></a>NormalZ
</td><td class="def-right">
 normal Z fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.NormalDistance" class="abs"></a>NormalDistance
</td><td class="def-right">
 normal distance fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ZCalc1" class="abs"></a>ZCalc1
</td><td class="def-right">
  <span class="def-nbsp"> </span><span class="def-code"><span class="lua5-note">=</span> <span class="lua5-operator">-</span>(NormalX <span class="lua5-operator">*</span> <span class="lua5-literal">2</span><span class="lua5-operator">^</span><span class="lua5-literal">16</span>) <span class="lua5-operator">/</span> NormalZ <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span></span>(or 0 if <b class="def-param">NormalZ</b> is 0)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ZCalc2" class="abs"></a>ZCalc2
</td><td class="def-right">
  <span class="def-nbsp"> </span><span class="def-code"><span class="lua5-note">=</span> <span class="lua5-operator">-</span>(NormalY <span class="lua5-operator">*</span> <span class="lua5-literal">2</span><span class="lua5-operator">^</span><span class="lua5-literal">16</span>) <span class="lua5-operator">/</span> NormalZ <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span></span>(or 0 if <b class="def-param">NormalZ</b> is 0)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ZCalc3" class="abs"></a>ZCalc3
</td><td class="def-right">
  <span class="def-nbsp"> </span><span class="def-code"><span class="lua5-note">=</span> <span class="lua5-operator">-</span>(NormalDistance <span class="lua5-operator">*</span> <span class="lua5-literal">2</span><span class="lua5-operator">^</span><span class="lua5-literal">16</span>) <span class="lua5-operator">/</span> NormalZ <span> </span></span>(or 0 if <b class="def-param">NormalZ</b> is 0)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.EventDisabledByCtrlClick" class="abs"></a>EventDisabledByCtrlClick
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ScrollDown" class="abs"></a>ScrollDown
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ScrollUp" class="abs"></a>ScrollUp
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.TriggerByObject" class="abs"></a>TriggerByObject
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  happens even if there's no event assigned
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.IsLava" class="abs"></a>IsLava
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ScrollLeft" class="abs"></a>ScrollLeft
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.HasData" class="abs"></a>HasData
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.FlipV" class="abs"></a>FlipV
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.AnimatedTFT" class="abs"></a>AnimatedTFT
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.Invisible" class="abs"></a>Invisible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.TriggerByStep" class="abs"></a>TriggerByStep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.IsSecret" class="abs"></a>IsSecret
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  show in red with Perception
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.AlignLeft" class="abs"></a>AlignLeft
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.TriggerByClick" class="abs"></a>TriggerByClick
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.DisableEventByCtrlClick" class="abs"></a>DisableEventByCtrlClick
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  indoor only: click event gets disabled by Ctrl+Click
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.AlternativeSound" class="abs"></a>AlternativeSound
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.TriggerByMonster" class="abs"></a>TriggerByMonster
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  happens even if there's no event assigned
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MoveByDoor" class="abs"></a>MoveByDoor
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.AlignRight" class="abs"></a>AlignRight
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.AlignTop" class="abs"></a>AlignTop
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.IsPortal" class="abs"></a>IsPortal
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.IsWater" class="abs"></a>IsWater
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.IsEventJustHint" class="abs"></a>IsEventJustHint
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ScrollRight" class="abs"></a>ScrollRight
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.IsSky" class="abs"></a>IsSky
</td><td class="def-right">
 outdoor in software mode: horizontal flow
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.Untouchable" class="abs"></a>Untouchable
</td><td class="def-right">
 great for vertical facets of stairs. <span class="def-ver">[MM7+]</span> Shouldn't be used for sloped floor, like it's used in MM6.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.FlipU" class="abs"></a>FlipU
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.AlignBottom" class="abs"></a>AlignBottom
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ProjectToXY" class="abs"></a>ProjectToXY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ProjectToYZ" class="abs"></a>ProjectToYZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ProjectToXZ" class="abs"></a>ProjectToXZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.Bits" class="abs"></a><a href="#const.FacetBits">Bits</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.VertexIds" class="abs"></a>VertexIds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.UList" class="abs"></a>UList[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.VList" class="abs"></a>VList[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.XInterceptDisplacement" class="abs"></a>XInterceptDisplacement[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.YInterceptDisplacement" class="abs"></a>YInterceptDisplacement[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ZInterceptDisplacement" class="abs"></a>ZInterceptDisplacement[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.BitmapId" class="abs"></a>BitmapId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.BitmapU" class="abs"></a>BitmapU
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.BitmapV" class="abs"></a>BitmapV
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MinX" class="abs"></a>MinX
</td><td class="def-right">
 Bounding Box Min X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MaxX" class="abs"></a>MaxX
</td><td class="def-right">
 Bounding Box Max X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MinY" class="abs"></a>MinY
</td><td class="def-right">
 Bounding Box Min Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MaxY" class="abs"></a>MaxY
</td><td class="def-right">
 Bounding Box Max Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MinZ" class="abs"></a>MinZ
</td><td class="def-right">
 Bounding Box Min Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MaxZ" class="abs"></a>MaxZ
</td><td class="def-right">
 Bounding Box Max Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.Event" class="abs"></a>Event
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.GradientVertexes" class="abs"></a>GradientVertexes[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.VertexesCount" class="abs"></a>VertexesCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.PolygonType" class="abs"></a>PolygonType
</td><td class="def-right">
 Polygon type:<br>0 = empty<br>1 = wall<br>2 = unused<br>3 = horizontal floor<br>4 = irregular floor (non-horizontal)<br>5 = horizontal ceiling<br>6 = irregular ceiling (non-horizontal)
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ModelVertex"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ModelVertex</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ModelVertex.1" class="abs"></a>1
</td><td class="def-right">
 same as <b class="def-param">X</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelVertex.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelVertex.2" class="abs"></a>2
</td><td class="def-right">
 same as <b class="def-param">Y</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelVertex.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelVertex.3" class="abs"></a>3
</td><td class="def-right">
 same as <b class="def-param">Z</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelVertex.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MonListItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MonListItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MonListItem.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.Radius" class="abs"></a>Radius
</td><td class="def-right">
 overall monster radius
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.Velocity" class="abs"></a>Velocity
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.Radius2" class="abs"></a>Radius2
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  monster radius for "to-hit" purposes
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.Tint" class="abs"></a>Tint
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  tint color for graphic
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.TintB" class="abs"></a>TintB
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.TintG" class="abs"></a>TintG
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.TintR" class="abs"></a>TintR
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.TintA" class="abs"></a>TintA
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.Sounds" class="abs"></a>Sounds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.SoundAttack" class="abs"></a>SoundAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.SoundDie" class="abs"></a>SoundDie
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.SoundGetHit" class="abs"></a>SoundGetHit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.SoundFidget" class="abs"></a>SoundFidget
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FrameNames" class="abs"></a>FrameNames[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesStand" class="abs"></a>FramesStand
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesWalk" class="abs"></a>FramesWalk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesAttack" class="abs"></a>FramesAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesShoot" class="abs"></a>FramesShoot
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesStun" class="abs"></a>FramesStun
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesDie" class="abs"></a>FramesDie
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesDead" class="abs"></a>FramesDead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesFidget" class="abs"></a>FramesFidget
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MonsterAttackInfo"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MonsterAttackInfo</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MonsterAttackInfo.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterAttackInfo.DamageDiceCount" class="abs"></a>DamageDiceCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterAttackInfo.DamageDiceSides" class="abs"></a>DamageDiceSides
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterAttackInfo.DamageAdd" class="abs"></a>DamageAdd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterAttackInfo.Missile" class="abs"></a>Missile
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MonsterKind"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MonsterKind</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MonsterKind.Undead" class="abs"></a>Undead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Demon" class="abs"></a>Demon
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Dragon" class="abs"></a>Dragon
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Elf" class="abs"></a>Elf
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Swimmer" class="abs"></a>Swimmer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Immobile" class="abs"></a>Immobile
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Peasant" class="abs"></a>Peasant
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Titan" class="abs"></a>Titan
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.NoArena" class="abs"></a>NoArena
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Ogre" class="abs"></a>Ogre
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Elemental" class="abs"></a>Elemental
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MonsterSchedule"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MonsterSchedule</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Bits" class="abs"></a>Bits
</td><td class="def-right">
 (1 &ndash; on)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Action" class="abs"></a>Action
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Hour" class="abs"></a>Hour
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Day" class="abs"></a>Day
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Month" class="abs"></a>Month
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MonstersTxtItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MonstersTxtItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Picture" class="abs"></a>Picture
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Id" class="abs"></a>Id
</td><td class="def-right">
 Changing may cause random crashes after loading the game! Be careful.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Level" class="abs"></a>Level
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.TreasureItemPercent" class="abs"></a>TreasureItemPercent
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.TreasureDiceCount" class="abs"></a>TreasureDiceCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.TreasureDiceSides" class="abs"></a>TreasureDiceSides
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.TreasureItemLevel" class="abs"></a>TreasureItemLevel
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.TreasureItemType" class="abs"></a>TreasureItemType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Fly" class="abs"></a>Fly
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.MoveType" class="abs"></a>MoveType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.AIType" class="abs"></a>AIType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.HostileType" class="abs"></a>HostileType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Vampire" class="abs"></a>Prefers.Vampire
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Troll" class="abs"></a>Prefers.Troll
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Monk" class="abs"></a>Prefers.Monk
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Thief" class="abs"></a>Prefers.Thief
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Cleric" class="abs"></a>Prefers.Cleric
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Male" class="abs"></a>Prefers.Male
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Sorcerer" class="abs"></a>Prefers.Sorcerer
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Female" class="abs"></a>Prefers.Female
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Dragon" class="abs"></a>Prefers.Dragon
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Minotaur" class="abs"></a>Prefers.Minotaur
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.DarkElf" class="abs"></a>Prefers.DarkElf
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Necro" class="abs"></a>Prefers.Necro
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Goblin" class="abs"></a>Prefers.Goblin
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Archer" class="abs"></a>Prefers.Archer
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Paladin" class="abs"></a>Prefers.Paladin
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Druid" class="abs"></a>Prefers.Druid
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Dwarf" class="abs"></a>Prefers.Dwarf
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Ranger" class="abs"></a>Prefers.Ranger
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Elf" class="abs"></a>Prefers.Elf
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Human" class="abs"></a>Prefers.Human
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Knight" class="abs"></a>Prefers.Knight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.PrefClass" class="abs"></a>PrefClass
</td><td class="def-right">
 Preferred target
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Bonus" class="abs"></a>Bonus
</td><td class="def-right">
 (steal, curse, ...)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.BonusMul" class="abs"></a>BonusMul
</td><td class="def-right">
 (Disease1x5 etc. <span class="def-nbsp"> </span>I wish I knew what it means)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Attack1" class="abs"></a><a href="#structs.MonsterAttackInfo">Attack1</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Attack2Chance" class="abs"></a>Attack2Chance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Attack2" class="abs"></a><a href="#structs.MonsterAttackInfo">Attack2</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpellChance" class="abs"></a>SpellChance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Spell" class="abs"></a>Spell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Spell2Chance" class="abs"></a>Spell2Chance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Spell2" class="abs"></a>Spell2
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpellSkill" class="abs"></a>SpellSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Resistances" class="abs"></a>Resistances[<a href="#const.Damage">kind</a>]
</td><td class="def-right">
 For immunity use <a href="#const.MonsterImmune">const.MonsterImmune</a>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.FireResistance" class="abs"></a>FireResistance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.AirResistance" class="abs"></a>AirResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.WaterResistance" class="abs"></a>WaterResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.EarthResistance" class="abs"></a>EarthResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.MindResistance" class="abs"></a>MindResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpiritResistance" class="abs"></a>SpiritResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.BodyResistance" class="abs"></a>BodyResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.LightResistance" class="abs"></a>LightResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.DarkResistance" class="abs"></a>DarkResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.ElecResistance" class="abs"></a>ElecResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.ColdResistance" class="abs"></a>ColdResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.PoisonResistance" class="abs"></a>PoisonResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.PhysResistance" class="abs"></a>PhysResistance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Special" class="abs"></a>Special
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  {shot, summon, explode}
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpecialA" class="abs"></a>SpecialA
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  shot: C = count<br>summon: A = {RandomLevel = 0, fixed = 1} &ndash; monster level (0 means A, B or C is chosen randomly, monster index should be that of A variation. Values of 2 and 3 are the same as 1, but in MM7 before GrayFace Patch v2.1 it was causing a bug), B = {ground = 0, air = 1}, C = already summoned count (up to 3), D = monster index<br>explode: AdB + C, D = attack type
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpecialB" class="abs"></a>SpecialB
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpecialC" class="abs"></a>SpecialC
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.MagicResistance" class="abs"></a>MagicResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.PrefNum" class="abs"></a>PrefNum
</td><td class="def-right">
 Number of party members to hit using Attack1 &amp; Attack2
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.BloodSplat" class="abs"></a>BloodSplat
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Spell2Skill" class="abs"></a>Spell2Skill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpecialD" class="abs"></a>SpecialD
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  (summoned monster or damage type in case of explosive attack)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.QuestItem" class="abs"></a>QuestItem
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.FullHP" class="abs"></a>FullHP
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.FullHitPoints" class="abs"></a>FullHitPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.ArmorClass" class="abs"></a>ArmorClass
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Exp" class="abs"></a>Exp
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Experience" class="abs"></a>Experience
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.MoveSpeed" class="abs"></a>MoveSpeed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.AttackRecovery" class="abs"></a>AttackRecovery
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.NPC"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.NPC</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.NPC.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Pic" class="abs"></a>Pic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Hired" class="abs"></a>Hired
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Fame" class="abs"></a>Fame
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Rep" class="abs"></a>Rep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.House" class="abs"></a>House
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Profession" class="abs"></a>Profession
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Greet" class="abs"></a>Greet
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Joins" class="abs"></a>Joins
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.TellsNews" class="abs"></a>TellsNews
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Events" class="abs"></a>Events[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.EventA" class="abs"></a>EventA
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.EventB" class="abs"></a>EventB
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.EventC" class="abs"></a>EventC
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.EventD" class="abs"></a>EventD
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.EventE" class="abs"></a>EventE
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.EventF" class="abs"></a>EventF
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Sex" class="abs"></a>Sex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.UsedSpell" class="abs"></a>UsedSpell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.NewsTopic" class="abs"></a>NewsTopic
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.NPCNewsItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.NPCNewsItem</h3>
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.NPCNewsItem.Topic" class="abs"></a>Topic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPCNewsItem.Text" class="abs"></a>Text
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPCNewsItem.Map" class="abs"></a>Map
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ObjListItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ObjListItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ObjListItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Radius" class="abs"></a>Radius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Invisible" class="abs"></a>Invisible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Untouchable" class="abs"></a>Untouchable
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Temporary" class="abs"></a>Temporary
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.LifetimeInSFT" class="abs"></a>LifetimeInSFT
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.NoPickup" class="abs"></a>NoPickup
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.NoGravity" class="abs"></a>NoGravity
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.InterceptAction" class="abs"></a>InterceptAction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Bounce" class="abs"></a>Bounce
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.TrailParticles" class="abs"></a>TrailParticles
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.TrailFire" class="abs"></a>TrailFire
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.TrailLine" class="abs"></a>TrailLine
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.SFTIndex" class="abs"></a>SFTIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.SFTGroup" class="abs"></a>SFTGroup
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.LifeTime" class="abs"></a>LifeTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.LoadedParticlesColor" class="abs"></a>LoadedParticlesColor
</td><td class="def-right">
 munged 16-bit color
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Speed" class="abs"></a>Speed
</td><td class="def-right">
 default speed of object
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.ParticlesColor" class="abs"></a>ParticlesColor[]
</td><td class="def-right">
 color for particles
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.ParticleR" class="abs"></a>ParticleR
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.ParticleG" class="abs"></a>ParticleG
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.ParticleB" class="abs"></a>ParticleB
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.ParticleA" class="abs"></a>ParticleA
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ObjectRef"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ObjectRef</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ObjectRef.ZBuf" class="abs"></a>ZBuf
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjectRef.Value" class="abs"></a>Value
</td><td class="def-right">
 raw value, in inventory screen this is item index
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjectRef.Kind" class="abs"></a><a href="#const.ObjectRefKind">Kind</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjectRef.Index" class="abs"></a>Index
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ObjectRef.Get" class="abs"></a>Get<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.OdmHeader"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.OdmHeader</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.OdmHeader.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OdmHeader.FileName" class="abs"></a>FileName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OdmHeader.VersionStr" class="abs"></a>VersionStr
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OdmHeader.TilesetsFile" class="abs"></a>TilesetsFile
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  0 = dtile.bin, 1 = dtile2.bin, 2 = dtile3.bin
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OdmHeader.Tilesets" class="abs"></a><a href="#structs.TilesetDef">Tilesets</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OdmHeader.Bits" class="abs"></a>Bits
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.OverlayItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.OverlayItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.OverlayItem.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OverlayItem.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OverlayItem.SFTIndex" class="abs"></a>SFTIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OverlayItem.SFTGroup" class="abs"></a>SFTGroup
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.PFTItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.PFTItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.PFTItem.GroupId" class="abs"></a>GroupId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PFTItem.FrameIndex" class="abs"></a>FrameIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PFTItem.Time" class="abs"></a>Time
</td><td class="def-right">
 time for this frame in 1/32 of a second
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PFTItem.TotalTime" class="abs"></a>TotalTime
</td><td class="def-right">
 total time for this group
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PFTItem.NotGroupEnd" class="abs"></a>NotGroupEnd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PFTItem.GroupStart" class="abs"></a>GroupStart
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PFTItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.PatchOptions"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.PatchOptions</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.PatchOptions.Size" class="abs"></a>Size
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MaxMLookAngle" class="abs"></a>MaxMLookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseLook" class="abs"></a>MouseLook
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseLookUseAltMode" class="abs"></a>MouseLookUseAltMode
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.CapsLockToggleMouseLook" class="abs"></a>CapsLockToggleMouseLook
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseFly" class="abs"></a>MouseFly
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseWheelFly" class="abs"></a>MouseWheelFly
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseLookTempKey" class="abs"></a>MouseLookTempKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseLookChangeKey" class="abs"></a>MouseLookChangeKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.InventoryKey" class="abs"></a>InventoryKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.CharScreenKey" class="abs"></a>CharScreenKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.DoubleSpeedKey" class="abs"></a>DoubleSpeedKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.QuickLoadKey" class="abs"></a>QuickLoadKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.AutorunKey" class="abs"></a>AutorunKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.HDWTRCount" class="abs"></a>HDWTRCount
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.HDWTRDelay" class="abs"></a>HDWTRDelay
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.HorsemanSpeakTime" class="abs"></a>HorsemanSpeakTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.BoatmanSpeakTime" class="abs"></a>BoatmanSpeakTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.PaletteSMul" class="abs"></a>PaletteSMul
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.PaletteVMul" class="abs"></a>PaletteVMul
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.NoBitmapsHwl" class="abs"></a>NoBitmapsHwl
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.PlayMP3" class="abs"></a>PlayMP3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MusicLoopsCount" class="abs"></a>MusicLoopsCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.HardenArtifacts" class="abs"></a>HardenArtifacts
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.ProgressiveDaggerTrippleDamage" class="abs"></a>ProgressiveDaggerTrippleDamage
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixChests" class="abs"></a>FixChests
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.DataFiles" class="abs"></a>DataFiles
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixDualWeaponsRecovery" class="abs"></a>FixDualWeaponsRecovery
</td><td class="def-right">
 <span class="def-ver">[MM6]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.IncreaseRecoveryRateStrength" class="abs"></a>IncreaseRecoveryRateStrength
</td><td class="def-right">
 <span class="def-ver">[MM6]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.BlasterRecovery" class="abs"></a>BlasterRecovery
</td><td class="def-right">
 <span class="def-ver">[MM6, MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixSkyBitmap" class="abs"></a>FixSkyBitmap
</td><td class="def-right">
 <span class="def-ver">[MM8]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.NoCD" class="abs"></a>NoCD
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixChestsByReorder" class="abs"></a>FixChestsByReorder
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.LastLoadedFileSize" class="abs"></a>LastLoadedFileSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixTimers" class="abs"></a>FixTimers
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixMovement" class="abs"></a>FixMovement
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MonsterJumpDownLimit" class="abs"></a>MonsterJumpDownLimit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixHeroismPedestal" class="abs"></a>FixHeroismPedestal
</td><td class="def-right">
 <span class="def-ver">[MM8]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.SkipUnsellableItemCheck" class="abs"></a>SkipUnsellableItemCheck
</td><td class="def-right">
 <span class="def-ver">[MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixGMStaff" class="abs"></a>FixGMStaff
</td><td class="def-right">
 <span class="def-ver">[MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixObelisks" class="abs"></a>FixObelisks
</td><td class="def-right">
 <span class="def-ver">[MM8]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.BorderlessWindowed" class="abs"></a>BorderlessWindowed
</td><td class="def-right">
 Actually, it should be read as "not borderless fulscreen". It's set to false only when the game is in Borderless Fullscreen mode
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.CompatibleMovieRender" class="abs"></a>CompatibleMovieRender
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.SmoothMovieScaling" class="abs"></a>SmoothMovieScaling
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.SupportTrueColor" class="abs"></a>SupportTrueColor
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.RenderRectLeft" class="abs"></a>RenderRectLeft
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.RenderRectTop" class="abs"></a>RenderRectTop
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.RenderRectRight" class="abs"></a>RenderRectRight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.RenderRectBottom" class="abs"></a>RenderRectBottom
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixUnimplementedSpells" class="abs"></a>FixUnimplementedSpells
</td><td class="def-right">
 <span class="def-ver">[MM8]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.IndoorMinimapZoomMul" class="abs"></a>IndoorMinimapZoomMul
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.IndoorMinimapZoomPower" class="abs"></a>IndoorMinimapZoomPower
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixMonsterSummon" class="abs"></a>FixMonsterSummon
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixInterfaceBugs" class="abs"></a>FixInterfaceBugs
</td><td class="def-right">
 <span class="def-ver">[MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.UILayout" class="abs"></a>UILayout
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.PaperDollInChests" class="abs"></a>PaperDollInChests
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.HigherCloseRingsButton" class="abs"></a>HigherCloseRingsButton
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.RenderBottomPixel" class="abs"></a>RenderBottomPixel
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.TrueColorTextures" class="abs"></a>TrueColorTextures
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.ResetPalettes" class="abs"></a>ResetPalettes
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixSFT" class="abs"></a>FixSFT
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.AxeGMFullProbabilityAt" class="abs"></a>AxeGMFullProbabilityAt
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseDX" class="abs"></a>MouseDX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseDY" class="abs"></a>MouseDY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.TrueColorSprites" class="abs"></a>TrueColorSprites
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixMonstersBlockingShots" class="abs"></a>FixMonstersBlockingShots
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixParalyze" class="abs"></a>FixParalyze
</td><td class="def-right">
 <span class="def-ver">[MM6]</span> May come to MM7 and MM8 in the future.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.EnableAttackSpell" class="abs"></a>EnableAttackSpell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.ShooterMode" class="abs"></a>ShooterMode
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MaxMLookUpAngle" class="abs"></a>MaxMLookUpAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixIceBoltBlast" class="abs"></a>FixIceBoltBlast
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MonSpritesSizeMul" class="abs"></a>MonSpritesSizeMul
</td><td class="def-right">
 Default is 0 &ndash; disabled. 0x10000 stands for 1.0.
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.PatchOptions.Present" class="abs"></a>Present<b class="def-largs">(</b>name<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">true</b> if the option is supported by patch version being used
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.Ptr" class="abs"></a>Ptr<b class="def-largs">(</b>name<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns address of an option if it's supported by patch version being used
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.UILayoutActive" class="abs"></a>UILayoutActive<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.Player"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.Player</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Player.Biography" class="abs"></a>Biography
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Sex" class="abs"></a>Sex
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Paralyzed" class="abs"></a>Paralyzed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Unconscious" class="abs"></a>Unconscious
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Insane" class="abs"></a>Insane
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Zombie" class="abs"></a>Zombie
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Drunk" class="abs"></a>Drunk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Poison1" class="abs"></a>Poison1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Cursed" class="abs"></a>Cursed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Disease1" class="abs"></a>Disease1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Stoned" class="abs"></a>Stoned
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Afraid" class="abs"></a>Afraid
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Dead" class="abs"></a>Dead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Poison2" class="abs"></a>Poison2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Eradicated" class="abs"></a>Eradicated
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Weak" class="abs"></a>Weak
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Poison3" class="abs"></a>Poison3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Disease3" class="abs"></a>Disease3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Disease2" class="abs"></a>Disease2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Asleep" class="abs"></a>Asleep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Conditions" class="abs"></a>Conditions[<a href="#const.Condition">cond</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Exp" class="abs"></a>Exp
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Experience" class="abs"></a>Experience
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Class" class="abs"></a>Class
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Face" class="abs"></a>Face
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Stats" class="abs"></a><a href="#structs.BaseBonus">Stats</a>[<a href="#const.Stats">stat</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MightBase" class="abs"></a>MightBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MightBonus" class="abs"></a>MightBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.IntellectBase" class="abs"></a>IntellectBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.IntellectBonus" class="abs"></a>IntellectBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.PersonalityBase" class="abs"></a>PersonalityBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.PersonalityBonus" class="abs"></a>PersonalityBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.EnduranceBase" class="abs"></a>EnduranceBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.EnduranceBonus" class="abs"></a>EnduranceBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpeedBase" class="abs"></a>SpeedBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpeedBonus" class="abs"></a>SpeedBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AccuracyBase" class="abs"></a>AccuracyBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AccuracyBonus" class="abs"></a>AccuracyBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.LuckBase" class="abs"></a>LuckBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.LuckBonus" class="abs"></a>LuckBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ArmorClassBonus" class="abs"></a>ArmorClassBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.LevelBase" class="abs"></a>LevelBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.LevelBonus" class="abs"></a>LevelBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AgeBonus" class="abs"></a>AgeBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Skills" class="abs"></a>Skills[<a href="#const.Skills">skill</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Awards" class="abs"></a>Awards[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Spells" class="abs"></a>Spells[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.UsedBlackPotions" class="abs"></a>UsedBlackPotions[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Items" class="abs"></a><a href="#structs.Item">Items</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Inventory" class="abs"></a>Inventory[]
</td><td class="def-right">
 (<b class="def-param">Items</b> index) for main item cell, <span class="def-nbsp"> </span>-(1 + main <b class="def-param">Inventory</b> cell index) for other cells
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Resistances" class="abs"></a><a href="#structs.BaseBonus">Resistances</a>[<a href="#const.Damage">kind</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FireResistanceBase" class="abs"></a>FireResistanceBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AirResistanceBase" class="abs"></a>AirResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.WaterResistanceBase" class="abs"></a>WaterResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.EarthResistanceBase" class="abs"></a>EarthResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpiritResistanceBase" class="abs"></a>SpiritResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MindResistanceBase" class="abs"></a>MindResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.BodyResistanceBase" class="abs"></a>BodyResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FireResistanceBonus" class="abs"></a>FireResistanceBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AirResistanceBonus" class="abs"></a>AirResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.WaterResistanceBonus" class="abs"></a>WaterResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.EarthResistanceBonus" class="abs"></a>EarthResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpiritResistanceBonus" class="abs"></a>SpiritResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MindResistanceBonus" class="abs"></a>MindResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.BodyResistanceBonus" class="abs"></a>BodyResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Voice" class="abs"></a>Voice
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ColdResistanceBase" class="abs"></a>ColdResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ColdResistanceBonus" class="abs"></a>ColdResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ElecResistanceBase" class="abs"></a>ElecResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ElecResistanceBonus" class="abs"></a>ElecResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.PoisonResistanceBase" class="abs"></a>PoisonResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.PoisonResistanceBonus" class="abs"></a>PoisonResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MagicResistanceBase" class="abs"></a>MagicResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MagicResistanceBonus" class="abs"></a>MagicResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpellBuffs" class="abs"></a><a href="#structs.SpellBuff">SpellBuffs</a>[<a href="#const.PlayerBuff">buff</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.RecoveryDelay" class="abs"></a>RecoveryDelay
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SkillPoints" class="abs"></a>SkillPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.HP" class="abs"></a>HP
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.HitPoints" class="abs"></a>HitPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SP" class="abs"></a>SP
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpellPoints" class="abs"></a>SpellPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.BirthYear" class="abs"></a>BirthYear
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.EquippedItems" class="abs"></a>EquippedItems[<a href="#const.ItemSlot">slot</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemExtraHand" class="abs"></a>ItemExtraHand
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemMainHand" class="abs"></a>ItemMainHand
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemBow" class="abs"></a>ItemBow
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemArmor" class="abs"></a>ItemArmor
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemHelm" class="abs"></a>ItemHelm
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemBelt" class="abs"></a>ItemBelt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemCloak" class="abs"></a>ItemCloak
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemGountlets" class="abs"></a>ItemGountlets
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemBoots" class="abs"></a>ItemBoots
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemAmulet" class="abs"></a>ItemAmulet
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemRing1" class="abs"></a>ItemRing1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemRing2" class="abs"></a>ItemRing2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemRing3" class="abs"></a>ItemRing3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemRing4" class="abs"></a>ItemRing4
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemRing5" class="abs"></a>ItemRing5
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemRing6" class="abs"></a>ItemRing6
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpellBookPage" class="abs"></a>SpellBookPage
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.QuickSpell" class="abs"></a>QuickSpell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.PlayerBits" class="abs"></a>PlayerBits[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.RosterBitIndex" class="abs"></a>RosterBitIndex
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MeleeAttackBonus" class="abs"></a>MeleeAttackBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MeleeDamageBonus" class="abs"></a>MeleeDamageBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.RangedAttackBonus" class="abs"></a>RangedAttackBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.RangedDamageBonus" class="abs"></a>RangedDamageBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FullHPBonus" class="abs"></a>FullHPBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FullHitPointsBonus" class="abs"></a>FullHitPointsBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FullSPBonus" class="abs"></a>FullSPBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FullSpellPointsBonus" class="abs"></a>FullSpellPointsBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Expression" class="abs"></a>Expression
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ExpressionTimePassed" class="abs"></a>ExpressionTimePassed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ExpressionLength" class="abs"></a>ExpressionLength
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Beacons" class="abs"></a><a href="#structs.LloydBeaconSlot">Beacons</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.DevineInterventionCasts" class="abs"></a>DevineInterventionCasts
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ArmageddonCasts" class="abs"></a>ArmageddonCasts
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FireSpikeCasts" class="abs"></a>FireSpikeCasts
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FaceBeforeZombie" class="abs"></a>FaceBeforeZombie
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.VoiceBeforeZombie" class="abs"></a>VoiceBeforeZombie
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Player.GetSex" class="abs"></a>GetSex<b class="def-largs">(</b>BasedOnVoice<span class="def-ver">[MM8]</span> = false<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  Determines sex based on Face or Voice
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseMight" class="abs"></a>GetBaseMight<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseIntellect" class="abs"></a>GetBaseIntellect<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBasePersonality" class="abs"></a>GetBasePersonality<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseEndurance" class="abs"></a>GetBaseEndurance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseAccuracy" class="abs"></a>GetBaseAccuracy<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseSpeed" class="abs"></a>GetBaseSpeed<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseLuck" class="abs"></a>GetBaseLuck<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseLevel" class="abs"></a>GetBaseLevel<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetLevel" class="abs"></a>GetLevel<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMight" class="abs"></a>GetMight<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetIntellect" class="abs"></a>GetIntellect<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetPersonality" class="abs"></a>GetPersonality<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetEndurance" class="abs"></a>GetEndurance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetAccuracy" class="abs"></a>GetAccuracy<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetSpeed" class="abs"></a>GetSpeed<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetLuck" class="abs"></a>GetLuck<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMeleeAttack" class="abs"></a>GetMeleeAttack<b class="def-largs">(</b>IgnoreExtraHand <span class="def-ver">[MM7+]</span> = false<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CalcMeleeDamage" class="abs"></a>CalcMeleeDamage<b class="def-largs">(</b>JustWeaponDamage = false, IgnoreExtraHand = false, MonsterId = -1<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetRangedAttack" class="abs"></a>GetRangedAttack<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CalcRangedDamage" class="abs"></a>CalcRangedDamage<b class="def-largs">(</b>MonsterId = -1<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMeleeDamageRangeText" class="abs"></a>GetMeleeDamageRangeText<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetRangedDamageRangeText" class="abs"></a>GetRangedDamageRangeText<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CanTrain" class="abs"></a>CanTrain<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AddHP" class="abs"></a>AddHP<b class="def-largs">(</b>Amount<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.DoDamage" class="abs"></a>DoDamage<b class="def-largs">(</b>Damage, <a href="#const.Damage">DamageKind</a> = const.Damage.Phys<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.DoBadThing" class="abs"></a>DoBadThing<b class="def-largs">(</b><a href="#const.MonsterBonus">Thing</a><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetAttackDelay" class="abs"></a>GetAttackDelay<b class="def-largs">(</b>Shoot = false<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetFullHP" class="abs"></a>GetFullHP<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetFullSP" class="abs"></a>GetFullSP<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMeleeDamageMin" class="abs"></a>GetMeleeDamageMin<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMeleeDamageMax" class="abs"></a>GetMeleeDamageMax<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetRangedDamageMin" class="abs"></a>GetRangedDamageMin<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetRangedDamageMax" class="abs"></a>GetRangedDamageMax<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.HasItemBonus" class="abs"></a>HasItemBonus<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseFireResistance" class="abs"></a>GetBaseFireResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseElectricityResistance" class="abs"></a>GetBaseElectricityResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseColdResistance" class="abs"></a>GetBaseColdResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBasePoisonResistance" class="abs"></a>GetBasePoisonResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseMagicResistance" class="abs"></a>GetBaseMagicResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetFireResistance" class="abs"></a>GetFireResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetElectricityResistance" class="abs"></a>GetElectricityResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetColdResistance" class="abs"></a>GetColdResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetPoisonResistance" class="abs"></a>GetPoisonResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMagicResistance" class="abs"></a>GetMagicResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.WearsItem" class="abs"></a>WearsItem<b class="def-largs">(</b>ItemNum, Slot = 16<b class="def-rargs">)</b>
</td><td class="def-right">
 If <b class="def-param">Slot</b> isn't specified, searches all slots for the item
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseResistance" class="abs"></a>GetBaseResistance<b class="def-largs">(</b>arg1<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetResistance" class="abs"></a>GetResistance<b class="def-largs">(</b>arg1<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseArmorClass" class="abs"></a>GetBaseArmorClass<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetArmorClass" class="abs"></a>GetArmorClass<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseAge" class="abs"></a>GetBaseAge<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetAge" class="abs"></a>GetAge<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Recover" class="abs"></a>Recover<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SetRecoveryDelayRaw" class="abs"></a>SetRecoveryDelayRaw<b class="def-largs">(</b>Delay<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMainCondition" class="abs"></a><a href="#const.Condition">GetMainCondition</a><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CalcStatBonusByItems" class="abs"></a>CalcStatBonusByItems<b class="def-largs">(</b><a href="#const.Stats">Stat</a>, IgnoreExtraHand <span class="def-ver">[MM7+]</span> = false<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CalcStatBonusByMagic" class="abs"></a>CalcStatBonusByMagic<b class="def-largs">(</b><a href="#const.Stats">Stat</a><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CalcStatBonusBySkills" class="abs"></a>CalcStatBonusBySkills<b class="def-largs">(</b><a href="#const.Stats">Stat</a><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMerchantTotalSkill" class="abs"></a>GetMerchantTotalSkill<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetDisarmTrapTotalSkill" class="abs"></a>GetDisarmTrapTotalSkill<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ShowFaceExpression" class="abs"></a>ShowFaceExpression<b class="def-largs">(</b>Expression, Time = 0<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.IsConscious" class="abs"></a>IsConscious<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetSkill" class="abs"></a>GetSkill<b class="def-largs">(</b>arg1<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ShowFaceAnimation" class="abs"></a>ShowFaceAnimation<b class="def-largs">(</b>Animation<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetPerceptionTotalSkill" class="abs"></a>GetPerceptionTotalSkill<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetLearningTotalSkill" class="abs"></a>GetLearningTotalSkill<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AddCondition" class="abs"></a>AddCondition<b class="def-largs">(</b>arg1 = 0, arg2 = false<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetRace" class="abs"></a>GetRace<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetDiplomacyTotalSkill" class="abs"></a>GetDiplomacyTotalSkill<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.EnumActiveItems" class="abs"></a>EnumActiveItems<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetActiveItem" class="abs"></a>GetActiveItem<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CountItems" class="abs"></a>CountItems<b class="def-largs">(</b>{item1, item2, ...}<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SetRecoveryDelay" class="abs"></a>SetRecoveryDelay<b class="def-largs">(</b>Delay<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SFT"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SFT</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SFT.MatchIndex" class="abs"></a>MatchIndex
</td><td class="def-right">
 used when searching for a group by name
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFT.Frames" class="abs"></a><a href="#structs.SFTItem">Frames</a>[]
</td><td class="def-right">
<b class="def-default">(Default)</b> 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFT.Groups" class="abs"></a><a href="#structs.SFTItem">Groups</a>[][]
</td><td class="def-right">
 sorted by name
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFT.GroupIndex" class="abs"></a>GroupIndex[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SFT.FindGroup" class="abs"></a>FindGroup<b class="def-largs">(</b>arg1 = ""<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFT.LoadGroup" class="abs"></a>LoadGroup<b class="def-largs">(</b>arg1<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SFTItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SFTItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SFTItem.GroupName" class="abs"></a>GroupName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.SpriteName" class="abs"></a>SpriteName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.SpriteIndex" class="abs"></a>SpriteIndex[]
</td><td class="def-right">
 loaded from sprite list at runtime, chosen based on sprite orientation
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Scale" class="abs"></a>Scale
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.NotGroupEnd" class="abs"></a>NotGroupEnd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Luminous" class="abs"></a>Luminous
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.GroupStart" class="abs"></a>GroupStart
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Image1" class="abs"></a>Image1
</td><td class="def-right">
 has 1 image (not 8 for different angles)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Center" class="abs"></a>Center
</td><td class="def-right">
 center sprite
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Fidget" class="abs"></a>Fidget
</td><td class="def-right">
 part of monster figet sequence
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Loaded" class="abs"></a>Loaded
</td><td class="def-right">
 group is loaded
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror0" class="abs"></a>Mirror0
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror1" class="abs"></a>Mirror1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror2" class="abs"></a>Mirror2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror3" class="abs"></a>Mirror3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror4" class="abs"></a>Mirror4
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror5" class="abs"></a>Mirror5
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror6" class="abs"></a>Mirror6
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror7" class="abs"></a>Mirror7
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Images3" class="abs"></a>Images3
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  only views 0,2,4 exist (mirrored)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Glow" class="abs"></a>Glow
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Transparent" class="abs"></a>Transparent
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.LightRadius" class="abs"></a>LightRadius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.PaletteId" class="abs"></a>PaletteId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.PaletteIndex" class="abs"></a>PaletteIndex
</td><td class="def-right">
 palette index (0 if not loaded)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Time" class="abs"></a>Time
</td><td class="def-right">
 time for this frame in 1/32 of a second
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.TotalTime" class="abs"></a>TotalTime
</td><td class="def-right">
 total time for this group
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SoundsItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SoundsItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SoundsItem.Name" class="abs"></a>Name
</td><td class="def-right">
 name of sound file
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Type" class="abs"></a>Type
</td><td class="def-right">
 type of sound<br>0 = (0) <span class="def-nbsp">     </span>level specific sound, load during level initialization<br>1 = (system) system sound, always loaded<br>2 = (swap) <span class="def-nbsp">  </span>level specific sound, that gets loaded and flushed<br>3 = (?)<br>4 = (lock) <span class="def-nbsp">  </span>delete sound only when game ends
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Locked" class="abs"></a>Locked
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Is3D" class="abs"></a>Is3D
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Data" class="abs"></a>Data[]
</td><td class="def-right">
 data pointer
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Data3D" class="abs"></a>Data3D
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  3d data pointer
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Decompressed" class="abs"></a>Decompressed
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  true if decompressed and needs to be freed separately
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SpawnPoint"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpawnPoint</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpawnPoint.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Radius" class="abs"></a>Radius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Kind" class="abs"></a><a href="#const.ObjectRefKind">Kind</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Index" class="abs"></a>Index
</td><td class="def-right">
 Index: monster (1-3: M1-M3, <span class="def-nbsp"> </span>4-6: M1a-M1c, <span class="def-nbsp"> </span>7-9: M2a-M2c, <span class="def-nbsp"> </span>10-12: M3a-M3c) or item (1-6 for regular item, 7 for artifact)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.OnAlertMap" class="abs"></a>OnAlertMap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Group" class="abs"></a>Group
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SpcItemsTxtItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpcItemsTxtItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.NameAdd" class="abs"></a>NameAdd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.BonusStat" class="abs"></a>BonusStat
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.ChanceForSlot" class="abs"></a>ChanceForSlot[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.W1" class="abs"></a>W1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.W2" class="abs"></a>W2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Miss" class="abs"></a>Miss
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Arm" class="abs"></a>Arm
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Shld" class="abs"></a>Shld
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Helm" class="abs"></a>Helm
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Belt" class="abs"></a>Belt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Cape" class="abs"></a>Cape
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Gaunt" class="abs"></a>Gaunt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Boot" class="abs"></a>Boot
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Ring" class="abs"></a>Ring
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Amul" class="abs"></a>Amul
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Value" class="abs"></a>Value
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Lvl" class="abs"></a>Lvl
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SpellBuff"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpellBuff</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpellBuff.ExpireTime" class="abs"></a>ExpireTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellBuff.Power" class="abs"></a>Power
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellBuff.Skill" class="abs"></a>Skill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellBuff.OverlayId" class="abs"></a>OverlayId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellBuff.Caster" class="abs"></a>Caster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellBuff.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpellBuff.Set" class="abs"></a>Set<b class="def-largs">(</b>ExpireTime, Skill, Power, OverlayId, Caster<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SpellEffect"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpellEffect</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
</tbody>
</table>
<br>

<br><a id="structs.SpellInfo"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpellInfo</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpellInfo.CastByMonster" class="abs"></a>CastByMonster
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.CastByEvent" class="abs"></a>CastByEvent
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.CauseDamage" class="abs"></a>CauseDamage
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.SpecialDamage" class="abs"></a>SpecialDamage
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.Bits" class="abs"></a>Bits
</td><td class="def-right">
 "Stats" from spells.txt
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.SpellPoints" class="abs"></a>SpellPoints[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.SpellPointsNormal" class="abs"></a>SpellPointsNormal
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.SpellPointsExpert" class="abs"></a>SpellPointsExpert
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.SpellPointsMaster" class="abs"></a>SpellPointsMaster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.SpellPointsGM" class="abs"></a>SpellPointsGM
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.Delay" class="abs"></a>Delay[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.DelayNormal" class="abs"></a>DelayNormal
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.DelayExpert" class="abs"></a>DelayExpert
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.DelayMaster" class="abs"></a>DelayMaster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.DelayGM" class="abs"></a>DelayGM
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.DamageAdd" class="abs"></a>DamageAdd
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.DamageDiceSides" class="abs"></a>DamageDiceSides
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SpellsTxtItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpellsTxtItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.ShortName" class="abs"></a>ShortName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.Description" class="abs"></a>Description
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.Normal" class="abs"></a>Normal
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.Expert" class="abs"></a>Expert
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.Master" class="abs"></a>Master
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.GM" class="abs"></a>GM
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.GrandMaster" class="abs"></a>GrandMaster
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.DamageType" class="abs"></a>DamageType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.SpellPoints" class="abs"></a>SpellPoints[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.SpellPointsNormal" class="abs"></a>SpellPointsNormal
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.SpellPointsExpert" class="abs"></a>SpellPointsExpert
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.SpellPointsMaster" class="abs"></a>SpellPointsMaster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.SpellPointsGM" class="abs"></a>SpellPointsGM
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SpritesLod"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpritesLod</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpritesLod.File" class="abs"></a>File
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.FileName" class="abs"></a>FileName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.Loaded" class="abs"></a>Loaded
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.IOBuffer" class="abs"></a>IOBuffer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.IOBufferSize" class="abs"></a>IOBufferSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.LodHeaderSignature" class="abs"></a>LodHeaderSignature
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.Description" class="abs"></a>Description
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.ArchivesCount" class="abs"></a>ArchivesCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.ArchivesCArray" class="abs"></a>ArchivesCArray
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.ChapterHandle" class="abs"></a>ChapterHandle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.ChapterSize" class="abs"></a>ChapterSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.Files" class="abs"></a><a href="#structs.LodFile">Files</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.FilesOffset" class="abs"></a>FilesOffset
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.SpritesSW" class="abs"></a><a href="#structs.LodSprite">SpritesSW</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.IsHardware" class="abs"></a>IsHardware
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.SpritesD3D" class="abs"></a><a href="#structs.LodSpriteD3D">SpritesD3D</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpritesLod.LoadSprite" class="abs"></a>LoadSprite<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.StartStat"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.StartStat</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.StartStat.Base" class="abs"></a>Base
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StartStat.Max" class="abs"></a>Max
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StartStat.Spend" class="abs"></a>Spend
</td><td class="def-right">
 how much you spend on it to add a point
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StartStat.Add" class="abs"></a>Add
</td><td class="def-right">
 how much is added when you spend a point
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.StdItemsTxtItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.StdItemsTxtItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.NameAdd" class="abs"></a>NameAdd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.BonusStat" class="abs"></a>BonusStat
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.ChanceForSlot" class="abs"></a>ChanceForSlot[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Arm" class="abs"></a>Arm
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Shld" class="abs"></a>Shld
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Helm" class="abs"></a>Helm
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Belt" class="abs"></a>Belt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Cape" class="abs"></a>Cape
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Gaunt" class="abs"></a>Gaunt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Boot" class="abs"></a>Boot
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Ring" class="abs"></a>Ring
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Amul" class="abs"></a>Amul
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.TFTItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.TFTItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.TFTItem.Name" class="abs"></a>Name
</td><td class="def-right">
 texture name
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TFTItem.Index" class="abs"></a>Index
</td><td class="def-right">
 index in bitmaps.lod
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TFTItem.Time" class="abs"></a>Time
</td><td class="def-right">
 time for this frame in 1/32 of a second
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TFTItem.TotalTime" class="abs"></a>TotalTime
</td><td class="def-right">
 total time for this group
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TFTItem.NotGroupEnd" class="abs"></a>NotGroupEnd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TFTItem.GroupStart" class="abs"></a>GroupStart
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TFTItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.TileItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.TileItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.TileItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Bitmap" class="abs"></a>Bitmap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.TileSet" class="abs"></a>TileSet
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Section" class="abs"></a>Section
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Burn" class="abs"></a>Burn
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Water" class="abs"></a>Water
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Block" class="abs"></a>Block
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Repulse" class="abs"></a>Repulse
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Flat" class="abs"></a>Flat
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Wave" class="abs"></a>Wave
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.NoDraw" class="abs"></a>NoDraw
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.WaterTransition" class="abs"></a>WaterTransition
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Transition" class="abs"></a>Transition
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.ScrollDown" class="abs"></a>ScrollDown
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.ScrollUp" class="abs"></a>ScrollUp
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.ScrollLeft" class="abs"></a>ScrollLeft
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.ScrollRight" class="abs"></a>ScrollRight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.TilesetDef"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.TilesetDef</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.TilesetDef.Group" class="abs"></a>Group
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TilesetDef.Offset" class="abs"></a>Offset
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.TownPortalTownInfo"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.TownPortalTownInfo</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.Direction" class="abs"></a>Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.LookAngle" class="abs"></a>LookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.MapStatsIndex" class="abs"></a>MapStatsIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.MapIndex" class="abs"></a>MapIndex
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.Map" class="abs"></a>Map
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.TravelInfo"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.TravelInfo</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.TravelInfo.MapIndex" class="abs"></a>MapIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.DaysAvailable" class="abs"></a>DaysAvailable[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Monday" class="abs"></a>Monday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Tuesday" class="abs"></a>Tuesday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Wednesday" class="abs"></a>Wednesday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Thursday" class="abs"></a>Thursday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Friday" class="abs"></a>Friday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Saturday" class="abs"></a>Saturday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Sunday" class="abs"></a>Sunday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.DaysCount" class="abs"></a>DaysCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Direction" class="abs"></a>Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.QBit" class="abs"></a>QBit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Map" class="abs"></a>Map
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.Weather"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.Weather</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Weather.Shade" class="abs"></a>Shade
</td><td class="def-right">
 0 = sunny, 1 = dark, 2 = misty
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.Rain" class="abs"></a>Rain
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.Snow" class="abs"></a>Snow
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.Fog" class="abs"></a>Fog
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.FogRange1" class="abs"></a>FogRange1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.FogRange2" class="abs"></a>FogRange2
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Weather.SetFog" class="abs"></a>SetFog<b class="def-largs">(</b>Range1, Range2<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.RandomFog" class="abs"></a>RandomFog<b class="def-largs">(</b>LightChance, MiddleChance, ThickChance<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.New" class="abs"></a>New<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>


<br>
<hr>
<a id="Constants"></a><h2>Constants</h2>


<br><a id="const"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.*</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Novice" class="abs"></a>Novice <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Expert" class="abs"></a>Expert <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Master" class="abs"></a>Master <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.GM" class="abs"></a>GM <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Minute" class="abs"></a>Minute <i class="def-const">= 256</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Hour" class="abs"></a>Hour <i class="def-const">= 15360</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Day" class="abs"></a>Day <i class="def-const">= 368640</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Week" class="abs"></a>Week <i class="def-const">= 2580480</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Month" class="abs"></a>Month <i class="def-const">= 10321920</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Year" class="abs"></a>Year <i class="def-const">= 123863040</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterImmune" class="abs"></a>MonsterImmune
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MapLimit" class="abs"></a>MapLimit <i class="def-const">= 22528</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.AIState"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.AIState</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.AIState.Stand" class="abs"></a>Stand <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Active" class="abs"></a>Active <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.MeleeAttack" class="abs"></a>MeleeAttack <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.RangedAttack" class="abs"></a>RangedAttack <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Dying" class="abs"></a>Dying <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Dead" class="abs"></a>Dead <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Pursue" class="abs"></a>Pursue <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Flee" class="abs"></a>Flee <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Stunned" class="abs"></a>Stunned <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Fidget" class="abs"></a>Fidget <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Interact" class="abs"></a>Interact <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Removed" class="abs"></a>Removed <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.RangedAttack2" class="abs"></a>RangedAttack2 <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.CastSpell" class="abs"></a>CastSpell <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Stoned" class="abs"></a>Stoned <i class="def-const">= 14</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Paralyzed" class="abs"></a>Paralyzed <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Resurrect" class="abs"></a>Resurrect <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Summoned" class="abs"></a>Summoned <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.RangedAttack4" class="abs"></a>RangedAttack4 <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Invisible" class="abs"></a>Invisible <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.CharScreens"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.CharScreens</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.CharScreens.Stats" class="abs"></a>Stats <i class="def-const">= 100</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.CharScreens.Skills" class="abs"></a>Skills <i class="def-const">= 101</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.CharScreens.Awards" class="abs"></a>Awards <i class="def-const">= 102</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.CharScreens.Inventory" class="abs"></a>Inventory <i class="def-const">= 103</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.ChestBits"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.ChestBits</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.ChestBits.Trapped" class="abs"></a>Trapped <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ChestBits.ItemsPlaced" class="abs"></a>ItemsPlaced <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ChestBits.Identified" class="abs"></a>Identified <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Class"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Class</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Class.Necromancer" class="abs"></a>Necromancer <i class="def-const">= 0</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Knight" class="abs"></a>Knight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Cavalier" class="abs"></a>Cavalier <i class="def-const">= 1</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Champion" class="abs"></a>Champion
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.BlackKnight" class="abs"></a>BlackKnight <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Thief" class="abs"></a>Thief <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Rogue" class="abs"></a>Rogue <i class="def-const">= 5</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Spy" class="abs"></a>Spy <i class="def-const">= 6</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Assassin" class="abs"></a>Assassin <i class="def-const">= 7</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Monk" class="abs"></a>Monk <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Initiate" class="abs"></a>Initiate <i class="def-const">= 9</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Master" class="abs"></a>Master <i class="def-const">= 10</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Ninja" class="abs"></a>Ninja <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Cleric" class="abs"></a>Cleric
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Priest" class="abs"></a>Priest
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.HighPriest" class="abs"></a>HighPriest <i class="def-const">= 5</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Sorcerer" class="abs"></a>Sorcerer
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Wizard" class="abs"></a>Wizard
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.ArchMage" class="abs"></a>ArchMage
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Paladin" class="abs"></a>Paladin
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Crusader" class="abs"></a>Crusader
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Hero" class="abs"></a>Hero
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Villain" class="abs"></a>Villain <i class="def-const">= 15</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Archer" class="abs"></a>Archer
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.BattleMage" class="abs"></a>BattleMage <i class="def-const">= 13</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.WarriorMage" class="abs"></a>WarriorMage
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.MasterArcher" class="abs"></a>MasterArcher <i class="def-const">= 18</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Sniper" class="abs"></a>Sniper <i class="def-const">= 19</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Ranger" class="abs"></a>Ranger <i class="def-const">= 20</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Hunter" class="abs"></a>Hunter <i class="def-const">= 21</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.RangerLord" class="abs"></a>RangerLord <i class="def-const">= 22</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.BountyHunter" class="abs"></a>BountyHunter <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.PriestLight" class="abs"></a>PriestLight
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.PriestDark" class="abs"></a>PriestDark <i class="def-const">= 27</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Druid" class="abs"></a>Druid
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.GreatDruid" class="abs"></a>GreatDruid
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.ArchDruid" class="abs"></a>ArchDruid
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Warlock" class="abs"></a>Warlock <i class="def-const">= 31</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Lich" class="abs"></a>Lich
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Troll" class="abs"></a>Troll <i class="def-const">= 6</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.WarTroll" class="abs"></a>WarTroll <i class="def-const">= 7</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Minotaur" class="abs"></a>Minotaur <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.MinotaurLord" class="abs"></a>MinotaurLord <i class="def-const">= 9</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.DarkElf" class="abs"></a>DarkElf <i class="def-const">= 10</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Patriarch" class="abs"></a>Patriarch <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Vampire" class="abs"></a>Vampire <i class="def-const">= 12</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Nosferatu" class="abs"></a>Nosferatu <i class="def-const">= 13</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Dragon" class="abs"></a>Dragon <i class="def-const">= 14</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.GreatWyrm" class="abs"></a>GreatWyrm <i class="def-const">= 15</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Condition"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Condition</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Condition.Cursed" class="abs"></a>Cursed <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Weak" class="abs"></a>Weak <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Asleep" class="abs"></a>Asleep <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Afraid" class="abs"></a>Afraid <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Drunk" class="abs"></a>Drunk <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Insane" class="abs"></a>Insane <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Poison1" class="abs"></a>Poison1 <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Disease1" class="abs"></a>Disease1 <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Poison2" class="abs"></a>Poison2 <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Disease2" class="abs"></a>Disease2 <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Poison3" class="abs"></a>Poison3 <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Disease3" class="abs"></a>Disease3 <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Paralyzed" class="abs"></a>Paralyzed <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Unconscious" class="abs"></a>Unconscious <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Dead" class="abs"></a>Dead <i class="def-const">= 14</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Stoned" class="abs"></a>Stoned <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Eradicated" class="abs"></a>Eradicated <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Zombie" class="abs"></a>Zombie <i class="def-const">= 17</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Damage"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Damage</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Damage.Phys" class="abs"></a>Phys
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Magic" class="abs"></a>Magic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Fire" class="abs"></a>Fire
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Air" class="abs"></a>Air <i class="def-const">= 1</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Water" class="abs"></a>Water <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Earth" class="abs"></a>Earth <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Spirit" class="abs"></a>Spirit <i class="def-const">= 6</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Mind" class="abs"></a>Mind <i class="def-const">= 7</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Body" class="abs"></a>Body <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Light" class="abs"></a>Light <i class="def-const">= 9</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Dark" class="abs"></a>Dark <i class="def-const">= 10</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Dragon" class="abs"></a>Dragon <i class="def-const">= 50</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Elec" class="abs"></a>Elec <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Cold" class="abs"></a>Cold <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Poison" class="abs"></a>Poison <i class="def-const">= 5</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Energy" class="abs"></a>Energy <i class="def-const">= 6</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.FaceAnimation"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.FaceAnimation</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.FaceAnimation.KillSmallEnemy" class="abs"></a>KillSmallEnemy <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.KillBigEnemy" class="abs"></a>KillBigEnemy <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.StoreClosed" class="abs"></a>StoreClosed <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.DisarmTrap" class="abs"></a>DisarmTrap <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.TrapWillBlow" class="abs"></a>TrapWillBlow <i class="def-const">= 5</i>
</td><td class="def-right">
 it's gonna blow!
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.AvoidTrapDamage" class="abs"></a>AvoidTrapDamage <i class="def-const">= 6</i>
</td><td class="def-right">
 sit down
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.IdentifyUseless" class="abs"></a>IdentifyUseless <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.IdentifyGreat" class="abs"></a>IdentifyGreat <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.IdentifyFail" class="abs"></a>IdentifyFail <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.RepairItem" class="abs"></a>RepairItem <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.RepairFail" class="abs"></a>RepairFail <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.SetQuickSpell" class="abs"></a>SetQuickSpell <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.CantRestHere" class="abs"></a>CantRestHere <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.SmileRandom" class="abs"></a>SmileRandom <i class="def-const">= 14</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.CantCarry" class="abs"></a>CantCarry <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.MixPotion" class="abs"></a>MixPotion <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.PotionExplode" class="abs"></a>PotionExplode <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.DoorLocked" class="abs"></a>DoorLocked <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Strain" class="abs"></a>Strain <i class="def-const">= 19</i>
</td><td class="def-right">
 like pulling sword out of stone in MM6
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.CantLearnSpell" class="abs"></a>CantLearnSpell <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.LearnSpell" class="abs"></a>LearnSpell <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Hello" class="abs"></a>Hello <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.HelloNight" class="abs"></a>HelloNight <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Damaged" class="abs"></a>Damaged <i class="def-const">= 24</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Weak" class="abs"></a>Weak <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Afraid" class="abs"></a>Afraid <i class="def-const">= 26</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Poisoned" class="abs"></a>Poisoned <i class="def-const">= 27</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Deseased" class="abs"></a>Deseased <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Insane" class="abs"></a>Insane <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Cursed" class="abs"></a>Cursed <i class="def-const">= 30</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Drunk" class="abs"></a>Drunk <i class="def-const">= 31</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Unconsious" class="abs"></a>Unconsious <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Death" class="abs"></a>Death <i class="def-const">= 33</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Stoned" class="abs"></a>Stoned <i class="def-const">= 34</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Eradicated" class="abs"></a>Eradicated <i class="def-const">= 35</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Smile" class="abs"></a>Smile <i class="def-const">= 36</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ReadScoll" class="abs"></a>ReadScoll <i class="def-const">= 37</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.NotEnoughGold" class="abs"></a>NotEnoughGold <i class="def-const">= 38</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.CantEquip" class="abs"></a>CantEquip <i class="def-const">= 39</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ItemBrokenStolen" class="abs"></a>ItemBrokenStolen <i class="def-const">= 40</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.SPDrained" class="abs"></a>SPDrained <i class="def-const">= 41</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Aged" class="abs"></a>Aged <i class="def-const">= 42</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.SpellFailed" class="abs"></a>SpellFailed <i class="def-const">= 43</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.DamagedParty" class="abs"></a>DamagedParty <i class="def-const">= 44</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Tired" class="abs"></a>Tired <i class="def-const">= 45</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.EnterDungeon" class="abs"></a>EnterDungeon <i class="def-const">= 46</i>
</td><td class="def-right">
 come on let's go in
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.LeaveDungeon" class="abs"></a>LeaveDungeon <i class="def-const">= 47</i>
</td><td class="def-right">
 let's get out of here
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.AlmostDead" class="abs"></a>AlmostDead <i class="def-const">= 48</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.CastSpell" class="abs"></a>CastSpell <i class="def-const">= 49</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Shoot" class="abs"></a>Shoot <i class="def-const">= 50</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.AttackHit" class="abs"></a>AttackHit <i class="def-const">= 51</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.AttackMiss" class="abs"></a>AttackMiss <i class="def-const">= 52</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Beg" class="abs"></a>Beg <i class="def-const">= 53</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.BegFail" class="abs"></a>BegFail <i class="def-const">= 54</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ThreatFail" class="abs"></a>ThreatFail <i class="def-const">= 56</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.SmileHuge" class="abs"></a>SmileHuge <i class="def-const">= 57</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.BribeFail" class="abs"></a>BribeFail <i class="def-const">= 58</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.NPCDontTalk" class="abs"></a>NPCDontTalk <i class="def-const">= 59</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.SmileRandom2" class="abs"></a>SmileRandom2 <i class="def-const">= 60</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.LookUp" class="abs"></a>LookUp <i class="def-const">= 63</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.LookDown" class="abs"></a>LookDown <i class="def-const">= 64</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Yell" class="abs"></a>Yell <i class="def-const">= 65</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Falling" class="abs"></a>Falling <i class="def-const">= 66</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShakeHeadNo" class="abs"></a>ShakeHeadNo <i class="def-const">= 67</i>
</td><td class="def-right">
 shakes head
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.TavernGotDrunk" class="abs"></a>TavernGotDrunk <i class="def-const">= 69</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.TavernTip" class="abs"></a>TavernTip <i class="def-const">= 70</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShakeHeadYes" class="abs"></a>ShakeHeadYes <i class="def-const">= 71</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShopIdentify" class="abs"></a>ShopIdentify <i class="def-const">= 73</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShopRepair" class="abs"></a>ShopRepair <i class="def-const">= 74</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShopAlreadyIdentified" class="abs"></a>ShopAlreadyIdentified <i class="def-const">= 76</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShopWrongShop" class="abs"></a>ShopWrongShop <i class="def-const">= 79</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShopRude" class="abs"></a>ShopRude <i class="def-const">= 80</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.BankDeposit" class="abs"></a>BankDeposit <i class="def-const">= 81</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.SmileBig" class="abs"></a>SmileBig <i class="def-const">= 82</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.TempleDonate" class="abs"></a>TempleDonate <i class="def-const">= 83</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.HelloHouse" class="abs"></a>HelloHouse <i class="def-const">= 84</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.AfraidSilent" class="abs"></a>AfraidSilent <i class="def-const">= 98</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.InPrison" class="abs"></a>InPrison <i class="def-const">= 100</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ChooseMe" class="abs"></a>ChooseMe <i class="def-const">= 102</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Awaken" class="abs"></a>Awaken <i class="def-const">= 103</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.IdMonsterWeak" class="abs"></a>IdMonsterWeak <i class="def-const">= 104</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.IdMonsterBig" class="abs"></a>IdMonsterBig <i class="def-const">= 105</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.IdMonsterFail" class="abs"></a>IdMonsterFail <i class="def-const">= 106</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.LastManStanding" class="abs"></a>LastManStanding <i class="def-const">= 107</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Hungry" class="abs"></a>Hungry <i class="def-const">= 108</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.FacetBits"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.FacetBits</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.FacetBits.IsPortal" class="abs"></a>IsPortal <i class="def-const">= 0x1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.IsSecret" class="abs"></a>IsSecret <i class="def-const">= 0x2</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  show in red with Perception
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ScrollDown" class="abs"></a>ScrollDown <i class="def-const">= 0x4</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.AlignTop" class="abs"></a>AlignTop <i class="def-const">= 0x8</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.IsWater" class="abs"></a>IsWater <i class="def-const">= 0x10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ScrollUp" class="abs"></a>ScrollUp <i class="def-const">= 0x20</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ScrollLeft" class="abs"></a>ScrollLeft <i class="def-const">= 0x40</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ProjectToXY" class="abs"></a>ProjectToXY <i class="def-const">= 0x100</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ProjectToXZ" class="abs"></a>ProjectToXZ <i class="def-const">= 0x200</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ProjectToYZ" class="abs"></a>ProjectToYZ <i class="def-const">= 0x400</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ScrollRight" class="abs"></a>ScrollRight <i class="def-const">= 0x800</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.AlignLeft" class="abs"></a>AlignLeft <i class="def-const">= 0x1000</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.Invisible" class="abs"></a>Invisible <i class="def-const">= 0x2000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.AnimatedTFT" class="abs"></a>AnimatedTFT <i class="def-const">= 0x4000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.AlignRight" class="abs"></a>AlignRight <i class="def-const">= 0x8000</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.AlignBottom" class="abs"></a>AlignBottom <i class="def-const">= 0x20000</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.MoveByDoor" class="abs"></a>MoveByDoor <i class="def-const">= 0x40000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.IsEventJustHint" class="abs"></a>IsEventJustHint <i class="def-const">= 0x100000</i>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.AlternativeSound" class="abs"></a>AlternativeSound <i class="def-const">= 0x200000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.IsSky" class="abs"></a>IsSky <i class="def-const">= 0x400000</i>
</td><td class="def-right">
 outdoor in software mode: horizontal flow
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.FlipU" class="abs"></a>FlipU <i class="def-const">= 0x800000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.FlipV" class="abs"></a>FlipV <i class="def-const">= 0x1000000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.TriggerByClick" class="abs"></a>TriggerByClick <i class="def-const">= 0x2000000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.TriggerByStep" class="abs"></a>TriggerByStep <i class="def-const">= 0x4000000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.DisableEventByCtrlClick" class="abs"></a>DisableEventByCtrlClick <i class="def-const">= 0x8000000</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  indoor only: click event gets disabled by Ctrl+Click
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.EventDisabledByCtrlClick" class="abs"></a>EventDisabledByCtrlClick <i class="def-const">= 0x10000000</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.TriggerByMonster" class="abs"></a>TriggerByMonster <i class="def-const">= 0x8000000</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  happens even if there's no event assigned
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.TriggerByObject" class="abs"></a>TriggerByObject <i class="def-const">= 0x10000000</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  happens even if there's no event assigned
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.Untouchable" class="abs"></a>Untouchable <i class="def-const">= 0x20000000</i>
</td><td class="def-right">
 great for vertical facets of stairs. <span class="def-ver">[MM7+]</span> Shouldn't be used for sloped floor, like it's used in MM6.
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.IsLava" class="abs"></a>IsLava <i class="def-const">= 0x40000000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.HasData" class="abs"></a>HasData <i class="def-const">= 0x80000000</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.GameActions"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.GameActions</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.GameActions.Exit" class="abs"></a>Exit <i class="def-const">= 113</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.HouseScreens"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.HouseScreens</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.HouseScreens.Teacher" class="abs"></a>Teacher <i class="def-const">= -1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ChoosePerson" class="abs"></a>ChoosePerson <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Main" class="abs"></a>Main <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuyStandard" class="abs"></a>BuyStandard <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Sell" class="abs"></a>Sell <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Identify" class="abs"></a>Identify <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Repair" class="abs"></a>Repair <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BankDeposit" class="abs"></a>BankDeposit <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BankWithdraw" class="abs"></a>BankWithdraw <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpells" class="abs"></a>BuySpells <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.DisplayInventory" class="abs"></a>DisplayInventory <i class="def-const">= 94</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpecial" class="abs"></a>BuySpecial <i class="def-const">= 95</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.LearnSkills" class="abs"></a>LearnSkills <i class="def-const">= 96</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BountyHunt" class="abs"></a>BountyHunt <i class="def-const">= 99</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.PayFine" class="abs"></a>PayFine <i class="def-const">= 100</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArcomageMenu" class="abs"></a>ArcomageMenu <i class="def-const">= 101</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArcomageRules" class="abs"></a>ArcomageRules <i class="def-const">= 102</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArcomageConditions" class="abs"></a>ArcomageConditions <i class="def-const">= 103</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Arcomage" class="abs"></a>Arcomage <i class="def-const">= 104</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.HouseType"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.HouseType</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.HouseType.Weapon%20Shop" class="abs"></a>Weapon Shop <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Armor%20Shop" class="abs"></a>Armor Shop <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Magic%20Shop" class="abs"></a>Magic Shop <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Alchemist" class="abs"></a>Alchemist <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.General%20Store" class="abs"></a>General Store <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Fire%20Guild" class="abs"></a>Fire Guild <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Air%20Guild" class="abs"></a>Air Guild <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Water%20Guild" class="abs"></a>Water Guild <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Earth%20Guild" class="abs"></a>Earth Guild <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Spirit%20Guild" class="abs"></a>Spirit Guild <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Mind%20Guild" class="abs"></a>Mind Guild <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Body%20Guild" class="abs"></a>Body Guild <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Light%20Guild" class="abs"></a>Light Guild <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Dark%20Guild" class="abs"></a>Dark Guild <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Elemental%20Guild" class="abs"></a>Elemental Guild <i class="def-const">= 14</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Element%20Guild" class="abs"></a>Element Guild <i class="def-const">= 14</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Self%20Guild" class="abs"></a>Self Guild <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Thieves%20Guild" class="abs"></a>Thieves Guild <i class="def-const">= 17</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Merc%20Guild" class="abs"></a>Merc Guild <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Town%20Hall" class="abs"></a>Town Hall
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Throne" class="abs"></a>Throne <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Tavern" class="abs"></a>Tavern <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Bank" class="abs"></a>Bank <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Temple" class="abs"></a>Temple <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Castle%20Entrance" class="abs"></a>Castle Entrance <i class="def-const">= 24</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Dungeon%20Ent" class="abs"></a>Dungeon Ent <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Seer" class="abs"></a>Seer <i class="def-const">= 26</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Stables" class="abs"></a>Stables <i class="def-const">= 27</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Boats" class="abs"></a>Boats <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.House" class="abs"></a>House <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Training" class="abs"></a>Training <i class="def-const">= 30</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Jail" class="abs"></a>Jail <i class="def-const">= 31</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Circus" class="abs"></a>Circus <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.The%20Adventurer's%20Inn" class="abs"></a>The Adventurer's Inn <i class="def-const">= 35</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.ItemSlot"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.ItemSlot</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.ItemSlot.ExtraHand" class="abs"></a>ExtraHand <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.MainHand" class="abs"></a>MainHand <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Bow" class="abs"></a>Bow <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Armor" class="abs"></a>Armor <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Helm" class="abs"></a>Helm <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Belt" class="abs"></a>Belt <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Cloak" class="abs"></a>Cloak <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Gountlets" class="abs"></a>Gountlets <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Boots" class="abs"></a>Boots <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Amulet" class="abs"></a>Amulet <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Ring1" class="abs"></a>Ring1 <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Ring2" class="abs"></a>Ring2 <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Ring3" class="abs"></a>Ring3 <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Ring4" class="abs"></a>Ring4 <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Ring5" class="abs"></a>Ring5 <i class="def-const">= 14</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Ring6" class="abs"></a>Ring6 <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.ItemType"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.ItemType</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.ItemType.Any" class="abs"></a>Any <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Weapon" class="abs"></a>Weapon <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Weapon2H" class="abs"></a>Weapon2H <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Missile" class="abs"></a>Missile <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Armor" class="abs"></a>Armor <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Shield" class="abs"></a>Shield <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Helm" class="abs"></a>Helm <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Belt" class="abs"></a>Belt <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Cloak" class="abs"></a>Cloak <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Gountlets" class="abs"></a>Gountlets <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Boots" class="abs"></a>Boots <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Ring" class="abs"></a>Ring <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Amulet" class="abs"></a>Amulet <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Wand" class="abs"></a>Wand <i class="def-const">= 13</i>
</td><td class="def-right">
 weaponw
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Reagent" class="abs"></a>Reagent <i class="def-const">= 14</i>
</td><td class="def-right">
 herb
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Potion" class="abs"></a>Potion <i class="def-const">= 15</i>
</td><td class="def-right">
 bottle
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Scroll" class="abs"></a>Scroll <i class="def-const">= 16</i>
</td><td class="def-right">
 sscroll
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Book" class="abs"></a>Book <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.MScroll" class="abs"></a>MScroll <i class="def-const">= 18</i>
</td><td class="def-right">
 always creates item 001
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Gold" class="abs"></a>Gold <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Weapon_" class="abs"></a>Weapon_ <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Armor_" class="abs"></a>Armor_ <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Misc" class="abs"></a>Misc <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Sword" class="abs"></a>Sword <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Dagger" class="abs"></a>Dagger <i class="def-const">= 24</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Axe" class="abs"></a>Axe <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Spear" class="abs"></a>Spear <i class="def-const">= 26</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Bow" class="abs"></a>Bow <i class="def-const">= 27</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Mace" class="abs"></a>Mace <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Club" class="abs"></a>Club <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Staff" class="abs"></a>Staff <i class="def-const">= 30</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Leather" class="abs"></a>Leather <i class="def-const">= 31</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Chain" class="abs"></a>Chain <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Plate" class="abs"></a>Plate <i class="def-const">= 33</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Shield_" class="abs"></a>Shield_ <i class="def-const">= 34</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Helm_" class="abs"></a>Helm_ <i class="def-const">= 35</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Belt_" class="abs"></a>Belt_ <i class="def-const">= 36</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Cloak_" class="abs"></a>Cloak_ <i class="def-const">= 37</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Gountlets_" class="abs"></a>Gountlets_ <i class="def-const">= 38</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Boots_" class="abs"></a>Boots_ <i class="def-const">= 39</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Ring_" class="abs"></a>Ring_ <i class="def-const">= 40</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Amulet_" class="abs"></a>Amulet_ <i class="def-const">= 41</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Wand_" class="abs"></a>Wand_ <i class="def-const">= 42</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Scroll_" class="abs"></a>Scroll_ <i class="def-const">= 43</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Potion_" class="abs"></a>Potion_ <i class="def-const">= 44</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Reagent_" class="abs"></a>Reagent_ <i class="def-const">= 45</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Gems" class="abs"></a>Gems <i class="def-const">= 46</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Gems2" class="abs"></a>Gems2 <i class="def-const">= 47</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Gold_" class="abs"></a>Gold_ <i class="def-const">= 50</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Keys"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Keys</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Keys.LBUTTON" class="abs"></a>LBUTTON <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RBUTTON" class="abs"></a>RBUTTON <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CANCEL" class="abs"></a>CANCEL <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MBUTTON" class="abs"></a>MBUTTON <i class="def-const">= 4</i>
</td><td class="def-right">
 NOT contiguous with L &amp; RBUTTON
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.XBUTTON1" class="abs"></a>XBUTTON1 <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.XBUTTON2" class="abs"></a>XBUTTON2 <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BACK" class="abs"></a>BACK <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BACKSPACE" class="abs"></a>BACKSPACE <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.TAB" class="abs"></a>TAB <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CLEAR" class="abs"></a>CLEAR <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ENTER" class="abs"></a>ENTER <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RETURN" class="abs"></a>RETURN <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SHIFT" class="abs"></a>SHIFT <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CONTROL" class="abs"></a>CONTROL <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CTRL" class="abs"></a>CTRL <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ALT" class="abs"></a>ALT <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MENU" class="abs"></a>MENU <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PAUSE" class="abs"></a>PAUSE <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CAPITAL" class="abs"></a>CAPITAL <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CAPSLOCK" class="abs"></a>CAPSLOCK <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.HANGUL" class="abs"></a>HANGUL <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.KANA" class="abs"></a>KANA <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.JUNJA" class="abs"></a>JUNJA <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.FINAL" class="abs"></a>FINAL <i class="def-const">= 24</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.HANJA" class="abs"></a>HANJA <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.KANJI" class="abs"></a>KANJI <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ESCAPE" class="abs"></a>ESCAPE <i class="def-const">= 27</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CONVERT" class="abs"></a>CONVERT <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NONCONVERT" class="abs"></a>NONCONVERT <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ACCEPT" class="abs"></a>ACCEPT <i class="def-const">= 30</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MODECHANGE" class="abs"></a>MODECHANGE <i class="def-const">= 31</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SPACE" class="abs"></a>SPACE <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PGUP" class="abs"></a>PGUP <i class="def-const">= 33</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PRIOR" class="abs"></a>PRIOR <i class="def-const">= 33</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NEXT" class="abs"></a>NEXT <i class="def-const">= 34</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PGDN" class="abs"></a>PGDN <i class="def-const">= 34</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.END" class="abs"></a>END <i class="def-const">= 35</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.HOME" class="abs"></a>HOME <i class="def-const">= 36</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LEFT" class="abs"></a>LEFT <i class="def-const">= 37</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.UP" class="abs"></a>UP <i class="def-const">= 38</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RIGHT" class="abs"></a>RIGHT <i class="def-const">= 39</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.DOWN" class="abs"></a>DOWN <i class="def-const">= 40</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SELECT" class="abs"></a>SELECT <i class="def-const">= 41</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PRINT" class="abs"></a>PRINT <i class="def-const">= 42</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.EXECUTE" class="abs"></a>EXECUTE <i class="def-const">= 43</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SNAPSHOT" class="abs"></a>SNAPSHOT <i class="def-const">= 44</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.INSERT" class="abs"></a>INSERT <i class="def-const">= 45</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.DELETE" class="abs"></a>DELETE <i class="def-const">= 46</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.HELP" class="abs"></a>HELP <i class="def-const">= 47</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.0" class="abs"></a>0 <i class="def-const">= 48</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.1" class="abs"></a>1 <i class="def-const">= 49</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.2" class="abs"></a>2 <i class="def-const">= 50</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.3" class="abs"></a>3 <i class="def-const">= 51</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.4" class="abs"></a>4 <i class="def-const">= 52</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.5" class="abs"></a>5 <i class="def-const">= 53</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.6" class="abs"></a>6 <i class="def-const">= 54</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.7" class="abs"></a>7 <i class="def-const">= 55</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.8" class="abs"></a>8 <i class="def-const">= 56</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.9" class="abs"></a>9 <i class="def-const">= 57</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.A" class="abs"></a>A <i class="def-const">= 65</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.B" class="abs"></a>B <i class="def-const">= 66</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.C" class="abs"></a>C <i class="def-const">= 67</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.D" class="abs"></a>D <i class="def-const">= 68</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.E" class="abs"></a>E <i class="def-const">= 69</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F" class="abs"></a>F <i class="def-const">= 70</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.G" class="abs"></a>G <i class="def-const">= 71</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.H" class="abs"></a>H <i class="def-const">= 72</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.I" class="abs"></a>I <i class="def-const">= 73</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.J" class="abs"></a>J <i class="def-const">= 74</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.K" class="abs"></a>K <i class="def-const">= 75</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.L" class="abs"></a>L <i class="def-const">= 76</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.M" class="abs"></a>M <i class="def-const">= 77</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.N" class="abs"></a>N <i class="def-const">= 78</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.O" class="abs"></a>O <i class="def-const">= 79</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.P" class="abs"></a>P <i class="def-const">= 80</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.Q" class="abs"></a>Q <i class="def-const">= 81</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.R" class="abs"></a>R <i class="def-const">= 82</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.S" class="abs"></a>S <i class="def-const">= 83</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.T" class="abs"></a>T <i class="def-const">= 84</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.U" class="abs"></a>U <i class="def-const">= 85</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.V" class="abs"></a>V <i class="def-const">= 86</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.W" class="abs"></a>W <i class="def-const">= 87</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.X" class="abs"></a>X <i class="def-const">= 88</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.Y" class="abs"></a>Y <i class="def-const">= 89</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.Z" class="abs"></a>Z <i class="def-const">= 90</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LWIN" class="abs"></a>LWIN <i class="def-const">= 91</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RWIN" class="abs"></a>RWIN <i class="def-const">= 92</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.APPS" class="abs"></a>APPS <i class="def-const">= 93</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SLEEP" class="abs"></a>SLEEP <i class="def-const">= 95</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD0" class="abs"></a>NUMPAD0 <i class="def-const">= 96</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD1" class="abs"></a>NUMPAD1 <i class="def-const">= 97</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD2" class="abs"></a>NUMPAD2 <i class="def-const">= 98</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD3" class="abs"></a>NUMPAD3 <i class="def-const">= 99</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD4" class="abs"></a>NUMPAD4 <i class="def-const">= 100</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD5" class="abs"></a>NUMPAD5 <i class="def-const">= 101</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD6" class="abs"></a>NUMPAD6 <i class="def-const">= 102</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD7" class="abs"></a>NUMPAD7 <i class="def-const">= 103</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD8" class="abs"></a>NUMPAD8 <i class="def-const">= 104</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD9" class="abs"></a>NUMPAD9 <i class="def-const">= 105</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MULTIPLY" class="abs"></a>MULTIPLY <i class="def-const">= 106</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ADD" class="abs"></a>ADD <i class="def-const">= 107</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SEPARATOR" class="abs"></a>SEPARATOR <i class="def-const">= 108</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SUBTRACT" class="abs"></a>SUBTRACT <i class="def-const">= 109</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.DECIMAL" class="abs"></a>DECIMAL <i class="def-const">= 110</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.DIVIDE" class="abs"></a>DIVIDE <i class="def-const">= 111</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F1" class="abs"></a>F1 <i class="def-const">= 112</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F2" class="abs"></a>F2 <i class="def-const">= 113</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F3" class="abs"></a>F3 <i class="def-const">= 114</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F4" class="abs"></a>F4 <i class="def-const">= 115</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F5" class="abs"></a>F5 <i class="def-const">= 116</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F6" class="abs"></a>F6 <i class="def-const">= 117</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F7" class="abs"></a>F7 <i class="def-const">= 118</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F8" class="abs"></a>F8 <i class="def-const">= 119</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F9" class="abs"></a>F9 <i class="def-const">= 120</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F10" class="abs"></a>F10 <i class="def-const">= 121</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F11" class="abs"></a>F11 <i class="def-const">= 122</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F12" class="abs"></a>F12 <i class="def-const">= 123</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F13" class="abs"></a>F13 <i class="def-const">= 124</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F14" class="abs"></a>F14 <i class="def-const">= 125</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F15" class="abs"></a>F15 <i class="def-const">= 126</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F16" class="abs"></a>F16 <i class="def-const">= 127</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F17" class="abs"></a>F17 <i class="def-const">= 128</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F18" class="abs"></a>F18 <i class="def-const">= 129</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F19" class="abs"></a>F19 <i class="def-const">= 130</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F20" class="abs"></a>F20 <i class="def-const">= 131</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F21" class="abs"></a>F21 <i class="def-const">= 132</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F22" class="abs"></a>F22 <i class="def-const">= 133</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F23" class="abs"></a>F23 <i class="def-const">= 134</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F24" class="abs"></a>F24 <i class="def-const">= 135</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMLOCK" class="abs"></a>NUMLOCK <i class="def-const">= 144</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SCROLL" class="abs"></a>SCROLL <i class="def-const">= 145</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LSHIFT" class="abs"></a>LSHIFT <i class="def-const">= 160</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RSHIFT" class="abs"></a>RSHIFT <i class="def-const">= 161</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LCONTROL" class="abs"></a>LCONTROL <i class="def-const">= 162</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RCONTROL" class="abs"></a>RCONTROL <i class="def-const">= 163</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LMENU" class="abs"></a>LMENU <i class="def-const">= 164</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RMENU" class="abs"></a>RMENU <i class="def-const">= 165</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_BACK" class="abs"></a>BROWSER_BACK <i class="def-const">= 166</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_FORWARD" class="abs"></a>BROWSER_FORWARD <i class="def-const">= 167</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_REFRESH" class="abs"></a>BROWSER_REFRESH <i class="def-const">= 168</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_STOP" class="abs"></a>BROWSER_STOP <i class="def-const">= 169</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_SEARCH" class="abs"></a>BROWSER_SEARCH <i class="def-const">= 170</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_FAVORITES" class="abs"></a>BROWSER_FAVORITES <i class="def-const">= 171</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_HOME" class="abs"></a>BROWSER_HOME <i class="def-const">= 172</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.VOLUME_MUTE" class="abs"></a>VOLUME_MUTE <i class="def-const">= 173</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.VOLUME_DOWN" class="abs"></a>VOLUME_DOWN <i class="def-const">= 174</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.VOLUME_UP" class="abs"></a>VOLUME_UP <i class="def-const">= 175</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MEDIA_NEXT_TRACK" class="abs"></a>MEDIA_NEXT_TRACK <i class="def-const">= 176</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MEDIA_PREV_TRACK" class="abs"></a>MEDIA_PREV_TRACK <i class="def-const">= 177</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MEDIA_STOP" class="abs"></a>MEDIA_STOP <i class="def-const">= 178</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MEDIA_PLAY_PAUSE" class="abs"></a>MEDIA_PLAY_PAUSE <i class="def-const">= 179</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LAUNCH_MAIL" class="abs"></a>LAUNCH_MAIL <i class="def-const">= 180</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LAUNCH_MEDIA_SELECT" class="abs"></a>LAUNCH_MEDIA_SELECT <i class="def-const">= 181</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LAUNCH_APP1" class="abs"></a>LAUNCH_APP1 <i class="def-const">= 182</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LAUNCH_APP2" class="abs"></a>LAUNCH_APP2 <i class="def-const">= 183</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_1" class="abs"></a>OEM_1 <i class="def-const">= 186</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_PLUS" class="abs"></a>OEM_PLUS <i class="def-const">= 187</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_COMMA" class="abs"></a>OEM_COMMA <i class="def-const">= 188</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_MINUS" class="abs"></a>OEM_MINUS <i class="def-const">= 189</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_PERIOD" class="abs"></a>OEM_PERIOD <i class="def-const">= 190</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_2" class="abs"></a>OEM_2 <i class="def-const">= 191</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_3" class="abs"></a>OEM_3 <i class="def-const">= 192</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_4" class="abs"></a>OEM_4 <i class="def-const">= 219</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_5" class="abs"></a>OEM_5 <i class="def-const">= 220</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_6" class="abs"></a>OEM_6 <i class="def-const">= 221</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_7" class="abs"></a>OEM_7 <i class="def-const">= 222</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_8" class="abs"></a>OEM_8 <i class="def-const">= 223</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_102" class="abs"></a>OEM_102 <i class="def-const">= 226</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PROCESSKEY" class="abs"></a>PROCESSKEY <i class="def-const">= 229</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PACKET" class="abs"></a>PACKET <i class="def-const">= 231</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ATTN" class="abs"></a>ATTN <i class="def-const">= 246</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CRSEL" class="abs"></a>CRSEL <i class="def-const">= 247</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.EXSEL" class="abs"></a>EXSEL <i class="def-const">= 248</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.EREOF" class="abs"></a>EREOF <i class="def-const">= 249</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PLAY" class="abs"></a>PLAY <i class="def-const">= 250</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ZOOM" class="abs"></a>ZOOM <i class="def-const">= 251</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NONAME" class="abs"></a>NONAME <i class="def-const">= 252</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PA1" class="abs"></a>PA1 <i class="def-const">= 253</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_CLEAR" class="abs"></a>OEM_CLEAR <i class="def-const">= 254</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.MonsterBits"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.MonsterBits</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.MonsterBits.Active" class="abs"></a>Active <i class="def-const">= 0x400</i>
</td><td class="def-right">
 inside the active radius
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.ShowOnMap" class="abs"></a>ShowOnMap <i class="def-const">= 0x8000</i>
</td><td class="def-right">
 monster was once seen by party
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.Invisible" class="abs"></a>Invisible <i class="def-const">= 0x10000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.NoFlee" class="abs"></a>NoFlee <i class="def-const">= 0x20000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.Hostile" class="abs"></a>Hostile <i class="def-const">= 0x80000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.OnAlertMap" class="abs"></a>OnAlertMap <i class="def-const">= 0x100000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.TreasureGenerated" class="abs"></a>TreasureGenerated <i class="def-const">= 0x800000</i>
</td><td class="def-right">
 treasure is in <b class="def-param">Items</b>[0] and <b class="def-param">Items</b>[1], gold is in <b class="def-param">Items</b>[3]
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.ShowAsHostile" class="abs"></a>ShowAsHostile <i class="def-const">= 0x1000000</i>
</td><td class="def-right">
 show as hostile on map
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.IsObeliskChest" class="abs"></a>IsObeliskChest <i class="def-const">= 0x2000000</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.MonsterBonus"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.MonsterBonus</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.MonsterBonus.Curse" class="abs"></a>Curse <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Weak" class="abs"></a>Weak <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Asleep" class="abs"></a>Asleep <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Drunk" class="abs"></a>Drunk <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Insane" class="abs"></a>Insane <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Poison1" class="abs"></a>Poison1 <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Poison2" class="abs"></a>Poison2 <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Poison3" class="abs"></a>Poison3 <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Disease1" class="abs"></a>Disease1 <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Disease2" class="abs"></a>Disease2 <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Disease3" class="abs"></a>Disease3 <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Paralyze" class="abs"></a>Paralyze <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Uncon" class="abs"></a>Uncon <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Dead" class="abs"></a>Dead <i class="def-const">= 14</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Stone" class="abs"></a>Stone <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Errad" class="abs"></a>Errad <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Brkitem" class="abs"></a>Brkitem <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Brkarmor" class="abs"></a>Brkarmor <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Brkweapon" class="abs"></a>Brkweapon <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Steal" class="abs"></a>Steal <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Age" class="abs"></a>Age <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Drainsp" class="abs"></a>Drainsp <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Afraid" class="abs"></a>Afraid <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.MonsterBuff"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.MonsterBuff</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.MonsterBuff.Null" class="abs"></a>Null <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Charm" class="abs"></a>Charm <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Summoned" class="abs"></a>Summoned <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Curse" class="abs"></a>Curse <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.ShrinkingRay" class="abs"></a>ShrinkingRay <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Fear" class="abs"></a>Fear <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Stoned" class="abs"></a>Stoned <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Paralyze" class="abs"></a>Paralyze <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Slow" class="abs"></a>Slow <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.ArmorHalved" class="abs"></a>ArmorHalved
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Berserk" class="abs"></a>Berserk
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.MassDistortion" class="abs"></a>MassDistortion
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Fate" class="abs"></a>Fate
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Enslave" class="abs"></a>Enslave
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.DayOfProtection" class="abs"></a>DayOfProtection
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.HourOfPower" class="abs"></a>HourOfPower
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Shield" class="abs"></a>Shield
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.StoneSkin" class="abs"></a>StoneSkin
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Bless" class="abs"></a>Bless
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Heroism" class="abs"></a>Heroism
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Haste" class="abs"></a>Haste
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.PainReflection" class="abs"></a>PainReflection
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Hammerhands" class="abs"></a>Hammerhands
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.MeleeOnly" class="abs"></a>MeleeOnly <i class="def-const">= 22</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  (part of Blind and Dark Grasp)
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.DamageHalved" class="abs"></a>DamageHalved <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Wander" class="abs"></a>Wander <i class="def-const">= 24</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  monster wanders aimlessly (part of Blind)
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Mistform" class="abs"></a>Mistform <i class="def-const">= 25</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Feeblemind" class="abs"></a>Feeblemind <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.MonsterKind"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.MonsterKind</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.MonsterKind.Undead" class="abs"></a>Undead <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Demon" class="abs"></a>Demon <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Dragon" class="abs"></a>Dragon
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Elf" class="abs"></a>Elf <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Swimmer" class="abs"></a>Swimmer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Immobile" class="abs"></a>Immobile
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Peasant" class="abs"></a>Peasant <i class="def-const">= 5</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Titan" class="abs"></a>Titan <i class="def-const">= 7</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.NoArena" class="abs"></a>NoArena
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Ogre" class="abs"></a>Ogre <i class="def-const">= 7</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Elemental" class="abs"></a>Elemental <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.MonsterPref"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.MonsterPref</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.MonsterPref.Necro" class="abs"></a>Necro <i class="def-const">= 0x1</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Knight" class="abs"></a>Knight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Paladin" class="abs"></a>Paladin <i class="def-const">= 0x2</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Archer" class="abs"></a>Archer <i class="def-const">= 0x4</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Druid" class="abs"></a>Druid <i class="def-const">= 0x8</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Cleric" class="abs"></a>Cleric
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Troll" class="abs"></a>Troll <i class="def-const">= 0x8</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Minotaur" class="abs"></a>Minotaur <i class="def-const">= 0x10</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.DarkElf" class="abs"></a>DarkElf <i class="def-const">= 0x20</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Vampire" class="abs"></a>Vampire <i class="def-const">= 0x40</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Dragon" class="abs"></a>Dragon <i class="def-const">= 0x80</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Sorcerer" class="abs"></a>Sorcerer <i class="def-const">= 0x20</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Ranger" class="abs"></a>Ranger <i class="def-const">= 0x40</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Thief" class="abs"></a>Thief <i class="def-const">= 0x80</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Monk" class="abs"></a>Monk <i class="def-const">= 0x100</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Male" class="abs"></a>Male
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Female" class="abs"></a>Female
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Human" class="abs"></a>Human <i class="def-const">= 0x800</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Elf" class="abs"></a>Elf <i class="def-const">= 0x1000</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Dwarf" class="abs"></a>Dwarf <i class="def-const">= 0x2000</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Goblin" class="abs"></a>Goblin <i class="def-const">= 0x4000</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.NPCProfession"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.NPCProfession</h3>
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.NPCProfession.Smith" class="abs"></a>Smith <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Armorer" class="abs"></a>Armorer <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Alchemist" class="abs"></a>Alchemist <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Scholar" class="abs"></a>Scholar <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Guide" class="abs"></a>Guide <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Tracker" class="abs"></a>Tracker <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Pathfinder" class="abs"></a>Pathfinder <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Sailor" class="abs"></a>Sailor <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Navigator" class="abs"></a>Navigator <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Healer" class="abs"></a>Healer <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.ExpertHealer" class="abs"></a>ExpertHealer <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.MasterHealer" class="abs"></a>MasterHealer <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Teacher" class="abs"></a>Teacher <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Instructor" class="abs"></a>Instructor <i class="def-const">= 14</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.ArmsMaster" class="abs"></a>ArmsMaster <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.WeaponsMaster" class="abs"></a>WeaponsMaster <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Apprentice" class="abs"></a>Apprentice <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Mystic" class="abs"></a>Mystic <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.SpellMaster" class="abs"></a>SpellMaster <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Trader" class="abs"></a>Trader <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Merchant" class="abs"></a>Merchant <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Scout" class="abs"></a>Scout <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Herbalist" class="abs"></a>Herbalist <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Apothecary" class="abs"></a>Apothecary <i class="def-const">= 24</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Counselor" class="abs"></a>Counselor <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Barrister" class="abs"></a>Barrister <i class="def-const">= 24</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Tinker" class="abs"></a>Tinker <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Locksmith" class="abs"></a>Locksmith <i class="def-const">= 26</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Fool" class="abs"></a>Fool <i class="def-const">= 27</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.ChimneySweep" class="abs"></a>ChimneySweep <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Porter" class="abs"></a>Porter <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.QuarterMaster" class="abs"></a>QuarterMaster <i class="def-const">= 30</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Factor" class="abs"></a>Factor <i class="def-const">= 31</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Banker" class="abs"></a>Banker <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Cook" class="abs"></a>Cook <i class="def-const">= 33</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Chef" class="abs"></a>Chef <i class="def-const">= 34</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Horseman" class="abs"></a>Horseman <i class="def-const">= 35</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Bard" class="abs"></a>Bard <i class="def-const">= 36</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Enchanter" class="abs"></a>Enchanter <i class="def-const">= 37</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Cartographer" class="abs"></a>Cartographer <i class="def-const">= 38</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.WindMaster" class="abs"></a>WindMaster <i class="def-const">= 39</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.WaterMaster" class="abs"></a>WaterMaster <i class="def-const">= 40</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.GateMaster" class="abs"></a>GateMaster <i class="def-const">= 41</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Chaplain" class="abs"></a>Chaplain <i class="def-const">= 42</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Acolyte" class="abs"></a>Acolyte
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Piper" class="abs"></a>Piper <i class="def-const">= 43</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Explorer" class="abs"></a>Explorer <i class="def-const">= 44</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Pirate" class="abs"></a>Pirate <i class="def-const">= 45</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Squire" class="abs"></a>Squire <i class="def-const">= 46</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Psychic" class="abs"></a>Psychic <i class="def-const">= 47</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Gypsy" class="abs"></a>Gypsy <i class="def-const">= 48</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Diplomat" class="abs"></a>Diplomat <i class="def-const">= 49</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Negotiator" class="abs"></a>Negotiator <i class="def-const">= 49</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Duper" class="abs"></a>Duper <i class="def-const">= 50</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Burglar" class="abs"></a>Burglar <i class="def-const">= 51</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.FallenWizard" class="abs"></a>FallenWizard <i class="def-const">= 52</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Initiate" class="abs"></a>Initiate <i class="def-const">= 54</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Prelate" class="abs"></a>Prelate <i class="def-const">= 55</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Monk" class="abs"></a>Monk <i class="def-const">= 56</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Sage" class="abs"></a>Sage <i class="def-const">= 57</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Peasant" class="abs"></a>Peasant <i class="def-const">= 52</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Serf" class="abs"></a>Serf <i class="def-const">= 53</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Tailor" class="abs"></a>Tailor <i class="def-const">= 54</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Laborer" class="abs"></a>Laborer <i class="def-const">= 55</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Farmer" class="abs"></a>Farmer <i class="def-const">= 56</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Cooper" class="abs"></a>Cooper <i class="def-const">= 57</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Potter" class="abs"></a>Potter <i class="def-const">= 58</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Weaver" class="abs"></a>Weaver <i class="def-const">= 59</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Cobbler" class="abs"></a>Cobbler <i class="def-const">= 60</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.DitchDigger" class="abs"></a>DitchDigger <i class="def-const">= 61</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Miller" class="abs"></a>Miller <i class="def-const">= 62</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Carpenter" class="abs"></a>Carpenter <i class="def-const">= 63</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.StoneCutter" class="abs"></a>StoneCutter <i class="def-const">= 64</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Jester" class="abs"></a>Jester <i class="def-const">= 65</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Trapper" class="abs"></a>Trapper <i class="def-const">= 66</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Beggar" class="abs"></a>Beggar <i class="def-const">= 67</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Rustler" class="abs"></a>Rustler <i class="def-const">= 68</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Hunter" class="abs"></a>Hunter
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Scribe" class="abs"></a>Scribe <i class="def-const">= 70</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Missionary" class="abs"></a>Missionary <i class="def-const">= 71</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Clerk" class="abs"></a>Clerk <i class="def-const">= 72</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Guard" class="abs"></a>Guard <i class="def-const">= 73</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.FollowerofBaa" class="abs"></a>FollowerofBaa <i class="def-const">= 74</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Noble" class="abs"></a>Noble <i class="def-const">= 75</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Gambler" class="abs"></a>Gambler <i class="def-const">= 76</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Child" class="abs"></a>Child <i class="def-const">= 77</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.ObjectRefKind"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.ObjectRefKind</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.ObjectRefKind.Nothing" class="abs"></a>Nothing <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Door" class="abs"></a>Door <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Object" class="abs"></a>Object <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Monster" class="abs"></a>Monster <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Party" class="abs"></a>Party <i class="def-const">= 4</i>
</td><td class="def-right">
 Index is player index (1-4 or 0 for whole party ???)
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Sprite" class="abs"></a>Sprite <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Facet" class="abs"></a>Facet <i class="def-const">= 6</i>
</td><td class="def-right">
 outdoors Index = ModelId*64 + FaceId
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Light" class="abs"></a>Light <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.PartyBuff"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.PartyBuff</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.PartyBuff.AirResistance" class="abs"></a>AirResistance <i class="def-const">= 0</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.BodyResistance" class="abs"></a>BodyResistance <i class="def-const">= 1</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.DayOfGods" class="abs"></a>DayOfGods <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.DetectLife" class="abs"></a>DetectLife <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.EarthResistance" class="abs"></a>EarthResistance <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.FireResistance" class="abs"></a>FireResistance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.ColdResistance" class="abs"></a>ColdResistance <i class="def-const">= 1</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.ElecResistance" class="abs"></a>ElecResistance <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.MagicResistance" class="abs"></a>MagicResistance <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.PoisonResistance" class="abs"></a>PoisonResistance <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.FeatherFall" class="abs"></a>FeatherFall <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.WaterWalk" class="abs"></a>WaterWalk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Fly" class="abs"></a>Fly <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Haste" class="abs"></a>Haste <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Heroism" class="abs"></a>Heroism <i class="def-const">= 9</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Immolation" class="abs"></a>Immolation <i class="def-const">= 10</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Invisibility" class="abs"></a>Invisibility <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.MindResistance" class="abs"></a>MindResistance <i class="def-const">= 12</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.ProtectionFromMagic" class="abs"></a>ProtectionFromMagic <i class="def-const">= 13</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Shield" class="abs"></a>Shield <i class="def-const">= 14</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Stoneskin" class="abs"></a>Stoneskin <i class="def-const">= 15</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.GuardianAngel" class="abs"></a>GuardianAngel <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.WizardEye" class="abs"></a>WizardEye
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.TorchLight" class="abs"></a>TorchLight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.WaterResistance" class="abs"></a>WaterResistance <i class="def-const">= 17</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.PlayerBuff"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.PlayerBuff</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.PlayerBuff.AirResistance" class="abs"></a>AirResistance <i class="def-const">= 0</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Bless" class="abs"></a>Bless
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.BodyResistance" class="abs"></a>BodyResistance <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.EarthResistance" class="abs"></a>EarthResistance <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Fate" class="abs"></a>Fate <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.FireResistance" class="abs"></a>FireResistance <i class="def-const">= 5</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Hammerhands" class="abs"></a>Hammerhands <i class="def-const">= 6</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Heroism" class="abs"></a>Heroism
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Haste" class="abs"></a>Haste
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.MindResistance" class="abs"></a>MindResistance <i class="def-const">= 9</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.PainReflection" class="abs"></a>PainReflection <i class="def-const">= 10</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Preservation" class="abs"></a>Preservation <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Regeneration" class="abs"></a>Regeneration <i class="def-const">= 12</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Shield" class="abs"></a>Shield
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Stoneskin" class="abs"></a>Stoneskin
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempLuck" class="abs"></a>TempLuck
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempIntellect" class="abs"></a>TempIntellect
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempPersonality" class="abs"></a>TempPersonality
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempAccuracy" class="abs"></a>TempAccuracy
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempEndurance" class="abs"></a>TempEndurance <i class="def-const">= 16</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempSpeed" class="abs"></a>TempSpeed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempMight" class="abs"></a>TempMight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.WaterResistance" class="abs"></a>WaterResistance <i class="def-const">= 22</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.WaterBreathing" class="abs"></a>WaterBreathing <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Glamour" class="abs"></a>Glamour <i class="def-const">= 24</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Levitate" class="abs"></a>Levitate <i class="def-const">= 25</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Misform" class="abs"></a>Misform <i class="def-const">= 26</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempEndurancy" class="abs"></a>TempEndurancy <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Race"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Race</h3>
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Race.Human" class="abs"></a>Human <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Race.Elf" class="abs"></a>Elf <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Race.Goblin" class="abs"></a>Goblin <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Race.Dwarf" class="abs"></a>Dwarf <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Screens"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Screens</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Screens.Game" class="abs"></a>Game <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Menu" class="abs"></a>Menu <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Controls" class="abs"></a>Controls <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Info" class="abs"></a>Info <i class="def-const">= 3</i>
</td><td class="def-right">
 quests, map, autonotes
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.NPC" class="abs"></a>NPC <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Rest" class="abs"></a>Rest <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Query" class="abs"></a>Query <i class="def-const">= 6</i>
</td><td class="def-right">
 like with hotkeys in Chinese debug MM6
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Inventory" class="abs"></a>Inventory <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.SpellBook" class="abs"></a>SpellBook <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.NewGameBreefing" class="abs"></a>NewGameBreefing <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Chest" class="abs"></a>Chest <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.SaveGame" class="abs"></a>SaveGame <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.LoadGame" class="abs"></a>LoadGame <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.House" class="abs"></a>House <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.InventoryInShop" class="abs"></a>InventoryInShop <i class="def-const">= 14</i>
</td><td class="def-right">
 double clicking a character in any Buy dialog in MM6 or in Buy Standard in MM7
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.InventoryInChest" class="abs"></a>InventoryInChest <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.MainManu" class="abs"></a>MainManu <i class="def-const">= 16</i>
</td><td class="def-right">
 or movie
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.WalkToMap" class="abs"></a>WalkToMap <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.MapEntrance" class="abs"></a>MapEntrance <i class="def-const">= 18</i>
</td><td class="def-right">
 or <a href="#Question">Question</a> screen
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.SimpleMessage" class="abs"></a>SimpleMessage <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.SelectTarget" class="abs"></a>SelectTarget <i class="def-const">= 20</i>
</td><td class="def-right">
 Heal and other such spells in MM8
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.CreateParty" class="abs"></a>CreateParty <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.EscMessage" class="abs"></a>EscMessage <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.ItemSpell" class="abs"></a>ItemSpell <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.KeyConfig" class="abs"></a>KeyConfig <i class="def-const">= 26</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.VideoOptions" class="abs"></a>VideoOptions <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.AdventurersInn" class="abs"></a>AdventurersInn <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.ItemSpellMM6" class="abs"></a>ItemSpellMM6 <i class="def-const">= 103</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.QuickReference" class="abs"></a>QuickReference <i class="def-const">= 104</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Season"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Season</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Season.Automn" class="abs"></a>Automn <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Season.Summer" class="abs"></a>Summer <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Season.Fall" class="abs"></a>Fall <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Season.Winter" class="abs"></a>Winter <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Skills"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Skills</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Skills.Staff" class="abs"></a>Staff <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Sword" class="abs"></a>Sword <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Dagger" class="abs"></a>Dagger <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Axe" class="abs"></a>Axe <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Spear" class="abs"></a>Spear <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Bow" class="abs"></a>Bow <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Mace" class="abs"></a>Mace <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Blaster" class="abs"></a>Blaster <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Shield" class="abs"></a>Shield <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Leather" class="abs"></a>Leather <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Chain" class="abs"></a>Chain <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Plate" class="abs"></a>Plate <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Fire" class="abs"></a>Fire <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Air" class="abs"></a>Air <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Water" class="abs"></a>Water <i class="def-const">= 14</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Earth" class="abs"></a>Earth <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Spirit" class="abs"></a>Spirit <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Mind" class="abs"></a>Mind <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Body" class="abs"></a>Body <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Light" class="abs"></a>Light <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Dark" class="abs"></a>Dark <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.DarkElfAbility" class="abs"></a>DarkElfAbility <i class="def-const">= 21</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.VampireAbility" class="abs"></a>VampireAbility <i class="def-const">= 22</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.DragonAbility" class="abs"></a>DragonAbility <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.IdentifyItem" class="abs"></a>IdentifyItem
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Merchant" class="abs"></a>Merchant
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Repair" class="abs"></a>Repair
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Bodybuilding" class="abs"></a>Bodybuilding
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Meditation" class="abs"></a>Meditation
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Perception" class="abs"></a>Perception
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Regeneration" class="abs"></a>Regeneration <i class="def-const">= 30</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Diplomacy" class="abs"></a>Diplomacy <i class="def-const">= 27</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Thievery" class="abs"></a>Thievery <i class="def-const">= 28</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.DisarmTraps" class="abs"></a>DisarmTraps
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Dodging" class="abs"></a>Dodging
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Unarmed" class="abs"></a>Unarmed
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.IdentifyMonster" class="abs"></a>IdentifyMonster
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Armsmaster" class="abs"></a>Armsmaster
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Stealing" class="abs"></a>Stealing
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Alchemy" class="abs"></a>Alchemy
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Learning" class="abs"></a>Learning
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.SpriteBits"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.SpriteBits</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.SpriteBits.TriggerByTouch" class="abs"></a>TriggerByTouch <i class="def-const">= 1</i>
</td><td class="def-right">
 triggered when a player comes into <b class="def-param">TriggerRadius</b>
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.TriggerByMonster" class="abs"></a>TriggerByMonster <i class="def-const">= 2</i>
</td><td class="def-right">
 triggered when a monster comes into <b class="def-param">TriggerRadius</b>
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.TriggerByObject" class="abs"></a>TriggerByObject <i class="def-const">= 4</i>
</td><td class="def-right">
 triggered when an object gets into <b class="def-param">TriggerRadius</b>
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.ShowOnMap" class="abs"></a>ShowOnMap <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.IsChest" class="abs"></a>IsChest <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.Invisible" class="abs"></a>Invisible <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.IsObeliskChest" class="abs"></a>IsObeliskChest <i class="def-const">= 64</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.IsShip" class="abs"></a>IsShip <i class="def-const">= 64</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Stats"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Stats</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Stats.Might" class="abs"></a>Might <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Intellect" class="abs"></a>Intellect <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Personality" class="abs"></a>Personality <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Endurance" class="abs"></a>Endurance <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Accuracy" class="abs"></a>Accuracy <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Speed" class="abs"></a>Speed <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Luck" class="abs"></a>Luck <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.HP" class="abs"></a>HP <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.HitPoints" class="abs"></a>HitPoints <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.SP" class="abs"></a>SP <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.SpellPoints" class="abs"></a>SpellPoints <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.ArmorClass" class="abs"></a>ArmorClass <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.FireResistance" class="abs"></a>FireResistance <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.AirResistance" class="abs"></a>AirResistance <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.WaterResistance" class="abs"></a>WaterResistance <i class="def-const">= 12</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.EarthResistance" class="abs"></a>EarthResistance <i class="def-const">= 13</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MindResistance" class="abs"></a>MindResistance <i class="def-const">= 14</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.BodyResistance" class="abs"></a>BodyResistance <i class="def-const">= 15</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Alchemy" class="abs"></a>Alchemy <i class="def-const">= 16</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Stealing" class="abs"></a>Stealing <i class="def-const">= 17</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.DisarmTraps" class="abs"></a>DisarmTraps <i class="def-const">= 18</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.IdentifyItem" class="abs"></a>IdentifyItem <i class="def-const">= 19</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.IdentifyMonster" class="abs"></a>IdentifyMonster <i class="def-const">= 20</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Armsmaster" class="abs"></a>Armsmaster <i class="def-const">= 21</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Dodging" class="abs"></a>Dodging <i class="def-const">= 22</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Unarmed" class="abs"></a>Unarmed <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.ElecResistance" class="abs"></a>ElecResistance <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.ColdResistance" class="abs"></a>ColdResistance <i class="def-const">= 12</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.PoisonResistance" class="abs"></a>PoisonResistance <i class="def-const">= 13</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Level" class="abs"></a>Level
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MeleeAttack" class="abs"></a>MeleeAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MeleeDamageBase" class="abs"></a>MeleeDamageBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MeleeDamageMin" class="abs"></a>MeleeDamageMin
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MeleeDamageMax" class="abs"></a>MeleeDamageMax
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.RangedAttack" class="abs"></a>RangedAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.RangedDamageBase" class="abs"></a>RangedDamageBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.RangedDamageMin" class="abs"></a>RangedDamageMin
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.RangedDamageMax" class="abs"></a>RangedDamageMax
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.SpiritResistance" class="abs"></a>SpiritResistance <i class="def-const">= 33</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.FireMagic" class="abs"></a>FireMagic <i class="def-const">= 34</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.AirMagic" class="abs"></a>AirMagic <i class="def-const">= 35</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.WaterMagic" class="abs"></a>WaterMagic <i class="def-const">= 36</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.EarthMagic" class="abs"></a>EarthMagic <i class="def-const">= 37</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.SpiritMagic" class="abs"></a>SpiritMagic <i class="def-const">= 38</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MindMagic" class="abs"></a>MindMagic <i class="def-const">= 39</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.BodyMagic" class="abs"></a>BodyMagic <i class="def-const">= 40</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.LightMagic" class="abs"></a>LightMagic <i class="def-const">= 41</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.DarkMagic" class="abs"></a>DarkMagic <i class="def-const">= 42</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Meditation" class="abs"></a>Meditation <i class="def-const">= 43</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Bow" class="abs"></a>Bow <i class="def-const">= 44</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Shield" class="abs"></a>Shield <i class="def-const">= 45</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Learning" class="abs"></a>Learning <i class="def-const">= 46</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.DarkElf" class="abs"></a>DarkElf <i class="def-const">= 47</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Vampire" class="abs"></a>Vampire <i class="def-const">= 48</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Dragon" class="abs"></a>Dragon <i class="def-const">= 49</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MagicResistance" class="abs"></a>MagicResistance <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="evt.Players"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>evt.Players</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="evt.Players.0" class="abs"></a>0 <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.1" class="abs"></a>1 <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.2" class="abs"></a>2 <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.3" class="abs"></a>3 <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.4" class="abs"></a>4 <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.Current" class="abs"></a>Current
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.current" class="abs"></a>current
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.All" class="abs"></a>All <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.all" class="abs"></a>all <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.Random" class="abs"></a>Random <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.random" class="abs"></a>random <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="evt.VarNum"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>evt.VarNum</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="evt.VarNum.SexIs" class="abs"></a>SexIs <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ClassIs" class="abs"></a>ClassIs <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.HP" class="abs"></a>HP <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.HasFullHP" class="abs"></a>HasFullHP <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SP" class="abs"></a>SP <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.HasFullSP" class="abs"></a>HasFullSP <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AC" class="abs"></a>AC <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArmorClass" class="abs"></a>ArmorClass <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ACBonus" class="abs"></a>ACBonus <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArmorClassBonus" class="abs"></a>ArmorClassBonus <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseLevel" class="abs"></a>BaseLevel <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.LevelBonus" class="abs"></a>LevelBonus <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AgeBonus" class="abs"></a>AgeBonus <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Awards" class="abs"></a>Awards <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Exp" class="abs"></a>Exp <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Experience" class="abs"></a>Experience <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.QBits" class="abs"></a>QBits <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Inventory" class="abs"></a>Inventory <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Items" class="abs"></a>Items <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.HourIs" class="abs"></a>HourIs <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DayOfYearIs" class="abs"></a>DayOfYearIs <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DayOfWeekIs" class="abs"></a>DayOfWeekIs <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Gold" class="abs"></a>Gold <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.GoldAddRandom" class="abs"></a>GoldAddRandom <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Food" class="abs"></a>Food <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.FoodAddRandom" class="abs"></a>FoodAddRandom <i class="def-const">= 24</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MightBonus" class="abs"></a>MightBonus <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IntellectBonus" class="abs"></a>IntellectBonus <i class="def-const">= 26</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PersonalityBonus" class="abs"></a>PersonalityBonus <i class="def-const">= 27</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.EnduranceBonus" class="abs"></a>EnduranceBonus <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpeedBonus" class="abs"></a>SpeedBonus <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AccuracyBonus" class="abs"></a>AccuracyBonus <i class="def-const">= 30</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.LuckBonus" class="abs"></a>LuckBonus <i class="def-const">= 31</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseMight" class="abs"></a>BaseMight <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseIntellect" class="abs"></a>BaseIntellect <i class="def-const">= 33</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BasePersonality" class="abs"></a>BasePersonality <i class="def-const">= 34</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseEndurance" class="abs"></a>BaseEndurance <i class="def-const">= 35</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseSpeed" class="abs"></a>BaseSpeed <i class="def-const">= 36</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseAccuracy" class="abs"></a>BaseAccuracy <i class="def-const">= 37</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseLuck" class="abs"></a>BaseLuck <i class="def-const">= 38</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentMight" class="abs"></a>CurrentMight <i class="def-const">= 39</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentIntellect" class="abs"></a>CurrentIntellect <i class="def-const">= 40</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentPersonality" class="abs"></a>CurrentPersonality <i class="def-const">= 41</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentEndurance" class="abs"></a>CurrentEndurance <i class="def-const">= 42</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentSpeed" class="abs"></a>CurrentSpeed <i class="def-const">= 43</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentAccuracy" class="abs"></a>CurrentAccuracy <i class="def-const">= 44</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentLuck" class="abs"></a>CurrentLuck <i class="def-const">= 45</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.FireResistance" class="abs"></a>FireResistance <i class="def-const">= 46</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AirResistance" class="abs"></a>AirResistance <i class="def-const">= 47</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.WaterResistance" class="abs"></a>WaterResistance <i class="def-const">= 48</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.EarthResistance" class="abs"></a>EarthResistance <i class="def-const">= 49</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpiritResistance" class="abs"></a>SpiritResistance <i class="def-const">= 50</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MindResistance" class="abs"></a>MindResistance <i class="def-const">= 51</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BodyResistance" class="abs"></a>BodyResistance <i class="def-const">= 52</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ElecResistance" class="abs"></a>ElecResistance <i class="def-const">= 47</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ColdResistance" class="abs"></a>ColdResistance <i class="def-const">= 48</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PoisonResistance" class="abs"></a>PoisonResistance <i class="def-const">= 49</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MagicResistance" class="abs"></a>MagicResistance <i class="def-const">= 50</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.FireResBonus" class="abs"></a>FireResBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AirResBonus" class="abs"></a>AirResBonus <i class="def-const">= 58</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.WaterResBonus" class="abs"></a>WaterResBonus <i class="def-const">= 59</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.EarthResBonus" class="abs"></a>EarthResBonus <i class="def-const">= 60</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpiritResBonus" class="abs"></a>SpiritResBonus <i class="def-const">= 61</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MindResBonus" class="abs"></a>MindResBonus <i class="def-const">= 62</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BodyResBonus" class="abs"></a>BodyResBonus <i class="def-const">= 63</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ElecResBonus" class="abs"></a>ElecResBonus <i class="def-const">= 52</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ColdResBonus" class="abs"></a>ColdResBonus <i class="def-const">= 53</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PoisonResBonus" class="abs"></a>PoisonResBonus <i class="def-const">= 54</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MagicResBonus" class="abs"></a>MagicResBonus <i class="def-const">= 55</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.StaffSkill" class="abs"></a>StaffSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SwordSkill" class="abs"></a>SwordSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DaggerSkill" class="abs"></a>DaggerSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AxeSkill" class="abs"></a>AxeSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpearSkill" class="abs"></a>SpearSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BowSkill" class="abs"></a>BowSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MaceSkill" class="abs"></a>MaceSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BlasterSkill" class="abs"></a>BlasterSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ShieldSkill" class="abs"></a>ShieldSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.LeatherSkill" class="abs"></a>LeatherSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ChainSkill" class="abs"></a>ChainSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PlateSkill" class="abs"></a>PlateSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.FireSkill" class="abs"></a>FireSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AirSkill" class="abs"></a>AirSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.WaterSkill" class="abs"></a>WaterSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.EarthSkill" class="abs"></a>EarthSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpiritSkill" class="abs"></a>SpiritSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MindSkill" class="abs"></a>MindSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BodySkill" class="abs"></a>BodySkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.LightSkill" class="abs"></a>LightSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DarkSkill" class="abs"></a>DarkSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DarkElfAbilitySkill" class="abs"></a>DarkElfAbilitySkill <i class="def-const">= 89</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.VampireAbilitySkill" class="abs"></a>VampireAbilitySkill <i class="def-const">= 90</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DragonAbilitySkill" class="abs"></a>DragonAbilitySkill <i class="def-const">= 91</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IdentifyItemSkill" class="abs"></a>IdentifyItemSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MerchantSkill" class="abs"></a>MerchantSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.RepairSkill" class="abs"></a>RepairSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BodybuildingSkill" class="abs"></a>BodybuildingSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MeditationSkill" class="abs"></a>MeditationSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PerceptionSkill" class="abs"></a>PerceptionSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.RegenerationSkill" class="abs"></a>RegenerationSkill <i class="def-const">= 98</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DiplomacySkill" class="abs"></a>DiplomacySkill
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ThieverySkill" class="abs"></a>ThieverySkill
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DisarmTrapsSkill" class="abs"></a>DisarmTrapsSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DodgingSkill" class="abs"></a>DodgingSkill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.UnarmedSkill" class="abs"></a>UnarmedSkill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IdentifyMonsterSkill" class="abs"></a>IdentifyMonsterSkill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArmsmasterSkill" class="abs"></a>ArmsmasterSkill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.StealingSkill" class="abs"></a>StealingSkill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AlchemySkill" class="abs"></a>AlchemySkill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.LearningSkill" class="abs"></a>LearningSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Cursed" class="abs"></a>Cursed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Weak" class="abs"></a>Weak
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Asleep" class="abs"></a>Asleep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Afraid" class="abs"></a>Afraid
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Drunk" class="abs"></a>Drunk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Insane" class="abs"></a>Insane
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Poison1" class="abs"></a>Poison1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PoisonedGreen" class="abs"></a>PoisonedGreen
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Disease1" class="abs"></a>Disease1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DiseasedGreen" class="abs"></a>DiseasedGreen
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Poison2" class="abs"></a>Poison2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PoisonedYellow" class="abs"></a>PoisonedYellow
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Disease2" class="abs"></a>Disease2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DiseasedYellow" class="abs"></a>DiseasedYellow
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Poison3" class="abs"></a>Poison3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PoisonedRed" class="abs"></a>PoisonedRed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Disease3" class="abs"></a>Disease3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DiseasedRed" class="abs"></a>DiseasedRed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Paralysed" class="abs"></a>Paralysed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Paralyzed" class="abs"></a>Paralyzed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Unconscious" class="abs"></a>Unconscious
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Dead" class="abs"></a>Dead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Stoned" class="abs"></a>Stoned
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Eradicated" class="abs"></a>Eradicated
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MainCondition" class="abs"></a>MainCondition
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar0" class="abs"></a>MapVar0
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar1" class="abs"></a>MapVar1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar2" class="abs"></a>MapVar2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar3" class="abs"></a>MapVar3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar4" class="abs"></a>MapVar4
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar5" class="abs"></a>MapVar5
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar6" class="abs"></a>MapVar6
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar7" class="abs"></a>MapVar7
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar8" class="abs"></a>MapVar8
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar9" class="abs"></a>MapVar9
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar10" class="abs"></a>MapVar10
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar11" class="abs"></a>MapVar11
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar12" class="abs"></a>MapVar12
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar13" class="abs"></a>MapVar13
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar14" class="abs"></a>MapVar14
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar15" class="abs"></a>MapVar15
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar16" class="abs"></a>MapVar16
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar17" class="abs"></a>MapVar17
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar18" class="abs"></a>MapVar18
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar19" class="abs"></a>MapVar19
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar20" class="abs"></a>MapVar20
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar21" class="abs"></a>MapVar21
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar22" class="abs"></a>MapVar22
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar23" class="abs"></a>MapVar23
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar24" class="abs"></a>MapVar24
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar25" class="abs"></a>MapVar25
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar26" class="abs"></a>MapVar26
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar27" class="abs"></a>MapVar27
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar28" class="abs"></a>MapVar28
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar29" class="abs"></a>MapVar29
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar30" class="abs"></a>MapVar30
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar31" class="abs"></a>MapVar31
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar32" class="abs"></a>MapVar32
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar33" class="abs"></a>MapVar33
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar34" class="abs"></a>MapVar34
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar35" class="abs"></a>MapVar35
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar36" class="abs"></a>MapVar36
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar37" class="abs"></a>MapVar37
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar38" class="abs"></a>MapVar38
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar39" class="abs"></a>MapVar39
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar40" class="abs"></a>MapVar40
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar41" class="abs"></a>MapVar41
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar42" class="abs"></a>MapVar42
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar43" class="abs"></a>MapVar43
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar44" class="abs"></a>MapVar44
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar45" class="abs"></a>MapVar45
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar46" class="abs"></a>MapVar46
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar47" class="abs"></a>MapVar47
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar48" class="abs"></a>MapVar48
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar49" class="abs"></a>MapVar49
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar50" class="abs"></a>MapVar50
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar51" class="abs"></a>MapVar51
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar52" class="abs"></a>MapVar52
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar53" class="abs"></a>MapVar53
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar54" class="abs"></a>MapVar54
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar55" class="abs"></a>MapVar55
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar56" class="abs"></a>MapVar56
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar57" class="abs"></a>MapVar57
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar58" class="abs"></a>MapVar58
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar59" class="abs"></a>MapVar59
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar60" class="abs"></a>MapVar60
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar61" class="abs"></a>MapVar61
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar62" class="abs"></a>MapVar62
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar63" class="abs"></a>MapVar63
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar64" class="abs"></a>MapVar64
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar65" class="abs"></a>MapVar65
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar66" class="abs"></a>MapVar66
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar67" class="abs"></a>MapVar67
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar68" class="abs"></a>MapVar68
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar69" class="abs"></a>MapVar69
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar70" class="abs"></a>MapVar70
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar71" class="abs"></a>MapVar71
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar72" class="abs"></a>MapVar72
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar73" class="abs"></a>MapVar73
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar74" class="abs"></a>MapVar74
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar75" class="abs"></a>MapVar75
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar76" class="abs"></a>MapVar76
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar77" class="abs"></a>MapVar77
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar78" class="abs"></a>MapVar78
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar79" class="abs"></a>MapVar79
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar80" class="abs"></a>MapVar80
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar81" class="abs"></a>MapVar81
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar82" class="abs"></a>MapVar82
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar83" class="abs"></a>MapVar83
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar84" class="abs"></a>MapVar84
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar85" class="abs"></a>MapVar85
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar86" class="abs"></a>MapVar86
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar87" class="abs"></a>MapVar87
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar88" class="abs"></a>MapVar88
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar89" class="abs"></a>MapVar89
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar90" class="abs"></a>MapVar90
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar91" class="abs"></a>MapVar91
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar92" class="abs"></a>MapVar92
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar93" class="abs"></a>MapVar93
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar94" class="abs"></a>MapVar94
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar95" class="abs"></a>MapVar95
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar96" class="abs"></a>MapVar96
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar97" class="abs"></a>MapVar97
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar98" class="abs"></a>MapVar98
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar99" class="abs"></a>MapVar99
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AutonotesBits" class="abs"></a>AutonotesBits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsMightMoreThanBase" class="abs"></a>IsMightMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsIntellectMoreThanBase" class="abs"></a>IsIntellectMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsPersonalityMoreThanBase" class="abs"></a>IsPersonalityMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsEnduranceMoreThanBase" class="abs"></a>IsEnduranceMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsSpeedMoreThanBase" class="abs"></a>IsSpeedMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsAccuracyMoreThanBase" class="abs"></a>IsAccuracyMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsLuckMoreThanBase" class="abs"></a>IsLuckMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PlayerBits" class="abs"></a>PlayerBits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.NPCs" class="abs"></a>NPCs
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ReputationIs" class="abs"></a>ReputationIs
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Flying" class="abs"></a>Flying
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.HasNPCProfession" class="abs"></a>HasNPCProfession
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.TotalCircusPrize" class="abs"></a>TotalCircusPrize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SkillPoints" class="abs"></a>SkillPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MonthIs" class="abs"></a>MonthIs
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter1" class="abs"></a>Counter1
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter2" class="abs"></a>Counter2
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter3" class="abs"></a>Counter3
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter4" class="abs"></a>Counter4
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter5" class="abs"></a>Counter5
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter6" class="abs"></a>Counter6
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter7" class="abs"></a>Counter7
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter8" class="abs"></a>Counter8
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter9" class="abs"></a>Counter9
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter10" class="abs"></a>Counter10
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Reputation" class="abs"></a>Reputation
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History1" class="abs"></a>History1
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History2" class="abs"></a>History2
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History3" class="abs"></a>History3
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History4" class="abs"></a>History4
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History5" class="abs"></a>History5
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History6" class="abs"></a>History6
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History7" class="abs"></a>History7
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History8" class="abs"></a>History8
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History9" class="abs"></a>History9
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History10" class="abs"></a>History10
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History11" class="abs"></a>History11
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History12" class="abs"></a>History12
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History13" class="abs"></a>History13
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History14" class="abs"></a>History14
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History15" class="abs"></a>History15
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History16" class="abs"></a>History16
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History17" class="abs"></a>History17
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History18" class="abs"></a>History18
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History19" class="abs"></a>History19
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History20" class="abs"></a>History20
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History21" class="abs"></a>History21
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History22" class="abs"></a>History22
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History23" class="abs"></a>History23
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History24" class="abs"></a>History24
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History25" class="abs"></a>History25
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History26" class="abs"></a>History26
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History27" class="abs"></a>History27
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History28" class="abs"></a>History28
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History29" class="abs"></a>History29
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapAlert" class="abs"></a>MapAlert
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BankGold" class="abs"></a>BankGold
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Deaths" class="abs"></a>Deaths
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MontersHunted" class="abs"></a>MontersHunted
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PrisonTerms" class="abs"></a>PrisonTerms
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArenaWinsPage" class="abs"></a>ArenaWinsPage
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArenaWinsSquire" class="abs"></a>ArenaWinsSquire
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArenaWinsKnight" class="abs"></a>ArenaWinsKnight
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArenaWinsLord" class="abs"></a>ArenaWinsLord
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Invisible" class="abs"></a>Invisible
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsWearingItem" class="abs"></a>IsWearingItem
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Players" class="abs"></a>Players <i class="def-const">= 318</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseStats" class="abs"></a>BaseStats[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Conditions" class="abs"></a>Conditions[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentStats" class="abs"></a>CurrentStats[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History" class="abs"></a>History[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVars" class="abs"></a>MapVars[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Skills" class="abs"></a>Skills[]
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

		</div>
	</div>
</body>
</html>