<!DOCTYPE html>
<html lang="ru">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Справка MMExtension 2.3</title>

<style>
.def-table { margin:6px 0;border:1px solid #a5a5a5;border-collapse:collapse;width:100%; }
.def-caption { padding:4px 7px 7px; border:1px solid #a5a5a5; }
.def-left { width:350px;padding:4px 6px 5px; border:1px solid #a5a5a5;overflow-x:auto; }
.def-right { padding:4px 6px 5px; border:1px solid #a5a5a5;overflow-x:auto; }
.def-functions { padding:4px 7px 7px; border:1px solid #a5a5a5; }
.def-ver { color:rgb(153,0,0); }
.def-nbsp { white-space:pre-wrap; }
.def-const { position:relative;float:right;right:2px;display:inline-block; }
.def-h4 { display:inline; }
.def-h5 { display:inline; font-weight: inherit; font-size: inherit; }
.def-shadow { color:#a5a5a5; }
.def-codeblock { white-space:pre-wrap; font-family: monospace,monospace; font-size: 85%; margin: 0.7em 0 -0.8em 0.8em; }
.def-code { white-space:pre-wrap; font-family: monospace,monospace; font-size: 85%; }
.def-param { color:#079; }
.def-ib { font-weight: bold; }
.def-default { }
.def-hidden { display: none; }
.def-largs { margin: 0 0.25em 0 0.5em; }
.def-rargs { margin-left: 0.25em; }
.def-largs-i { margin: 0 0.2em 0 0.16em; }
.def-rargs-i { margin-left: 0.2em; }
.def-vspace { display: inline-block; margin-top: 0.7em; margin-bottom: 0.1em; }
.def-pad-dot { padding: 0 0.14em 0 0.02em; }
.lua5-operator { font-weight: bold; color: #333; }
.lua5-note { font-weight: bold; color: #00D; }
.lua5-ctrl { font-weight: bold; color: Black; }
.lua5-std { color: Brown; }
.lua5-literal { font-weight: bold; color: #079; }
.lua5-str { color: #90A; }
.lua5-comment { color: #009000; }
.lua5-tab { display: inline-block; width: 2ch; }
.spoiler { margin:7px -1px; overflow-x: auto; border:1px solid #a5a5a5; }
.spoiler-checkbox { display: none; }
.spoiler-label { display: none; }
.spoiler-fade { display: none; }
.pre-outer { margin:7px -1px; overflow-x: auto; }
.pre { margin:0;border:1px solid #a5a5a5;padding:5px 7px 7px; white-space:pre-wrap; font-family: monospace,monospace; font-size: 85%; display:inline-block; }
.pre-spoiler { margin:0;padding:5px 7px 7px; white-space:pre-wrap; font-family: monospace,monospace; font-size: 85%; }
.abs { position:absolute;top:0; }
.table { margin:6px 0; border: 1px solid #888; border-collapse:collapse; }
.width-500 { min-width:70%;width:500px; }
</style>
<style>
	td, th {
		padding: 5px 6px;
		position: relative;
	}
	ul {
		list-style-type: none;
		margin-top: 0px;
		margin-bottom: 7px;
		padding-left: 20px;
		text-indent: -10px;
	}
	ul a {
		text-decoration: none;
	}
	ul a:link {
		color: black;
	}
	a:link:hover, a:visited:hover {
		background-color: #E8E8FF;
		border-radius: 4px;
	}
	a:link:active, a:visited:active {
		color: #d00;
	}
	
	.table tr:not(:first-of-type) td, .table tr:not(:first-of-type) th {
		border-top: 1px solid #a5a5a5;
	}
	.table td:not(:first-of-type), .table th:not(:first-of-type) {
		border-left: 1px solid #a5a5a5;
	}
	
	body {
		padding: 0 0;
		margin: 0 0;
		background-color: #f3f5fd;
	}
	#content {
		padding: 0;
		margin: 5px 5px 5px 260px;
		border: 1px solid #ddd;
		background-color: white;
	}
	#content2 {
		padding: 0 17px;
	}
	h1 {
		padding: 10px 10px 10px 20px;
		margin: 3px 1px 15px;
		border-bottom: 3px double #dadade;
	}
	#toc {
		position: fixed;
		z-index: 10;
		width: 240px;
		top: 0;
		left: 0;
		bottom: 0;
		padding: 10px;
		overflow-y: scroll;
		background-color: white;
		border-right: 1px solid #ddd;
	}
	#toc > ul {
		margin-left: -10px;
	}
	#toc > h3 {
		margin-top: 5px;
		margin-bottom: 15px;
	}
	#uarr {
		display: none;
	}
	.toc-check, .info-hover, .info-trigger, #toc-trigger {
		display: none;
	}
	
</style>
<!--[if !IE]><!--><style>
	#content2 > h2, #content2 > h3 {
		display: table;
		padding: 3px 8px;
		border-radius: 10px;
		border: 1px solid rgba(0,0,0,0.25);
		box-shadow: 1px 1px 0 0 rgba(0,0,0,0.4);
		margin-left: -4px;
	}
	.toc-check, .info-hover {
		display: inline;
	}
	.toc-check-info {
		display: block;
		margin-bottom: -0.5em;
	}
	#toc-check:not(:checked) ~ .toc-check-info {
		display: none;
	}
	#toc:not(:hover):not(:active) {
		opacity: 0;
	}
	#toc-check:not(:checked) ~ #toc {
		opacity: 1;
		width: 240px;
		transition: opacity 0.25s;
	}
	#toc-check:checked ~ #toc {
		width: 249px;
		transition: opacity 0.25s, width 0s linear 0.25s;
	}
	#toc-check, #toc-label {
		cursor: pointer;
		line-height: 150%;
		font-size: 110%;
		color: #c00;
	}
	#toc-label {
		margin-left: -1em;
		padding-left: 1em;
		user-select: none;
	}
@media (pointer:none) {
	#toc:not(#a):not(#b) {
		overflow-y: visible;
		position: static;
		width: auto;
		padding: 20px 0;
		background-color: transparent;
		transition: none;
		opacity: 1;
		box-shadow: none;
	}
	.toc-check, .info-hover, .info-trigger, #toc-trigger:not(#a):not(#b) {
		display: none;
	}
}
@media (pointer:coarse) {
	#toc-check:checked ~ #toc {
		width: 245px;
		box-shadow: 0px 0px 5px 3px rgba(0,0,0,0.37), 1px 0px 2px 10px rgba(255,255,255,0.37);
	}
}
@media (max-width: 1000px), (pointer:none) {
	.info-hover {
		display: none;
	}
	.info-trigger {
		display: inline;
	}
	body {
		margin: unset;
		padding: unset;
		background-color: white;
	}
	#content {
		margin: 0;
		border: none;
		background-color: transparent;
	}
	#toc-check:not(:checked) ~ #toc {
		overflow-y: visible;
		position: static;
		left: -300px;
		width: auto;
		padding: 20px 0 0;
		background-color: transparent;
		transition: none;
		border-right: none;
	}
	#toc-check:checked ~ #toc {
		left: -300px;
		opacity: 0;
		width: 249px;
		transition: opacity 0.25s, left 0s linear 0.25s;
		box-shadow: 0px 0px 5px 3px rgba(0,0,0,0.43), 1px 0px 2px 10px rgba(255,255,255,0.43);
	}
	#toc-check:checked ~ #toc-trigger {
		display: block;
		position: fixed;
		left: -100px;
		top: 0;
		bottom: 0;
		width: 17px;
		padding: 0;
		z-index: 20;
		user-select: none;
		opacity: 0;
		transition: left 0s linear 0.05s;
	}
	#toc-check:checked ~ #toc-trigger:not(:focus) {
		cursor: pointer;
		left: 0;
		transition: none;
	}
	#toc-trigger:active ~ #toc, #toc-trigger:focus ~ #toc, #toc:not(#a):active {
		left: 0;
		opacity: 1;
		transition: opacity 0.25s;
	}
}
@media (max-width: 300px) {
	#toc-check:checked ~ #toc {
		width: calc(100% - 50px);
		margin-left: calc(20px - 100%);
	}
}
@media (max-width: 1100px) {
	.def-left {
		width: 40%;
	}
}
@media (max-width: 640px) {
	#content2 {
		padding: 0 13px;
	}
	h1 {
		padding: 10px 9px 10px 16px;
	}
	#content2 > h2, #content2 > h3 {
		margin-left: -2px;
	}
}
@media (max-width: 550px) {
	.width-500 {
		width: 100%;
		max-width: 500px;
	}
}
@media (max-width: 500px) {
	#content2 {
		padding: 0 8px;
	}
	h1 {
		padding: 10px 9px 10px 11px;
	}
	.def-left {
		width: auto;
		margin-right: 12px;
		border-color: #777;
	}
	.def-right {
		margin-left: 12px;
		border: none;
		border-left: 1px dotted #a5a5a5;
		padding-top: 0.25px;
		padding-bottom: 0;
		margin-top: 0.75px;
		margin-bottom: 4px;
	}
	.def-table, .def-table td:not(.def-left):not(.def-right) {
		border: none;
	}
	.def-table, .def-table tbody, .def-table tr, .def-table td {
		display: block;
	}
	.pre-outer, .spoiler {
		margin-left: -5px;
		margin-right: -5px;
	}
}
/* Spoilers */
	.spoiler {
		position: relative;
	}
	.spoiler-checkbox {
		display: inline-block;
		opacity: 0;
		position: absolute;
		left: 0;
		top: 0;
		pointer-events: none;
	}
	.spoiler-space, .spoiler-label {
		display: inline-block;
		margin: 8px;
		padding: 6px;
		border: 1px solid #ccc;
		border-radius: 4px;
		border-right-width: 2px;
		border-bottom-width: 2px;
	}
	.spoiler-body {
		padding-bottom: 16px;
	}
	.spoiler-space {
		float: right;
		visibility: hidden;
	}
	.spoiler-label {
		position: absolute;
		top: 0;
		right: 0;
		cursor: pointer;
		user-select: none;
		z-index: 1;
	}
	.spoiler-checkbox:focus ~ label {
		border-color: #b2c4ee;
	}
	.spoiler-label:active:hover, .spoiler-checkbox:active ~ label {
		border: 1px solid #b2c4ee;
		background-color: #f0f0f0;
	}
	.spoiler-checkbox:not(:checked) ~ label {
		color: #c00;
	}
	.spoiler-label::after, .spoiler-space::after {
		content: "Expand";
	}
	.spoiler-checkbox:checked ~ label::after, .spoiler-checkbox:checked ~ .spoiler-scroll .spoiler-space::after {
		content: "Collapse";
	}
	.spoiler-scroll {
		overflow-x: auto;
		overflow-y: visible;
		transition: opacity 0.15s;
	}
	.spoiler-checkbox:not(:checked) ~ .spoiler-scroll {
		max-height: 70px;
		overflow: hidden;
		opacity: 0.4;
	}
	.spoiler-checkbox:not(:checked) ~ .spoiler-fade {
		display: block;
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		height: 22px;
		pointer-events: none;
		background: linear-gradient(180deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.5) 30%, rgba(255,255,255,0.8) 70%, rgba(255,255,255,1) 90%);
	}
</style><!--<![endif]-->

</head>
<body>
	<div id="content">
		<h1>Справка MMExtension 2.3</h1>
		<div id="content2">
			<input type="checkbox" id="toc-check" class="toc-check" checked value=""/><label id="toc-label" class="toc-check" for="toc-check"><span class="info-hover">Показывать оглавление только когда на него наведена мышь.</span><span class="info-trigger">Показывать оглавление кликом по левому краю окна.</span></label>
			<div class="info-hover toc-check-info">
				Наведите мышь на пустое место слева, чтобы увидеть содержание.
			</div>
			<div id="toc-trigger" tabindex="0"></div>
			<div id="toc">
				<h3>Содержание</h3>
				<ul><li><a href="#General-Information">Общая информация</a><ul><li><a href="#Hello-world!">Привет мир!</a></li><li><a href="#Decompiled-Scripts">Декомпилированные скрипты</a></li><li><a href="#Short-functions-syntax">Сокращённый синтаксис объявления функций</a></li><li><a href="#Quests">Задания</a></li><li><a href="#Autonotes">Автозаметки</a></li><li><a href="#Localization">Локализация</a></li><li><a href="#Special-Codes-in-Texts">Особые коды в сообщениях</a></li><li><a href="#More-on-Data-Tables">Ещё о Data\Tables</a></li></ul></li><li><a href="#Examples">Примеры</a><ul><li><a href="#Players-Skills-And-Spells">Умения и заклинания игроков</a></li><li><a href="#Artifact-Bonuses">Бонусы артефактов</a></li><li><a href="#Skill-Bonuses">Бонусы умений</a></li><li><a href="#Spells-Damage">Урон заклинания</a></li><li><a href="#Controlling-monsters-aggression-in-MM6">Управление агрессией монстров в MM6</a></li><li><a href="#Flowers-you-can-pick-up-(MM8)">Цветы, которые можно подобрать (MM8)</a></li><li><a href="#Unusually-looking-barrels-(MM7)">Необычно выглядящие бочки (MM7)</a></li><li><a href="#Other-Examples">Еще примеры</a></li></ul></li><li><a href="#Evt-Commands">Evt Commands</a><ul><li><a href="#evt.EnterHouse">evt.EnterHouse</a></li><li><a href="#evt.PlaySound">evt.PlaySound</a></li><li><a href="#evt.MoveToMap">evt.MoveToMap</a></li><li><a href="#evt.OpenChest">evt.OpenChest</a></li><li><a href="#evt.FaceExpression">evt.FaceExpression</a></li><li><a href="#evt.DamagePlayer">evt.DamagePlayer</a></li><li><a href="#evt.SetSnow">evt.SetSnow</a></li><li><a href="#evt.SetTexture">evt.SetTexture</a></li><li><a href="#evt.SetTextureOutdoors">evt.SetTextureOutdoors</a></li><li><a href="#evt.ShowMovie">evt.ShowMovie</a></li><li><a href="#evt.SetSprite">evt.SetSprite</a></li><li><a href="#evt.Cmp">evt.Cmp</a></li><li><a href="#evt.SetDoorState">evt.SetDoorState</a></li><li><a href="#evt.Add">evt.Add</a></li><li><a href="#evt.Subtract">evt.Subtract</a></li><li><a href="#evt.Set">evt.Set</a></li><li><a href="#evt.SummonMonsters">evt.SummonMonsters</a></li><li><a href="#evt.CastSpell">evt.CastSpell</a></li><li><a href="#evt.SpeakNPC">evt.SpeakNPC</a></li><li><a href="#evt.SetFacetBit">evt.SetFacetBit</a></li><li><a href="#evt.SetFacetBitOutdoors">evt.SetFacetBitOutdoors</a></li><li><a href="#evt.SetMonsterBit">evt.SetMonsterBit</a></li><li><a href="#evt.Question">evt.Question</a></li><li><a href="#evt.StatusText">evt.StatusText</a></li><li><a href="#evt.SetMessage">evt.SetMessage</a></li><li><a href="#evt.SetLight">evt.SetLight</a></li><li><a href="#evt.SimpleMessage">evt.SimpleMessage</a></li><li><a href="#evt.SummonObject">evt.SummonObject</a></li><li><a href="#evt.ForPlayer">evt.ForPlayer</a></li><li><a href="#evt.SetNPCTopic">evt.SetNPCTopic</a></li><li><a href="#evt.MoveNPC">evt.MoveNPC</a></li><li><a href="#evt.GiveItem">evt.GiveItem</a></li><li><a href="#evt.ChangeEvent">evt.ChangeEvent</a></li><li><a href="#evt.CheckSkill">evt.CheckSkill</a></li><li><a href="#evt.SetNPCGroupNews">evt.SetNPCGroupNews</a></li><li><a href="#evt.SetMonsterGroup">evt.SetMonsterGroup</a></li><li><a href="#evt.SetNPCItem">evt.SetNPCItem</a></li><li><a href="#evt.SetNPCGreeting">evt.SetNPCGreeting</a></li><li><a href="#evt.CheckMonstersKilled">evt.CheckMonstersKilled</a></li><li><a href="#evt.ChangeGroupToGroup">evt.ChangeGroupToGroup</a></li><li><a href="#evt.ChangeGroupAlly">evt.ChangeGroupAlly</a></li><li><a href="#evt.CheckSeason">evt.CheckSeason</a></li><li><a href="#evt.SetMonGroupBit">evt.SetMonGroupBit</a></li><li><a href="#evt.SetChestBit">evt.SetChestBit</a></li><li><a href="#evt.FaceAnimation">evt.FaceAnimation</a></li><li><a href="#evt.SetMonsterItem">evt.SetMonsterItem</a></li><li><a href="#evt.StopDoor">evt.StopDoor</a></li><li><a href="#evt.CheckItemsCount">evt.CheckItemsCount</a></li><li><a href="#evt.RemoveItems">evt.RemoveItems</a></li><li><a href="#evt.Jump">evt.Jump</a></li><li><a href="#evt.IsTotalBountyInRange">evt.IsTotalBountyInRange</a></li><li><a href="#evt.CanPlayerAct">evt.CanPlayerAct</a></li><li><a href="#evt.RefundChestArtifacts">evt.RefundChestArtifacts</a></li></ul></li><li><a href="#Events">Events</a><ul><li><a href="#StructsAfter-Spells.lua"><span class="def-shadow">Structs\After\ </span>Spells.lua</a><ul><li><a href="#events.MonsterCastSpell">MonsterCastSpell</a></li><li><a href="#events.EventCastSpell">EventCastSpell</a></li><li><a href="#events.ReadMonsterSpell">ReadMonsterSpell</a></li></ul></li><li><a href="#Core-events.lua"><span class="def-shadow">Core\ </span>events.lua</a><ul><li><a href="#events.CalcSpellDamage">CalcSpellDamage</a></li><li><a href="#events.WalkToMap">WalkToMap</a></li><li><a href="#events.DeathMap">DeathMap</a></li><li><a href="#events.NewGameMap">NewGameMap</a></li><li><a href="#events.NewGameDefaultParty">NewGameDefaultParty</a></li><li><a href="#events.NewGameClearParty">NewGameClearParty</a></li><li><a href="#events.GameInitialized1">GameInitialized1</a></li><li><a href="#events.GameInitialized2">GameInitialized2</a></li><li><a href="#events.CanSaveGame">CanSaveGame</a></li><li><a href="#events.CanCastLloyd">CanCastLloyd</a></li><li><a href="#events.IsUnderwater">IsUnderwater</a></li><li><a href="#events.FogRange">FogRange</a></li><li><a href="#events.PopulateQuestLog">PopulateQuestLog</a></li><li><a href="#events.PopulateAutonotesList">PopulateAutonotesList</a></li><li><a href="#events.PopulateAwardsList">PopulateAwardsList</a></li><li><a href="#events.MonsterInfoPictureChanged">MonsterInfoPictureChanged</a></li><li><a href="#events.WindowMessage">WindowMessage</a></li><li><a href="#events.KeyDown">KeyDown</a></li><li><a href="#events.KeyUp">KeyUp</a></li><li><a href="#events.PostRender">PostRender</a></li><li><a href="#events.Action">Action</a></li><li><a href="#events.MenuAction">MenuAction</a></li><li><a href="#events.ExitMapAction">ExitMapAction</a></li><li><a href="#events.KeysFilter">KeysFilter</a></li><li><a href="#events.BeforeSaveGame">BeforeSaveGame</a></li><li><a href="#events.BeforeNewGameAutosave">BeforeNewGameAutosave</a></li><li><a href="#events.AfterNewGameAutosave">AfterNewGameAutosave</a></li><li><a href="#events.AfterSaveGame">AfterSaveGame</a></li><li><a href="#events.SkyBitmap">SkyBitmap</a></li><li><a href="#events.PlayMapTrack">PlayMapTrack</a></li><li><a href="#events.ShowMovie">ShowMovie</a></li><li><a href="#events.PlaySound">PlaySound</a></li><li><a href="#events.FaceAnimation">FaceAnimation</a></li><li><a href="#events.CalcStatBonusByItems">CalcStatBonusByItems</a></li><li><a href="#events.CalcStatBonusByMagic">CalcStatBonusByMagic</a></li><li><a href="#events.CalcStatBonusBySkills">CalcStatBonusBySkills</a></li><li><a href="#events.GetSkill">GetSkill</a></li><li><a href="#events.GetAttackDelay">GetAttackDelay</a></li><li><a href="#events.CalcDamageToPlayer">CalcDamageToPlayer</a></li><li><a href="#events.GetMerchantTotalSkill">GetMerchantTotalSkill</a></li><li><a href="#events.GetDisarmTrapTotalSkill">GetDisarmTrapTotalSkill</a></li><li><a href="#events.GetDiplomacyTotalSkill">GetDiplomacyTotalSkill</a></li><li><a href="#events.GetPerceptionTotalSkill">GetPerceptionTotalSkill</a></li><li><a href="#events.GetLearningTotalSkill">GetLearningTotalSkill</a></li><li><a href="#events.DoBadThingToPlayer">DoBadThingToPlayer</a></li><li><a href="#events.GetStatisticEffect">GetStatisticEffect</a></li><li><a href="#events.UseMouseItem">UseMouseItem</a></li><li><a href="#events.Regeneration">Regeneration</a></li><li><a href="#events.ModifyItemDamage">ModifyItemDamage</a></li><li><a href="#events.MonsterKilled">MonsterKilled</a></li><li><a href="#events.ItemAdditionalDamage">ItemAdditionalDamage</a></li><li><a href="#events.CalcDamageToMonster">CalcDamageToMonster</a></li><li><a href="#events.PickCorpse">PickCorpse</a></li><li><a href="#events.CastTelepathy">CastTelepathy</a></li><li><a href="#events.CanMonsterCastSpell">CanMonsterCastSpell</a></li><li><a href="#events.MonsterChooseAction">MonsterChooseAction</a></li><li><a href="#events.MonsterAttacked">MonsterAttacked</a></li><li><a href="#events.AfterMonsterAttacked">AfterMonsterAttacked</a></li><li><a href="#events.PlayerAttacked">PlayerAttacked</a></li><li><a href="#events.AfterPlayerAttacked">AfterPlayerAttacked</a></li></ul></li><li><a href="#Core-evt.lua"><span class="def-shadow">Core\ </span>evt.lua</a><ul><li><a href="#events.LeaveMap">LeaveMap</a></li><li><a href="#events.LeaveGame">LeaveGame</a></li><li><a href="#events.BeforeLoadMap">BeforeLoadMap</a></li><li><a href="#events.CancelLoadingMapScripts">CancelLoadingMapScripts</a></li><li><a href="#events.BeforeLoadMapScripts">BeforeLoadMapScripts</a></li><li><a href="#events.LoadMapScripts">LoadMapScripts</a></li><li><a href="#events.LoadMap">LoadMap</a></li><li><a href="#events.AfterLoadMap">AfterLoadMap</a></li><li><a href="#events.GetEventHint">GetEventHint</a></li><li><a href="#events.GetMazeInfo">GetMazeInfo</a></li><li><a href="#events.EvtMap">EvtMap</a></li><li><a href="#events.EvtGlobal">EvtGlobal</a></li></ul></li><li><a href="#Core-main.lua"><span class="def-shadow">Core\ </span>main.lua</a><ul><li><a href="#events.StructsLoaded">StructsLoaded</a></li><li><a href="#events.ScriptsLoaded">ScriptsLoaded</a></li></ul></li><li><a href="#Core-npc.lua"><span class="def-shadow">Core\ </span>npc.lua</a><ul><li><a href="#events.EnterAnyNPC">EnterAnyNPC</a></li><li><a href="#events.EnterNPC">EnterNPC</a></li><li><a href="#events.ShowNPCTopics">ShowNPCTopics</a></li><li><a href="#events.ShowHiredNPCTopics">ShowHiredNPCTopics</a></li><li><a href="#events.DrawNPCGreeting">DrawNPCGreeting</a></li><li><a href="#events.SpeakWithMonster">SpeakWithMonster</a></li><li><a href="#events.CanExitNPC">CanExitNPC</a></li><li><a href="#events.CanExitStreetNPC">CanExitStreetNPC</a></li><li><a href="#events.CanExitHiredNPC">CanExitHiredNPC</a></li><li><a href="#events.ExitNPC">ExitNPC</a></li><li><a href="#events.ExitAnyNPC">ExitAnyNPC</a></li><li><a href="#events.ExitHouseScreen">ExitHouseScreen</a></li><li><a href="#events.CanTeachSkillMastery">CanTeachSkillMastery</a></li><li><a href="#events.CanTempleHealPlayer">CanTempleHealPlayer</a></li><li><a href="#events.GetShopItemTreatment">GetShopItemTreatment</a></li><li><a href="#events.CanShopOperateOnItem">CanShopOperateOnItem</a></li><li><a href="#events.ShopItemsGenerated">ShopItemsGenerated</a></li><li><a href="#events.GuildItemsGenerated">GuildItemsGenerated</a></li><li><a href="#events.HouseMovieFrame">HouseMovieFrame</a></li><li><a href="#events.ArcomageSetup">ArcomageSetup</a></li><li><a href="#events.ArcomageText">ArcomageText</a></li><li><a href="#events.NewBountyHunt">NewBountyHunt</a></li><li><a href="#events.BountyHuntDone">BountyHuntDone</a></li><li><a href="#events.SetMapNoNPC">SetMapNoNPC</a></li><li><a href="#events.PopulateNPCDialog">PopulateNPCDialog</a></li><li><a href="#events.AfterPopulateNPCDialog">AfterPopulateNPCDialog</a></li><li><a href="#events.PopulateHouseDialog">PopulateHouseDialog</a></li><li><a href="#events.PopulateArcomageDialog">PopulateArcomageDialog</a></li><li><a href="#events.PopulateDisplayInventoryDialog">PopulateDisplayInventoryDialog</a></li><li><a href="#events.AfterPopulateHouseDialog">AfterPopulateHouseDialog</a></li><li><a href="#events.PopulateLearnSkillsDialog">PopulateLearnSkillsDialog</a></li></ul></li><li><a href="#Core-timers.lua"><span class="def-shadow">Core\ </span>timers.lua</a><ul><li><a href="#events.Tick">Tick</a></li></ul></li><li><a href="#Modules-Faces.lua"><span class="def-shadow">Modules\ </span>Faces.lua</a><ul><li><a href="#events.BeforeUpdateFaces">BeforeUpdateFaces</a></li><li><a href="#events.AfterUpdateFaces">AfterUpdateFaces</a></li></ul></li><li><a href="#Modules-PaperDoll.lua"><span class="def-shadow">Modules\ </span>PaperDoll.lua</a><ul><li><a href="#events.ReloadPaperDollGraphics">ReloadPaperDollGraphics</a></li><li><a href="#events.PaperDollHiddenPieces">PaperDollHiddenPieces</a></li><li><a href="#events.PaperDollGetItems">PaperDollGetItems</a></li></ul></li></ul></li><li><a href="#General-Functions">General Functions</a><ul><li><a href="#StructsAfter-00-Mem-Functions.lua"><span class="def-shadow">Structs\After\ </span>00 Mem Functions.lua</a><ul><li><a href="#mem.BatchAdd">mem.BatchAdd</a></li><li><a href="#mem.ChangeGameArray">mem.ChangeGameArray</a></li><li><a href="#mem.ExtendGameStructure">mem.ExtendGameStructure</a></li><li><a href="#mem.ExtendAndSaveGameStructure">mem.ExtendAndSaveGameStructure</a></li><li><a href="#mem.ExtendBitsArray">mem.ExtendBitsArray</a></li></ul></li><li><a href="#StructsAfter-Backup.lua"><span class="def-shadow">Structs\After\ </span>Backup.lua</a><ul><li><a href="#LocalFile">LocalFile</a></li><li><a href="#LocalMonstersTxt">LocalMonstersTxt</a></li><li><a href="#LocalHostileTxt">LocalHostileTxt</a></li><li><a href="#LocalNPCNews">LocalNPCNews</a></li></ul></li><li><a href="#StructsAfter-Draw.lua"><span class="def-shadow">Structs\After\ </span>Draw.lua</a><ul><li><a href="#DrawScreenEffectD3D">DrawScreenEffectD3D</a></li></ul></li><li><a href="#StructsAfter-Functions.lua"><span class="def-shadow">Structs\After\ </span>Functions.lua</a><ul><li><a href="#SplitSkill">SplitSkill</a></li><li><a href="#JoinSkill">JoinSkill</a></li><li><a href="#XYZ">XYZ</a></li><li><a href="#ClearConsoleEvents">ClearConsoleEvents</a></li><li><a href="#Message">Message</a></li><li><a href="#Question">Question</a></li><li><a href="#ReplaceNPCTopic">ReplaceNPCTopic</a></li><li><a href="#SuppressSound">SuppressSound</a></li><li><a href="#ExitScreen">ExitScreen</a></li><li><a href="#ReloadHouse">ReloadHouse</a></li><li><a href="#SwitchHouseMovie">SwitchHouseMovie</a></li><li><a href="#DrawSimpleMessage">DrawSimpleMessage</a></li><li><a href="#HouseMessage">HouseMessage</a></li><li><a href="#AddGoldExp">AddGoldExp</a></li><li><a href="#TakeItemFromParty">TakeItemFromParty</a></li><li><a href="#CheckMonstersKilled">CheckMonstersKilled</a></li><li><a href="#EnumAvailableSkills">EnumAvailableSkills</a></li><li><a href="#RGB">RGB</a></li><li><a href="#StrLeft">StrLeft</a></li><li><a href="#StrRight">StrRight</a></li><li><a href="#StrColor">StrColor</a></li><li><a href="#SummonMonster">SummonMonster</a></li><li><a href="#SummonItem">SummonItem</a></li><li><a href="#RebildIDList">RebildIDList</a></li><li><a href="#ChangeSprite">ChangeSprite</a></li><li><a href="#CreateSprite">CreateSprite</a></li><li><a href="#MoveModel">MoveModel</a></li></ul></li><li><a href="#StructsAfter-LocalizationAndQuests.lua"><span class="def-shadow">Structs\After\ </span>LocalizationAndQuests.lua</a><ul><li><a href="#TakeQuestOperation">TakeQuestOperation</a></li><li><a href="#Quests-">Quests</a></li><li><a href="#QuestNPC">QuestNPC</a></li><li><a href="#vars.Quests">vars.Quests</a></li><li><a href="#LocalizeAll">LocalizeAll</a></li><li><a href="#Localize">Localize</a></li><li><a href="#GenerateQuestsLocalization">GenerateQuestsLocalization</a></li><li><a href="#GenerateLocalization">GenerateLocalization</a></li><li><a href="#ShowQuestEffect">ShowQuestEffect</a></li><li><a href="#ShowAwardEffect">ShowAwardEffect</a></li><li><a href="#ShowAutonoteEffect">ShowAutonoteEffect</a></li><li><a href="#AutoQuest">AutoQuest</a></li><li><a href="#AutoAward">AutoAward</a></li><li><a href="#AutoAutonote">AutoAutonote</a></li><li><a href="#GetLocalName">GetLocalName</a></li><li><a href="#Autonote">Autonote</a></li><li><a href="#AddAutonote">AddAutonote</a></li><li><a href="#CheckAutonote">CheckAutonote</a></li><li><a href="#FindAutonote">FindAutonote</a></li><li><a href="#UpdateNPCQuests">UpdateNPCQuests</a></li><li><a href="#QuestBranch">QuestBranch</a></li><li><a href="#QuestBranchScreen">QuestBranchScreen</a></li><li><a href="#ExitQuestBranch">ExitQuestBranch</a></li><li><a href="#GetQuestBranchStack">GetQuestBranchStack</a></li><li><a href="#Quest">Quest</a></li><li><a href="#Greeting">Greeting</a></li><li><a href="#NPCTopic">NPCTopic</a></li><li><a href="#KillMonstersQuest">KillMonstersQuest</a></li></ul></li><li><a href="#StructsAfter-Text-Tables.lua"><span class="def-shadow">Structs\After\ </span>Text Tables.lua</a><ul><li><a href="#ParseTextTable">ParseTextTable</a></li><li><a href="#LoadTextTable">LoadTextTable</a></li><li><a href="#ParseBasicTextTable">ParseBasicTextTable</a></li><li><a href="#LoadBasicTextTable">LoadBasicTextTable</a></li><li><a href="#WriteBasicTextTable">WriteBasicTextTable</a></li><li><a href="#ParseNumbersTextTable">ParseNumbersTextTable</a></li><li><a href="#LoadNumbersTextTable">LoadNumbersTextTable</a></li><li><a href="#ParseNamedColTable">ParseNamedColTable</a></li><li><a href="#LoadNamedColTable">LoadNamedColTable</a></li><li><a href="#WriteNamedColTable">WriteNamedColTable</a></li><li><a href="#TransposeTextTable">TransposeTextTable</a></li><li><a href="#ReadLodTextTable">ReadLodTextTable</a></li></ul></li><li><a href="#Core-Common.lua"><span class="def-shadow">Core\ </span>Common.lua</a><ul><li><a href="#assertnum">assertnum</a></li><li><a href="#tget">tget</a></li><li><a href="#pcall2">pcall2</a></li><li><a href="#xpcall2">xpcall2</a></li><li><a href="#cocall">cocall</a></li><li><a href="#cocall2">cocall2</a></li><li><a href="#dofile2">dofile2</a></li><li><a href="#coroutine.resume2">coroutine.resume2</a></li><li><a href="#os.GetErrorText">os.GetErrorText</a></li><li><a href="#path.find">path.find</a></li><li><a href="#path.FindFirst">path.FindFirst</a></li><li><a href="#path.findfirst">path.findfirst</a></li><li><a href="#os.chdir">os.chdir</a></li><li><a href="#os.mkdir">os.mkdir</a></li><li><a href="#os.copy">os.copy</a></li><li><a href="#path.GetRelativePath">path.GetRelativePath</a></li><li><a href="#string.convert">string.convert</a></li><li><a href="#debug.FunctionFile">debug.FunctionFile</a></li></ul></li><li><a href="#Core-Debug.lua"><span class="def-shadow">Core\ </span>Debug.lua</a><ul><li><a href="#debug.HideConsole">debug.HideConsole</a></li></ul></li><li><a href="#Core-ErrorFunction.lua"><span class="def-shadow">Core\ </span>ErrorFunction.lua</a><ul><li><a href="#errorinfo">errorinfo</a></li><li><a href="#tostring2">tostring2</a></li></ul></li><li><a href="#Core-RSFunctions.lua"><span class="def-shadow">Core\ </span>RSFunctions.lua</a><ul><li><a href="#table.swap">table.swap</a></li><li><a href="#table.move">table.move</a></li><li><a href="#table.copy">table.copy</a></li><li><a href="#table.find">table.find</a></li><li><a href="#table.ifind">table.ifind</a></li><li><a href="#table.invert">table.invert</a></li><li><a href="#table.clear">table.clear</a></li><li><a href="#table.join">table.join</a></li><li><a href="#coroutine.yieldN">coroutine.yieldN</a></li><li><a href="#path.ext">path.ext</a></li><li><a href="#path.setext">path.setext</a></li><li><a href="#path.name">path.name</a></li><li><a href="#path.dir">path.dir</a></li><li><a href="#path.addslash">path.addslash</a></li><li><a href="#path.noslash">path.noslash</a></li><li><a href="#io.save">io.save</a></li><li><a href="#io.load">io.load</a></li><li><a href="#string.print">string.print</a></li><li><a href="#string.split">string.split</a></li><li><a href="#string.csplit">string.csplit</a></li><li><a href="#string.replace">string.replace</a></li><li><a href="#sortpairs">sortpairs</a></li><li><a href="#debug.findupvalue">debug.findupvalue</a></li><li><a href="#debug.findlocal">debug.findlocal</a></li><li><a href="#debug.upvalues">debug.upvalues</a></li></ul></li><li><a href="#Core-RSMem.lua"><span class="def-shadow">Core\ </span>RSMem.lua</a><ul><li><a href="#&#8230;">&#8230;</a></li></ul></li><li><a href="#Core-RSPersist.lua"><span class="def-shadow">Core\ </span>RSPersist.lua</a><ul><li><a href="#persist">persist</a></li><li><a href="#unpersist">unpersist</a></li></ul></li><li><a href="#Core-dump.lua"><span class="def-shadow">Core\ </span>dump.lua</a><ul><li><a href="#dump">dump</a></li></ul></li><li><a href="#Core-events.lua-"><span class="def-shadow">Core\ </span>events.lua</a><ul><li><a href="#VFlipUnfixed">VFlipUnfixed</a></li><li><a href="#HookManager">HookManager</a></li><li><a href="#CallDefaultWindowProc">CallDefaultWindowProc</a></li><li><a href="#EnableLuaDataCompression">EnableLuaDataCompression</a></li><li><a href="#FixVFlip">FixVFlip</a></li><li><a href="#EnableMonstersCastingAnimation">EnableMonstersCastingAnimation</a></li><li><a href="#WhoHitMonster">WhoHitMonster</a></li><li><a href="#WhoHitPlayer">WhoHitPlayer</a></li></ul></li><li><a href="#Core-evt.lua-"><span class="def-shadow">Core\ </span>evt.lua</a><ul><li><a href="#vars">vars</a></li><li><a href="#mapvars">mapvars</a></li><li><a href="#evt.CanShowTopic">evt.CanShowTopic</a></li><li><a href="#evt.map">evt.map</a></li><li><a href="#evt.hint">evt.hint</a></li><li><a href="#evt.MazeInfo">evt.MazeInfo</a></li><li><a href="#evt.str">evt.str</a></li><li><a href="#evt.house">evt.house</a></li><li><a href="#evt.Player">evt.Player</a></li><li><a href="#evt.CurrentPlayer">evt.CurrentPlayer</a></li><li><a href="#evt.InGlobal">evt.InGlobal</a></li><li><a href="#evt.ForPlayer-">evt.ForPlayer</a></li><li><a href="#evt.HouseDoor">evt.HouseDoor</a></li></ul></li><li><a href="#Core-evtdeco.lua"><span class="def-shadow">Core\ </span>evtdeco.lua</a><ul><li><a href="#evt.Decompile">evt.Decompile</a></li></ul></li><li><a href="#Core-main.lua-"><span class="def-shadow">Core\ </span>main.lua</a><ul><li><a href="#mem.EditPChar">mem.EditPChar</a></li><li><a href="#mem.ConstPChar">mem.ConstPChar</a></li><li><a href="#mem.allocMM">mem.allocMM</a></li><li><a href="#mem.freeMM">mem.freeMM</a></li><li><a href="#mem.reallocMM">mem.reallocMM</a></li><li><a href="#mem.resizeArrayMM">mem.resizeArrayMM</a></li><li><a href="#MessageBox">MessageBox</a></li><li><a href="#debug.Message">debug.Message</a></li><li><a href="#debug.ErrorMessage">debug.ErrorMessage</a></li><li><a href="#ErrorMessage">ErrorMessage</a></li><li><a href="#AddScriptsPath">AddScriptsPath</a></li><li><a href="#ReloadLocalization">ReloadLocalization</a></li></ul></li><li><a href="#Core-npc.lua-"><span class="def-shadow">Core\ </span>npc.lua</a><ul><li><a href="#FindHiredNPC">FindHiredNPC</a></li><li><a href="#HireAllPeasants">HireAllPeasants</a></li><li><a href="#GetCurrentNPC">GetCurrentNPC</a></li><li><a href="#GetCurrentAnyNPC">GetCurrentAnyNPC</a></li><li><a href="#ArcomageRequireDeck">ArcomageRequireDeck</a></li><li><a href="#TrainPerWeek">TrainPerWeek</a></li><li><a href="#SkillToHouseTopic">SkillToHouseTopic</a></li><li><a href="#HouseTopicToSkill">HouseTopicToSkill</a></li></ul></li><li><a href="#Core-timers.lua-"><span class="def-shadow">Core\ </span>timers.lua</a><ul><li><a href="#Keys">Keys</a></li><li><a href="#timeGetTime">timeGetTime</a></li><li><a href="#Timer">Timer</a></li><li><a href="#RefillTimer">RefillTimer</a></li><li><a href="#Sleep">Sleep</a></li><li><a href="#Sleep2">Sleep2</a></li><li><a href="#RemoveTimer">RemoveTimer</a></li><li><a href="#Keys.IsPressed">Keys.IsPressed</a></li><li><a href="#Keys.IsToggled">Keys.IsToggled</a></li></ul></li><li><a href="#Modules-Faces.lua-"><span class="def-shadow">Modules\ </span>Faces.lua</a><ul><li><a href="#package.loaded.Faces.ExtraFields">P<span class="def-pad-dot">.</span>ExtraFields</a></li><li><a href="#package.loaded.Faces.Faces">P<span class="def-pad-dot">.</span>Faces</a></li><li><a href="#package.loaded.Faces.FaceAnimations">P<span class="def-pad-dot">.</span>FaceAnimations</a></li><li><a href="#package.loaded.Faces.Update">P<span class="def-pad-dot">.</span>Update</a></li></ul></li><li><a href="#Modules-PaperDoll.lua-"><span class="def-shadow">Modules\ </span>PaperDoll.lua</a><ul><li><a href="#PaperDollCategories">PaperDollCategories</a></li><li><a href="#PaperDollMainPieces">PaperDollMainPieces</a></li><li><a href="#PaperDollBaseRace">PaperDollBaseRace</a></li><li><a href="#PaperDollSpecialBodies">PaperDollSpecialBodies</a></li><li><a href="#PaperDollMode">PaperDollMode</a></li><li><a href="#PaperDollDrawOrder">PaperDollDrawOrder</a></li><li><a href="#PaperDollAddRace">PaperDollAddRace</a></li><li><a href="#PaperDollAddBodies">PaperDollAddBodies</a></li><li><a href="#AddPaperDollGraphics">AddPaperDollGraphics</a></li><li><a href="#ReloadPaperDollGraphics">ReloadPaperDollGraphics</a></li></ul></li></ul></li><li><a href="#Structures">Structures</a><ul><li><a href="#structs.GameStructure">Game</a></li><li><a href="#structs.GameParty">Party</a></li><li><a href="#structs.GameMap">Map</a></li><li><a href="#structs.GameMouse">Mouse</a></li><li><a href="#structs.GameScreen">Screen</a></li><li><a href="#structs.ActionItem">structs.ActionItem</a></li><li><a href="#structs.Arcomage">structs.Arcomage</a></li><li><a href="#structs.ArcomagePlayer">structs.ArcomagePlayer</a></li><li><a href="#structs.BSPNode">structs.BSPNode</a></li><li><a href="#structs.BaseBonus">structs.BaseBonus</a></li><li><a href="#structs.BaseLight">structs.BaseLight</a></li><li><a href="#structs.BitmapsLod">structs.BitmapsLod</a></li><li><a href="#structs.BlvHeader">structs.BlvHeader</a></li><li><a href="#structs.CurrentTileBin">structs.CurrentTileBin</a></li><li><a href="#structs.CustomLods">structs.CustomLods</a></li><li><a href="#structs.DChestItem">structs.DChestItem</a></li><li><a href="#structs.DecListItem">structs.DecListItem</a></li><li><a href="#structs.DialogLogic">structs.DialogLogic</a></li><li><a href="#structs.Dlg">structs.Dlg</a></li><li><a href="#structs.EventLine">structs.EventLine</a></li><li><a href="#structs.Events2DItem">structs.Events2DItem</a></li><li><a href="#structs.FaceAnimationInfo">structs.FaceAnimationInfo</a></li><li><a href="#structs.FacetData">structs.FacetData</a></li><li><a href="#structs.FloatVector">structs.FloatVector</a></li><li><a href="#structs.FogChances">structs.FogChances</a></li><li><a href="#structs.GameClassKinds">structs.GameClassKinds</a></li><li><a href="#structs.GameClasses">structs.GameClasses</a></li><li><a href="#structs.GameRaces">structs.GameRaces</a></li><li><a href="#structs.GeneralStoreItemKind">structs.GeneralStoreItemKind</a></li><li><a href="#structs.HistoryTxtItem">structs.HistoryTxtItem</a></li><li><a href="#structs.HouseMovie">structs.HouseMovie</a></li><li><a href="#structs.IFTItem">structs.IFTItem</a></li><li><a href="#structs.Item">structs.Item</a></li><li><a href="#structs.ItemsTxtItem">structs.ItemsTxtItem</a></li><li><a href="#structs.LloydBeaconSlot">structs.LloydBeaconSlot</a></li><li><a href="#structs.Lod">structs.Lod</a></li><li><a href="#structs.LodBitmap">structs.LodBitmap</a></li><li><a href="#structs.LodFile">structs.LodFile</a></li><li><a href="#structs.LodRecord">structs.LodRecord</a></li><li><a href="#structs.LodSprite">structs.LodSprite</a></li><li><a href="#structs.LodSpriteD3D">structs.LodSpriteD3D</a></li><li><a href="#structs.LodSpriteLine">structs.LodSpriteLine</a></li><li><a href="#structs.MapChest">structs.MapChest</a></li><li><a href="#structs.MapDoor">structs.MapDoor</a></li><li><a href="#structs.MapExtra">structs.MapExtra</a></li><li><a href="#structs.MapFacet">structs.MapFacet</a></li><li><a href="#structs.MapLight">structs.MapLight</a></li><li><a href="#structs.MapModel">structs.MapModel</a></li><li><a href="#structs.MapMonster">structs.MapMonster</a></li><li><a href="#structs.MapNote">structs.MapNote</a></li><li><a href="#structs.MapObject">structs.MapObject</a></li><li><a href="#structs.MapOutline">structs.MapOutline</a></li><li><a href="#structs.MapOutlines">structs.MapOutlines</a></li><li><a href="#structs.MapRoom">structs.MapRoom</a></li><li><a href="#structs.MapSprite">structs.MapSprite</a></li><li><a href="#structs.MapStatsItem">structs.MapStatsItem</a></li><li><a href="#structs.MapVertex">structs.MapVertex</a></li><li><a href="#structs.MissileSetup">structs.MissileSetup</a></li><li><a href="#structs.ModelFacet">structs.ModelFacet</a></li><li><a href="#structs.ModelVertex">structs.ModelVertex</a></li><li><a href="#structs.MonListItem">structs.MonListItem</a></li><li><a href="#structs.MonsterAttackInfo">structs.MonsterAttackInfo</a></li><li><a href="#structs.MonsterKind">structs.MonsterKind</a></li><li><a href="#structs.MonsterSchedule">structs.MonsterSchedule</a></li><li><a href="#structs.MonstersTxtItem">structs.MonstersTxtItem</a></li><li><a href="#structs.MoveToMap">structs.MoveToMap</a></li><li><a href="#structs.NPC">structs.NPC</a></li><li><a href="#structs.NPCNewsItem">structs.NPCNewsItem</a></li><li><a href="#structs.NPCProfTxtItem">structs.NPCProfTxtItem</a></li><li><a href="#structs.ObjListItem">structs.ObjListItem</a></li><li><a href="#structs.ObjectRef">structs.ObjectRef</a></li><li><a href="#structs.OdmHeader">structs.OdmHeader</a></li><li><a href="#structs.OverlayItem">structs.OverlayItem</a></li><li><a href="#structs.PFTItem">structs.PFTItem</a></li><li><a href="#structs.PatchOptions">structs.PatchOptions</a></li><li><a href="#structs.Player">structs.Player</a></li><li><a href="#structs.ProgressBar">structs.ProgressBar</a></li><li><a href="#structs.SFT">structs.SFT</a></li><li><a href="#structs.SFTItem">structs.SFTItem</a></li><li><a href="#structs.ShopItemKind">structs.ShopItemKind</a></li><li><a href="#structs.SoundsItem">structs.SoundsItem</a></li><li><a href="#structs.SpawnPoint">structs.SpawnPoint</a></li><li><a href="#structs.SpcItemsTxtItem">structs.SpcItemsTxtItem</a></li><li><a href="#structs.SpellBuff">structs.SpellBuff</a></li><li><a href="#structs.SpellEffect">structs.SpellEffect</a></li><li><a href="#structs.SpellInfo">structs.SpellInfo</a></li><li><a href="#structs.SpellsTxtItem">structs.SpellsTxtItem</a></li><li><a href="#structs.SpritesLod">structs.SpritesLod</a></li><li><a href="#structs.StartStat">structs.StartStat</a></li><li><a href="#structs.StdItemsTxtItem">structs.StdItemsTxtItem</a></li><li><a href="#structs.TFTItem">structs.TFTItem</a></li><li><a href="#structs.TileItem">structs.TileItem</a></li><li><a href="#structs.TilesetDef">structs.TilesetDef</a></li><li><a href="#structs.TownPortalTownInfo">structs.TownPortalTownInfo</a></li><li><a href="#structs.TravelInfo">structs.TravelInfo</a></li><li><a href="#structs.Weather">structs.Weather</a></li></ul></li><li><a href="#Constants">Constants</a><ul><li><a href="#const">const.*</a></li><li><a href="#const.AIState">const.AIState</a></li><li><a href="#const.CharScreens">const.CharScreens</a></li><li><a href="#const.ChestBits">const.ChestBits</a></li><li><a href="#const.Class">const.Class</a></li><li><a href="#const.Condition">const.Condition</a></li><li><a href="#const.Damage">const.Damage</a></li><li><a href="#const.ExitMapAction">const.ExitMapAction</a></li><li><a href="#const.FaceAnimation">const.FaceAnimation</a></li><li><a href="#const.FacetBits">const.FacetBits</a></li><li><a href="#const.GameActions">const.GameActions</a></li><li><a href="#const.HouseScreens">const.HouseScreens</a></li><li><a href="#const.HouseType">const.HouseType</a></li><li><a href="#const.ItemSlot">const.ItemSlot</a></li><li><a href="#const.ItemType">const.ItemType</a></li><li><a href="#const.Keys">const.Keys</a></li><li><a href="#const.MonsterAction">const.MonsterAction</a></li><li><a href="#const.MonsterBits">const.MonsterBits</a></li><li><a href="#const.MonsterBonus">const.MonsterBonus</a></li><li><a href="#const.MonsterBuff">const.MonsterBuff</a></li><li><a href="#const.MonsterKind">const.MonsterKind</a></li><li><a href="#const.MonsterPref">const.MonsterPref</a></li><li><a href="#const.NPCProfession">const.NPCProfession</a></li><li><a href="#const.ObjectRefKind">const.ObjectRefKind</a></li><li><a href="#const.PartyBuff">const.PartyBuff</a></li><li><a href="#const.PlayerBuff">const.PlayerBuff</a></li><li><a href="#const.Race">const.Race</a></li><li><a href="#const.Screens">const.Screens</a></li><li><a href="#const.Season">const.Season</a></li><li><a href="#const.Skills">const.Skills</a></li><li><a href="#const.Spells">const.Spells</a></li><li><a href="#const.SpriteBits">const.SpriteBits</a></li><li><a href="#const.Stats">const.Stats</a></li><li><a href="#evt.Players">evt.Players</a></li><li><a href="#evt.VarNum">evt.VarNum</a></li></ul></li></ul>
			</div>
			

<br>
<a id="General-Information"></a><h2>Общая информация</h2>
Для моддинга Вам понадобится <a href="https://grayface.github.io/mm/#MMArchive">MMArchive</a>. Также могут пригодиться <a href="http://sourceforge.net/projects/mm8leveleditor/files/MM8LevelEditor/">mm8leveleditor</a> и <a href="http://sites.google.com/site/angelddeath/#TOC-Might-Magic-6-8-Map-Viewer">MM Map Viewer</a>.
<br>

Извлеките все файлы <b class="def-param">*.txt</b> из соответствующих архивов LOD: <b class="def-param">icons.lod</b> в MM6, <b class="def-param">events.lod</b> в MM7, <b class="def-param">EnglishT.lod</b> в MM8. Вам они понадобятся.
<br>
Проще всего начать с редактирования текстовых таблиц с помощью <a href="https://grayface.github.io/mm/#Txt-Edit">TxtEdit</a>.

В добавок к файлам <b class="def-param">*.txt</b>, которые Вы извлекли из LOD-архива MMExtension создаст некоторые таблицы в папке <b>Data\Tables</b> при первом запуске. Вы можете менять в них любые значения и добавлять новые строки ко многим из них.
<br>
<br>


<b>Lua</b> &ndash; это простой, но гибкий скриптовый язык. Вы можете прочитать о нём <a href="http://www.lua.org/manual/5.1/">здесь</a>, <a href="http://www.lua.org/pil/">здесь</a> и <a href="http://luajit.org/extensions.html">здесь</a>. MMExtension предоставляет все стандартные библиотеки Lua и LuaJIT.<br>
Пока я не перешёл на Sublime Text, я использовал SciTE для редактирования скриптов Lua. Вот некоторые мои настройки для SciTE:
<table class="table">
<tbody>
<tr>
<td>
Откройте SciTEGlobal.properties.<br>
<br>
<b>Найдите и установите следующие параметры:</b><br>
tabsize=2<br>
indent.size=2<br>
braces.autoclose=0<br>
<br>
<b>Найдите</b> user.shortcuts=\<br>
<b>удалите строку с</b> Alt+X<br>
<b>добавьте строку:</b> Ctrl+Shift+Z|IDM_REDO|\<br>
<b>добавьте строку:</b> Ctrl+R|IDM_REPLACE|\<br>
</td>
</tr>
</tbody>
</table>
<br>

Все скрипты находятся в директории Scripts. Скрипты в разных подпапках загружаются и выгружаются в разные моменты:
<br>
<table class="table width-500">
<tbody>
<tr>
<td><i>&nbsp;Подпапка
</i></td>
<td><i>&nbsp;Описание
</i></td>
</tr>
<tr>
<td>Core</td>
<td>Скрипты ядра MMExtension. Не кладите сюда свои скрипты.
</td>
</tr>
<tr>
<td>General</td>
<td>
Эти скрипты загружаются перед началом игры и никогда не выгружается.
</td>
</tr>
<tr>
<td>Global</td>
<td>
Эти скрипты загружаются, когда запускается новая игра или загружается сохраненная игра, и выгружаются,
когда пользователь выходит в главное меню или загружает другую игру. Это хорошее место для большинства скриптов, которые не относятся к конкретной карте. В частности, для скриптов заданий.
</td>
</tr>
<tr>
<td>Localization</td>
<td>
Эти скрипты загружаются при старте игры перед загрузкой скриптов из папки "General" и могут быть загружены снова вызовом функции <a href="#ReloadLocalization">ReloadLocalization()</a>. Они предназначены для локализации модов.
</td>
</tr>
<tr>
<td>Maps</td>
<td>
Эти скрипты соответствуют картам. Например, скрипты под названием <b class="def-param">oute3.lua</b> и <b class="def-param">любое_имя.oute3.lua</b> будет загружаться при
загрузке карты <b class="def-param">Oute3.odm</b> (Нью-Сорпигал) и выгружаться при выходе из неё.<br>
У скриптов карты здесь же могут быть глобальные скрипты: <b class="def-param">oute3.global.lua</b> and <b class="def-param">любое_имя.oute3.global.lua</b> соответственно. Эти скрипты работают так же, как скрипты папки Global, но загружаются после них и разделяют <a href="#Autonotes">локальные автозаметки</a> с соответствующим скриптом карты.
</td>
</tr>
<tr>
<td>Modules</td>
<td>
Эти скрипты не загружаются автоматически. Вместо этого, их можно загружать при помощи функции <a href="http://www.lua.org/manual/5.1/manual.html#pdf-require">require</a>.
</td>
</tr>
<tr>
<td>Structs</td>
<td>
Эти скрипты предназначены для определения структур. Эти вещи низкого уровня, так что пока я не буду описывать их.
Если вы нашли интересный адрес с помощью ArtMoney или дизассемблера, свяжитесь со мной.
</td>
</tr>
<tr>
<td colspan="2">
Вы можете создавать свои собственные подпапки. Скрипты в них не будут загружаться автоматически и не будет выгружаться.
<br>
<br>

Слово "выгружать" означает удаление всех событий скрипта. Благодаря выгрузке и последующей повторной загрузке глобальных скриптов и скриптов карт, вы можете их изменить и протестировать изменения, просто перезагрузив сохраненную игру.
Не нужно для этого выходить из игры Меч и Магия.
<br>
</td>
</tr>
</tbody>
</table>
<br>

<b>Отладочная консоль</b> &ndash; это удобный способ быстро проверить что-нибудь. Нажмите Ctrl + F1, чтобы открыть её.
Здесь Вы можете писать любые скрипты. Например, <span class="def-code"><span class="lua5-std">dump</span>(Party[<span class="lua5-literal">0</span>].Stats)</span> выведет значения характеристик первого персонажа.<br>
Нажмите Ctrl + Enter, чтобы выполнить скрипт.<br>
Нажмите Ctrl + E, чтобы повторить последний скрипт.<br>
Нажмите Esc, чтобы закрыть консоль.<br>
<br>


<b>Переменные</b>, используемые скриптами, могут быть 4 типов:<br>
Локальные переменные, объявленные со словом <b>local</b> в Lua.
Они могут быть использованы в месте, где они были объявлены (т.е. функция, скрипт или блок кода) и не хранятся в сохранении игры.<br>
Глобальные переменные. Они могут быть доступны из любого места, но они не хранятся в сохранении игры.<br>
Переменные в таблице <a href="#vars">vars</a>. Они могут быть доступны из любого места и хранятся в сохранении игры.<br>
Переменные в таблице <a href="#mapvars">mapvars</a>. Они относятся к текущей карте. При загрузке карты, 
соответствующая таблица с переменными устанавливается, как <a href="#mapvars">mapvars</a>. Они хранятся в сохранении игры. При перезаполнении карты таблица <a href="#mapvars">mapvars</a> пересоздаётся, старая таблица в этот момент доступна, как <a href="#structs.GameMap.Refilled">Map.Refilled</a>.<br>
<br>

<a id="Hello-world!"></a><h3>Привет мир!</h3>

Для начала используем отладочную консоль. В игре нажмите Ctrl+F1 и вставьте следующий скрипт:
<div class="pre-outer"><div class="pre">Message(<span class="lua5-str">"Hello world!"</span>)</div></div>

Нажмите Ctrl+Enter, чтобы исполнить свой приветственный скрипт.<br><br>


Для того, чтобы сделать свой первый скрипт игры, создайте файл <b class="def-param">out01.lua</b> (или <b class="def-param">oute3.lua</b> для MM6) в каталоге <b>Scripts\Maps</b> и напишите в нём этот текст:<br>
<div class="pre-outer"><div class="pre">MessageBox(<span class="lua5-str">"Hello world!"</span>)</div></div>

Этот скрипт будет показывать <a href="#MessageBox">системное окно сообщения</a> каждый раз при входе в первую карту.<br><br>

Чтобы показать родное сообщение МM, вы можете использовать подобный скрипт:
<div class="pre-outer"><div class="pre">Game.NeedRedraw <span class="lua5-note">=</span> <span class="lua5-literal">true</span> <span> </span><span class="lua5-comment">-- I remember having problems with minimap not getting drawn</span><br>Sleep(<span class="lua5-literal">1</span>) <span> </span><span class="lua5-comment">-- sleep for 1 tick to let it be drawn</span><br>Message(<span class="lua5-str">"Hello world!"</span>)</div></div>

Первые 2 строки в нём понадобились из-за того, что Меч и Магия не поддерживает показ простых сообщений в момент загрузки карты.<br>
<br>



<a id="Decompiled-Scripts"></a><h3>Декомпилированные скрипты</h3>
Оригинальные скрипты Меча и Магии хранятся в двоичном формате в файлах с расширением <b class="def-param">.evt</b>. MMExtension может декомпилировать эти скрипты.
<a href="https://gitlab.com/GrayFace/mmext-scripts/-/tree/master/Decompiled%20Scripts">Ссылка на декомпилированные скрипты.</a><br>


Декомпилированные скрипты представлены в виде скриптов Lua и в псевдокоде, который напрямую соответствует бинарному формату.<br>
Просто для информации, далее приведены различия между командами псевдокода и реальными командами MMExtension:<br>
1) "evt." в них не пишется.<br>
2) Они используют goto, а не структурные условные операторы и циклы. Их строки пронумерованы.<br>
3) Они почти всегда проставляют имена параметров в вызовах функций Evt. Вы можете сделать то же самое, но вы также можете использовать вызовы без имен параметров.<br>
Некоторые команды заменены лучшими аналогами в MMExtension. Например, вы не можете использовать команду <b class="def-param">evt.OnTimer</b>, вместо этого вы должны использовать функцию <a href="#Timer">Timer</a>.<br>
5) Есть и другие отличия в синтаксисе скриптов &ndash; например, объявление событий.<br>

<br>
Пример (в формате Lua):
<br>
<div class="pre-outer"><div class="pre">Game.MapEvtLines:RemoveEvent(<span class="lua5-literal">60</span>) <span> </span><span class="lua5-comment">-- remove original event</span><br>evt.map[<span class="lua5-literal">60</span>] <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> i<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> evt.Cmp(<span class="lua5-str">"MapVar0"</span>, <span class="lua5-literal">4</span>) <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.StatusText(<span class="lua5-literal">5</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Nothing here"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">else</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"MapVar0"</span>, <span class="lua5-literal">1</span>)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.StatusText(<span class="lua5-literal">4</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "You found something!"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>i <span class="lua5-note">=</span> Game.Rand() <span class="lua5-note">%</span> <span class="lua5-literal">6</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> i <span class="lua5-operator">==</span> <span class="lua5-literal">1</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">1</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Longsword"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">elseif</span> i <span class="lua5-operator">==</span> <span class="lua5-literal">2</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">15</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Dagger"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">elseif</span> i <span class="lua5-operator">==</span> <span class="lua5-literal">3</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">58</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Club"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">elseif</span> i <span class="lua5-operator">==</span> <span class="lua5-literal">4</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">161</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Phirna Root"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">elseif</span> i <span class="lua5-operator">==</span> <span class="lua5-literal">5</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">309</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Inferno"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">else</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">94</span>) <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- "Cloth Hat"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>


Это код из декомпилированного скрипта <b class="def-param">ZNWC.lua</b> из MM6. Я только добавил первую строчку, которая убрает оригинальный обработчик события, чтобы этот фрагмент кода можно использовать сам по себе. Декомпилированные скрипты убирают сразу все оригинальные обработчики командой <span class="def-code">Game.MapEvtLines.Count <span class="lua5-note">=</span> <span class="lua5-literal">0</span></span>. Если вы хотите изменить некоторые события в декомпилированных скриптах, вытаскивайте эти события в отдельный скрипт, как сделал здесь я. Подробнее см. в описании метода <a href="#structs.EventLine.RemoveEvent">RemoveEvent</a>.<br>
<br>
Если же полноценно использовать возможности MMExtension, то скрипт, делающий то же самое (если играть с ним с самого начала игры), будет выглядеть так:
<br>


<a id="LocalizeScriptExample"></a>
<div class="pre-outer"><div class="pre"><span class="lua5-note">local</span> TXT <span class="lua5-note">=</span> Localize<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NothingHere <span class="lua5-note">=</span> <span class="lua5-str">"Nothing here"</span>,<br><span class="lua5-tab">&#9;</span>FoundSomething <span class="lua5-note">=</span> <span class="lua5-str">"You found something!"</span>,<br><span class="lua5-ctrl">}</span><br><span class="lua5-note">local</span> items <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><span class="lua5-literal">1</span>, <span class="lua5-literal">15</span>, <span class="lua5-literal">58</span>, <span class="lua5-literal">161</span>, <span class="lua5-literal">309</span>, <span class="lua5-literal">94</span><span class="lua5-ctrl">}</span><br>Game.MapEvtLines:RemoveEvent(<span class="lua5-literal">60</span>) <span> </span><span class="lua5-comment">-- remove original event</span><br>evt.map[<span class="lua5-literal">60</span>] <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> mapvars.Shelf60 <span class="lua5-operator">==</span> <span class="lua5-literal">4</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> Game.StatusText(TXT.NothingHere)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span>mapvars.Shelf60 <span class="lua5-note">=</span> (mapvars.Shelf60 <span class="lua5-ctrl">or</span> <span class="lua5-literal">0</span>) <span class="lua5-operator">+</span> <span class="lua5-literal">1</span><br><span class="lua5-tab">&#9;</span>Game.StatusText(TXT.FoundSomething)<br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> i <span class="lua5-note">=</span> <span class="lua5-std">math</span>.<span class="lua5-std">random</span>(<span class="lua5-literal">1</span>, <span class="lua5-operator">#</span>items)<br><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, items[i]) <span> </span><span class="lua5-comment">-- alternatively: evt.GiveItem{Id = items[i]}</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

Вы можете декомпилировать скрипты самостоятельно, если Вам это когда-то понадобится.

Для этого извлеките все <b class="def-param">*.evt</b> и <b class="def-param">*.str</b> файлы из того же архива LOD, что вы использовали для извлечения <b class="def-param">*.txt</b> файлов.

Создайте папку "Decompile" в папке с игрой, положите их туда, и выполните этот простой скрипт:
<br>
<div class="pre-outer"><div class="pre"><span class="lua5-note">local</span> dir <span class="lua5-note">=</span> <span class="lua5-str">"Decompile/"</span><br><span class="lua5-ctrl">for</span> f <span class="lua5-ctrl">in</span> path.<span class="lua5-std">find</span>(dir<span class="lua5-operator">..</span><span class="lua5-str">"*.evt"</span>) <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span>evt.Decompile(f, <span class="lua5-literal">0</span>, dir<span class="lua5-operator">..</span><span class="lua5-str">"Scripts/"</span><span class="lua5-operator">..</span>path.setext(path.name(f), <span class="lua5-str">".lua"</span>))<br><span class="lua5-tab">&#9;</span>evt.Decompile(f, <span class="lua5-literal">0</span>, dir<span class="lua5-operator">..</span><span class="lua5-str">"Scripts/txt/"</span><span class="lua5-operator">..</span>path.setext(path.name(f), <span class="lua5-str">".txt"</span>), <span class="lua5-literal">true</span>)<br><span class="lua5-ctrl">end</span></div></div>
<br>

<i>Примечание:</i> Невозможно преобразовать декомпилированный скрипт даже в текстовой форме обратно в файл EVT. Если Вам надо отредактировать EVT, используйте <a href="https://gitlab.com/GrayFace/mmext-scripts/-/tree/master/010Editor%20Templates">мои шаблоны для 010Editor</a>.
<br>
<br>



<a id="Short-functions-syntax"></a><h3>Сокращённый синтаксис объявления функций</h3>
MMExtension вносит одно дополнение в синтаксис Lua &ndash; cокращённый синтаксис объявления функций. Пример:
<div class="pre-outer"><div class="pre">sum <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>x, y<span class="lua5-ctrl">|</span> x <span class="lua5-operator">+</span> y<br><span class="lua5-comment">-- превращается в</span><br>sum <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>(x, y)<br><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> x <span class="lua5-operator">+</span> y<br><span class="lua5-ctrl">end</span></div></div>
Оператор <b>return</b> добавляется только когда он уместен. Например,
<div class="pre-outer"><div class="pre">check <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>b<span class="lua5-ctrl">|</span> <span class="lua5-ctrl">if</span> b <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(b)<br><span class="lua5-ctrl">end</span><br><span class="lua5-comment">-- превращается в</span><br>check <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>(b)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> b <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(b)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
Поскольку не заключённые в скобки короткие функции возвращают одно значение, нет проблем с передачей их в функции и конструкторы таблиц:
<div class="pre-outer"><div class="pre">Timer(<span class="lua5-ctrl">|</span><span class="lua5-ctrl">|</span> evt.DamagePlayer<span class="lua5-ctrl">{</span>Damage <span class="lua5-note">=</span> <span class="lua5-literal">1</span><span class="lua5-ctrl">}</span>, const.Minute)<br><span class="lua5-comment">-- превращается в</span><br>Timer(<span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> evt.DamagePlayer<span class="lua5-ctrl">{</span>Damage <span class="lua5-note">=</span> <span class="lua5-literal">1</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">end</span>, const.Minute)</div></div>
Если Вы хотите вернуть более одного значения, заключите всю короткую функцию в скобки:
<div class="pre-outer"><div class="pre">switch <span class="lua5-note">=</span> (<span class="lua5-ctrl">|</span>x, y<span class="lua5-ctrl">|</span> y, x)<br><span class="lua5-comment">-- превращается в</span><br>switch <span class="lua5-note">=</span> (<span class="lua5-ctrl">function</span>(x, y)<br><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> y, x<br><span class="lua5-ctrl">end</span>)</div></div>
Внутри заключённой в скобки короткой функции можно даже использовать несколько строчек кода:
<div class="pre-outer"><div class="pre">print2 <span class="lua5-note">=</span> (<span class="lua5-ctrl">|</span>x, y<span class="lua5-ctrl">|</span><br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(x)<br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(y)<br>)<br><span class="lua5-comment">-- превращается в</span><br>print2 <span class="lua5-note">=</span> (<span class="lua5-ctrl">function</span>(x, y)<br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(x)<br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(y)<br><span class="lua5-ctrl">end</span>)</div></div>
Для того же эффекта лучше будет выглядить блок <b class="def-param">do</b>:
<div class="pre-outer"><div class="pre">print2 <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>x, y<span class="lua5-ctrl">|</span> <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(x)<br><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(y)<br><span class="lua5-ctrl">end</span><br><span class="lua5-comment">-- превращается в</span><br>print2 <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>(x, y)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(x)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-std">print</span>(y)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
Но не стоит перебарщивать с короткими функциями &ndash; для многострочных функций предпочтителен традиционный синтаксис.
<br>
<br>

<a id="Quests"></a><h3>Задания</h3>
Оригинальные задания MM были разбросаны по нескольким файлам и программировались вручную, это неудобно и чревато ошибками. Поддержка заданий в MMExtension прошла несколько итераций и сейчас я ею очень доволен. <br>
<a href="https://gitlab.com/GrayFace/mmext-scripts/-/tree/master/Quests%20Examples%20(for%20MM8)">Здесь 6 примеров</a>.

Они предназначены для MM8. В конце большинства примеров есть дополнительная информация об использованных функциях. В большинстве примеров используется <a href="#Short-functions-syntax">сокращённый синтаксис объявления функций</a>.<br>
<br>

Начните с <b>Quest Example Simple.lua</b>. Это простое <a href="#Quest">задание</a> с двумя дополнительными <a href="#NPCTopic">пунктами разговора</a>, а также <a href="#Greeting">приветствием</a>.
<div class="spoiler"><input class="spoiler-checkbox" type="checkbox" id="spoiler2"/><div class="spoiler-scroll"><div class="spoiler-space"></div><div class="pre-spoiler"><span class="lua5-comment">--[[</span><br><span class="lua5-comment">This is the simplest quest example. Go to the Clan Leader's Hall in Dagger Wound to see it in action.</span><br><span class="lua5-comment">It utilises new NPCTopic function for more convenient creation of simple text-only topics.</span><br><span class="lua5-comment">It also uses new Quest function ability to automatically find free quest slot if the Slot parameter isn't specified.</span><br><span class="lua5-comment">Texts are set using SetTexts function to reduce indentation level.</span><br><span class="lua5-comment">--]]</span><br><br>QuestNPC <span class="lua5-note">=</span> <span class="lua5-literal">32</span> <span> </span><span class="lua5-comment">-- Frederick Talimere</span><br><br><span class="lua5-comment">-- another way to make a greeting</span><br>Greeting<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Hello, world!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Hi."</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- a simple text topic</span><br>NPCTopic<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Blah 1"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Blah Blah Blah"</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- a simple quest: require item #1 (Longsword), give 1000 exp, 1000 gold and an artifact hat</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"SimpleExampleQuest"</span>,<br><span class="lua5-tab">&#9;</span>QuestItem <span class="lua5-note">=</span> <span class="lua5-literal">1</span>, <span> </span><span class="lua5-comment">-- quest item index (Longsword)</span><br><span class="lua5-tab">&#9;</span>Gold <span class="lua5-note">=</span> <span class="lua5-literal">1000</span>, <span> </span><span class="lua5-comment">-- reward: gold</span><br><span class="lua5-tab">&#9;</span>Exp <span class="lua5-note">=</span> <span class="lua5-literal">1000</span>, <span> </span><span class="lua5-comment">-- reward: experience</span><br><span class="lua5-tab">&#9;</span>RewardItem <span class="lua5-note">=</span> <span class="lua5-literal">536</span>, <span> </span><span class="lua5-comment">-- reward: Lucky Hat</span><br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Quest"</span>,<br><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"I need a Longsword!"</span>,<br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"That's the sword I was looking for! Thank you! I have this hat and some gold coins for you!"</span>,<br><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"You don't have the sword yet?"</span>,<br><br><span class="lua5-tab">&#9;</span>After <span class="lua5-note">=</span> <span class="lua5-str">"Thank you for the sword!"</span>,<br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Quest <span class="lua5-note">=</span> <span class="lua5-str">"Bring a Longsword (the most basic of swords) to Frederick Talimere on Dagger Wound Islands."</span>,<br><span class="lua5-tab">&#9;</span>Award <span class="lua5-note">=</span> <span class="lua5-str">"Brought a sword to Frederick Talimere"</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- another simple text topic</span><br>NPCTopic<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Blah 2"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Second Blah Blah Blah!"</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">NPCTopic{topic, text} and Greeting{firstGreet, greet} functions just call Quest function with appropriate parameters.</span><br><span class="lua5-comment">You can specify any parameters you would normally pass to Quest function, like Slot, CanShow etc.</span><br><span class="lua5-comment">Note that if you pass a number as topic to NPCTopic function, it will set StdTopic to that number.</span><br><span class="lua5-comment">See Quest Example.lua for details on StdTopic and other parameters of Quest function.</span><br><br><br><span class="lua5-comment">The call of Greeting function in this script is equivalent to this:</span><br><span class="lua5-comment">Quest{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">Slot = -1,</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">Texts = {</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-comment">FirstGreet = "Hello, world!",</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-comment">Greet = "Hi.",</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">}</span><br><span class="lua5-comment">}</span><br><br><span class="lua5-comment">The first call of NPCTopic function is equivalent to this:</span><br><span class="lua5-comment">Quest{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">Texts = {</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-comment">Topic = "Blah 1",</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-comment">Ungive = "Blah Blah Blah",</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">}</span><br><span class="lua5-comment">}</span><br><span class="lua5-comment">]]</span></div></div><label class="spoiler-label" for="spoiler2"></label><span class="spoiler-fade"></span></div>
<b>Quest Example.lua</b>

содержит копию того же задания, и кое-что дополнительно: приветствие NPC зависит от <a href="#vars.Quests">состояния задания</a>, есть пункты диалога, показываемые при определённых условиях, один из которых &ndash; покупка предмета у NPC.
<div class="spoiler"><input class="spoiler-checkbox" type="checkbox" id="spoiler3"/><div class="spoiler-scroll"><div class="spoiler-space"></div><div class="pre-spoiler"><span class="lua5-note">local</span> A, B, C, D, E, F <span class="lua5-note">=</span> <span class="lua5-literal">0</span>, <span class="lua5-literal">1</span>, <span class="lua5-literal">2</span>, <span class="lua5-literal">3</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">5</span><br><span class="lua5-note">local</span> Q <span class="lua5-note">=</span> vars.Quests<br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">This is an example of a simple quest, dialog topics that depend on quest state and a 'sell item' topic.</span><br><span class="lua5-comment">Mostly it consists of texts rather than code. Go to the Clan Leader's Hall in Dagger Wound to see it in action.</span><br><span class="lua5-comment">It also demonstrates short functions syntax addon (see help for more info).</span><br><span class="lua5-comment">--]]</span><br><br>QuestNPC <span class="lua5-note">=</span> <span class="lua5-literal">1</span> <span> </span><span class="lua5-comment">-- The lizard in the tavern</span><br><br><span class="lua5-comment">-- a simple quest: require item #1 (Longsword), give 1000 exp, 1000 gold and an artifact hat</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"ExampleQuest"</span>, <span> </span><span class="lua5-comment">-- Same as: <span> </span>Name = "ExampleQuest",</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> A,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>FirstGreet <span class="lua5-note">=</span> <span class="lua5-str">"Hello, world!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Greet <span class="lua5-note">=</span> <span class="lua5-str">"Hi."</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Quest!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"I need a Longsword!"</span>,<br><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>GreetGiven <span class="lua5-note">=</span> <span class="lua5-str">"How's it going?"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- TopicGiven can be set as well, but I keep it at "Quest!" here</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"That's the sword I was looking for! Thank you! I have this hat and some gold coins for you!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"You don't have the sword yet?"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>GreetDone <span class="lua5-note">=</span> <span class="lua5-str">"Greetings to you, The Man Who Gave The Sword!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>TopicDone <span class="lua5-note">=</span> <span class="lua5-str">"Thanks!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>After <span class="lua5-note">=</span> <span class="lua5-str">"Thank you for the sword!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Quest <span class="lua5-note">=</span> <span class="lua5-str">"Bring a Longsword (the most basic of swords) to that lizard in the tavern of Dagger Wound Islands."</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Award <span class="lua5-note">=</span> <span class="lua5-str">"Brought a sword to a tavern-dwelling lizard"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-tab">&#9;</span>QuestItem <span class="lua5-note">=</span> <span class="lua5-literal">1</span>, <span> </span><span class="lua5-comment">-- quest item index (Longsword)</span><br><span class="lua5-tab">&#9;</span>Gold <span class="lua5-note">=</span> <span class="lua5-literal">1000</span>, <span> </span><span class="lua5-comment">-- reward: gold</span><br><span class="lua5-tab">&#9;</span>Exp <span class="lua5-note">=</span> <span class="lua5-literal">1000</span>, <span> </span><span class="lua5-comment">-- reward: experience</span><br><span class="lua5-tab">&#9;</span>RewardItem <span class="lua5-note">=</span> <span class="lua5-literal">536</span>, <span> </span><span class="lua5-comment">-- reward: Lucky Hat</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- this will hide the standard topic in slot B</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> B,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- this will hide the standard topic in slot C</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> C,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- this topic is shown only when the quest is taken</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> C,<br><span class="lua5-tab">&#9;</span>CanShow <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span><span class="lua5-ctrl">|</span> Q.ExampleQuest <span class="lua5-operator">==</span> <span class="lua5-str">"Given"</span>, <span> </span><span class="lua5-comment">-- a check that the quest is taken (short function!)</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- Short function syntax language extension translates this into:</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- CanShow = function()</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- <span class="lua5-tab">&#9;</span>return Q.ExampleQuest == "Given"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- end,</span><br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Reverse Engineering"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Ungive <span class="lua5-note">=</span> <span class="lua5-str">"If you bring me the sword, I can reverse-engineer it and make its copies. To tell you the truth, everything here is reverse-engineered."</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- this topic is shown only when the quest is done in place of the topic above (sell swords)</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> C,<br><span class="lua5-tab">&#9;</span>CanShow <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span><span class="lua5-ctrl">|</span> Q.ExampleQuest <span class="lua5-operator">==</span> <span class="lua5-str">"Done"</span>, <span> </span><span class="lua5-comment">-- a check that the quest is finished (short function!)</span><br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Buy Longsword for 50 gold"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"Here's a sword I made for you!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"No money - no Longsword, honey."</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-tab">&#9;</span>NeverGiven <span class="lua5-note">=</span> <span class="lua5-literal">true</span>, <span> </span><span class="lua5-comment">-- skip "Given" state, perform Done/Undone check immediately</span><br><span class="lua5-tab">&#9;</span>NeverDone <span class="lua5-note">=</span> <span class="lua5-literal">true</span>, <span> </span><span class="lua5-comment">-- sell any number of swords. This makes the quest completable mutiple times</span><br><span class="lua5-tab">&#9;</span>QuestGold <span class="lua5-note">=</span> <span class="lua5-literal">50</span>, <span> </span><span class="lua5-comment">-- pay: 50 gold</span><br><span class="lua5-tab">&#9;</span>RewardItem <span class="lua5-note">=</span> <span class="lua5-literal">1</span>, <span> </span><span class="lua5-comment">-- reward: Longsword</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">--[[</span><br><br><span class="lua5-comment">Other Quest properties:</span><br><span> </span><span class="lua5-comment">StdTopic <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- use the standard topic with specified number. For example, a trainer topic or "Join" topic.</span><br><span> </span><span class="lua5-comment">StdTopicGiven, StdTopicDone <span> </span>-- similarly, standard topics specific to Given and Done states.</span><br><span> </span><span class="lua5-comment">FirstStdTopic <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- standard topics specific to initial (ungiven) state.</span><br><span> </span><span class="lua5-comment">Quest <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- quest number in quests.txt, by default it's allocated automatically</span><br><span> </span><span class="lua5-comment">BaseName <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- for quests that require you to go from one NPC to another. Setting BaseName makes two quests share the same quest state defined by BaseName. See "Quest With 2 NPCs.lua".</span><br><span> </span><span class="lua5-comment">GivenState <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- by default it's "Given". This may be useful in a quest with many stages.</span><br><span> </span><span class="lua5-comment">DoneState <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- by default it's "Done". This may be useful in a quest with many stages.</span><br><br><span class="lua5-comment">If you don't pass Slot, any slot not occupied by an MMExt quest will be chosen. If you pass "same" as Slot value, the last used slot will be reused.</span><br><br><br><span class="lua5-comment">Localization:</span><br><span class="lua5-comment">To generate localization template for all scripts, press Ctrl+F1, write</span><br><span> </span><span class="lua5-comment">GenerateLocalization()</span><br><span class="lua5-comment">and press Ctrl+Enter. It will generate the following items in Scripts\Localization folder:</span><br><span> </span><span class="lua5-comment">Quests.txt <span> </span><span> </span>-- for quests</span><br><span> </span><span class="lua5-comment">Common.txt <span> </span><span> </span>-- for strings passed to LocalizeAll function</span><br><span> </span><span class="lua5-comment">Scripts.txt <span> </span>-- for strings passed to Localize function</span><br><span class="lua5-comment">These files should be edited with Txt Tables Editor from my site.</span><br><span class="lua5-comment">Alternatively, run GenerateLocalization(true) to generate *.lua localization files. Choose whichever format you prefer.</span><br><span class="lua5-comment">To generate localization for quests only you can use GenerateQuestsLocalization() instead of GenerateLocalization() command.</span><br><span class="lua5-comment">To generate localization excluding quests you can use GenerateLocalization(false, false) command.</span><br><span class="lua5-comment">Note that GenerateLocalization function assumes your scripts contain up to 1 use of LocalizeAll and up to 1 use of Localize function, both of which are at the beginning of the script.</span><br><br><span class="lua5-comment">To test localization changes without restarting the game you can create a script in Globals folder with this line:</span><br><span> </span><span class="lua5-comment">ReloadLocalization()</span><br><span class="lua5-comment">Then you'll only need to reload a saved game to refresh localization.</span><br><br><br><span class="lua5-comment">For more complex quests you can set up the following functions:</span><br><span class="lua5-comment">(here 't' is the table that you passed to the Quest function, it also has some new fields set by Quest function)</span><br><br><span class="lua5-comment">Checks (return value is interpreted as true or false):</span><br><span> </span><span class="lua5-comment">CanShow(t)</span><br><span> </span><span class="lua5-comment">CheckGive(t)</span><br><span> </span><span class="lua5-comment">CheckDone(t)</span><br><br><span class="lua5-comment">Called on corresponding events:</span><br><span> </span><span class="lua5-comment">Give(t)</span><br><span> </span><span class="lua5-comment">Ungive(t)</span><br><span> </span><span class="lua5-comment">Done(t)</span><br><span> </span><span class="lua5-comment">Undone(t)</span><br><br><span class="lua5-comment">For complete control - these will override default behavior:</span><br><span> </span><span class="lua5-comment">GetGreeting(t, NotFirstVisit)</span><br><span> </span><span class="lua5-comment">GetTopic(t)</span><br><span> </span><span class="lua5-comment">Execute(t)</span><br><span> </span><span class="lua5-comment">IsGiven(t)</span><br><br><span class="lua5-comment">GetGreeting and GetTopic functions return a string.</span><br><br><span class="lua5-comment">Note that you can also make custom quest states. Say, you have a quest called MyQuest. If you set vars.Quests.MyQuest = "MyState", Texts.TopicMyState (or StdTopicMyState) will be displayed. When you click it, Texts.MyState will be displayed and MyState function will be called.</span><br><br><span class="lua5-comment">]]</span><br></div></div><label class="spoiler-label" for="spoiler3"></label><span class="spoiler-fade"></span></div>
<b>Quest With 2 NPCs.lua</b> 

- это пример задания, для выполнения которого надо пойти к другому NPC.
<div class="spoiler"><input class="spoiler-checkbox" type="checkbox" id="spoiler4"/><div class="spoiler-scroll"><div class="spoiler-space"></div><div class="pre-spoiler"><span class="lua5-note">local</span> A, B, C, D, E, F <span class="lua5-note">=</span> <span class="lua5-literal">0</span>, <span class="lua5-literal">1</span>, <span class="lua5-literal">2</span>, <span class="lua5-literal">3</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">5</span><br><span class="lua5-note">local</span> Q <span class="lua5-note">=</span> vars.Quests<br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">This is an example of a quest that requires you to go from one NPC to another.</span><br><span class="lua5-comment">Also demonstrates usage of StdTopic to make NPC join the party.</span><br><span class="lua5-comment">Like in Quest Example.lua, short function syntax addon is utilized.</span><br><span class="lua5-comment">--]]</span><br><br><br>QuestNPC <span class="lua5-note">=</span> <span class="lua5-literal">1</span> <span> </span><span class="lua5-comment">-- The lizard in the tavern</span><br><br><span class="lua5-comment">-- quest start: take the quest in the tavern</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"PowerStone"</span>,<br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> D,<br><span class="lua5-tab">&#9;</span>GivenItem <span class="lua5-note">=</span> <span class="lua5-literal">617</span>, <span> </span><span class="lua5-comment">-- gives Power Stone upon giving the task</span><br><span class="lua5-tab">&#9;</span>CheckDone <span class="lua5-note">=</span> <span class="lua5-literal">false</span>, <span> </span><span class="lua5-comment">-- the quest can't be completed here</span><br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Frederick Talimere"</span>,<br><span class="lua5-tab">&#9;</span>TopicDone <span class="lua5-note">=</span> <span class="lua5-literal">false</span>, <span> </span><span class="lua5-comment">-- don't show if it's done</span><br><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"Show this stone to Frederick Talimere. He is an expert in these."</span>,<br><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"Frederick is obsessed with these stones. What a fool..."</span>,<br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Quest <span class="lua5-note">=</span> <span class="lua5-str">"Show a stone to Frederick Talimere in Dagger Wound Islands."</span>,<br><span class="lua5-ctrl">}</span><br><br><br><br>QuestNPC <span class="lua5-note">=</span> <span class="lua5-literal">32</span> <span> </span><span class="lua5-comment">-- Frederick Talimere</span><br><br><span class="lua5-comment">-- quest end: talk to Frederick to get the stone</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>BaseName <span class="lua5-note">=</span> <span class="lua5-str">"PowerStone"</span>,<br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> D,<br><span class="lua5-tab">&#9;</span>Exp <span class="lua5-note">=</span> <span class="lua5-literal">1000</span>, <span> </span><span class="lua5-comment">-- reward: experience</span><br><span class="lua5-tab">&#9;</span>QuestItem <span class="lua5-note">=</span> <span class="lua5-literal">617</span>, <span> </span><span class="lua5-comment">-- need Power Stone</span><br><span class="lua5-tab">&#9;</span>KeepQuestItem <span class="lua5-note">=</span> <span class="lua5-literal">true</span>, <span> </span><span class="lua5-comment">-- don't take power stone away</span><br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- no Topic - don't show the topic if the quest isn't taken</span><br><span class="lua5-tab">&#9;</span>TopicGiven <span class="lua5-note">=</span> <span class="lua5-str">"Power Stone"</span>,<br><span class="lua5-tab">&#9;</span>TopicDone <span class="lua5-note">=</span> <span class="lua5-str">"Power Stone"</span>,<br><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"Wow, this is a stone! I love stones!"</span>,<br><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"One lizard told me you have a stone, and so do I. Why don't you show me yours and I'll show you mine?"</span>,<br><span class="lua5-tab">&#9;</span>After <span class="lua5-note">=</span> <span class="lua5-str">"I have about 30 of these stones. You know what, let's go looking for stones together! But I need to get a sword first. Because who knows, we might meet some enemies on our way. With a sword in my hands I'll look more persuasive and will calm down any enemy. Trust me, negotiations are my thing!"</span>,<br><span class="lua5-tab">&#9;</span>Award <span class="lua5-note">=</span> <span class="lua5-str">"Showed a stone to Frederick Talimere"</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- show Join topic when both example quests are completed</span><br>Quest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> D,<br><span class="lua5-tab">&#9;</span>StdTopic <span class="lua5-note">=</span> <span class="lua5-literal">602</span>, <span> </span><span class="lua5-comment">-- Join topic of Frederick Talimere</span><br><span class="lua5-tab">&#9;</span>CanShow <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span><span class="lua5-ctrl">|</span> Q.PowerStone <span class="lua5-operator">==</span> <span class="lua5-str">"Done"</span> <span class="lua5-ctrl">and</span> Q.SimpleExampleQuest <span class="lua5-operator">==</span> <span class="lua5-str">"Done"</span>,<br><span class="lua5-ctrl">}</span><br></div></div><label class="spoiler-label" for="spoiler4"></label><span class="spoiler-fade"></span></div>
<b>Quest Alchemy.lua</b> 

- это пример задания, подобного стандартным "собери ингредиенты для зелья" с небольшой дополнительной фишкой.
<div class="spoiler"><input class="spoiler-checkbox" type="checkbox" id="spoiler5"/><div class="spoiler-scroll"><div class="spoiler-space"></div><div class="pre-spoiler"><span class="lua5-note">local</span> A, B, C, D, E, F <span class="lua5-note">=</span> <span class="lua5-literal">0</span>, <span class="lua5-literal">1</span>, <span class="lua5-literal">2</span>, <span class="lua5-literal">3</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">5</span><br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">This is an example of an alchemic quest like those seen in MM8. It works smarter by removing weaker ingredients first.</span><br><span class="lua5-comment">It replaces default quest of Thistle that normally makes a Potion of Pure Speed.</span><br><span class="lua5-comment">Like the example with 2 NPCs, it uses BaseName property to make a cross-topic quest easily.</span><br><span class="lua5-comment">Then there is some stuff just for fun: I reinitiate a conversation 2 minutes after the quest is completed and show some text.</span><br><span class="lua5-comment">--]]</span><br><br>QuestNPC <span class="lua5-note">=</span> <span class="lua5-literal">88</span> <span> </span><span class="lua5-comment">-- Thistle</span><br><br><br>Quest<span class="lua5-ctrl">{</span> <span> </span><span class="lua5-comment">-- Get quest</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"StreetAlchemy"</span>,<br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>FirstTopic <span class="lua5-note">=</span> <span class="lua5-str">"Street Alchemy"</span>, <span> </span><span class="lua5-comment">-- only show if it isn't given</span><br><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"Hey! Hey fellas! I'm chronicling a Street Alchemy special. You wanna see some alchemy?"</span>,<br><span class="lua5-tab">&#9;</span>Quest <span class="lua5-note">=</span> <span class="lua5-str">"Bring Thistle on the Dagger Wound Islands the basic ingredients for a Potion of Disappearance."</span>,<br><span class="lua5-ctrl">}</span><br><br><br>NPCTopic<span class="lua5-ctrl">{</span> <span> </span><span class="lua5-comment">-- Ingredients topic</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Ingredients"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Ultimate Potions are made of a complex blending of the three basic ingredients: Swords, Boots and Armor. Potion of Disappearance requires 6 Longswords, 2 pairs of boots and 2 leather armors."</span><br><span class="lua5-ctrl">}</span><br><br><br>Quest<span class="lua5-ctrl">{</span> <span> </span><span class="lua5-comment">-- Finish quest</span><br><span class="lua5-tab">&#9;</span>BaseName <span class="lua5-note">=</span> <span class="lua5-str">"StreetAlchemy"</span>,<br><span class="lua5-tab">&#9;</span>QuestItem <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">{</span><span class="lua5-literal">1</span>,<span class="lua5-literal">2</span>,<span class="lua5-literal">3</span>,<span class="lua5-literal">4</span>,<span class="lua5-literal">5</span>, Count <span class="lua5-note">=</span> <span class="lua5-literal">6</span><span class="lua5-ctrl">}</span>, <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- all kinds of Longswords, 6 in total</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">{</span><span class="lua5-literal">132</span>,<span class="lua5-literal">133</span>,<span class="lua5-literal">134</span>,<span class="lua5-literal">135</span>,<span class="lua5-literal">136</span>, Count <span class="lua5-note">=</span> <span class="lua5-literal">2</span><span class="lua5-ctrl">}</span>, <span> </span><span class="lua5-comment">-- all kinds of Boots, 2 in total</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">{</span><span class="lua5-literal">84</span>,<span class="lua5-literal">85</span>,<span class="lua5-literal">86</span>,<span class="lua5-literal">87</span>,<span class="lua5-literal">88</span>, Count <span class="lua5-note">=</span> <span class="lua5-literal">2</span><span class="lua5-ctrl">}</span>, <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">-- all kinds of Leather Armor, 2 in total</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-tab">&#9;</span>Exp <span class="lua5-note">=</span> <span class="lua5-literal">1000</span>,<br><span class="lua5-tab">&#9;</span>RewardItem <span class="lua5-note">=</span> <span class="lua5-literal">535</span>, <span> </span><span class="lua5-comment">-- Ring of Fusion</span><br><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">220</span>) <span> </span><span class="lua5-comment">-- add an empty bottle to make it appear as if it's the reward</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- now make him speak to us again after some time</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> npc <span class="lua5-note">=</span> QuestNPC <span> </span><span class="lua5-comment">-- QuestNPC is set to NPC being spoken to in a dialog</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Sleep(const.Minute<span class="lua5-operator">*</span><span class="lua5-literal">3</span>, <span class="lua5-literal">nil</span>, <span class="lua5-ctrl">{</span><span class="lua5-literal">0</span><span class="lua5-ctrl">}</span>) <span> </span><span class="lua5-comment">-- sleep for 3 minutes and only wake up when no dialog is active (hence, the 3rd parameter)</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.SpeakNPC(npc)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>TopicGiven <span class="lua5-note">=</span> <span class="lua5-str">"Do you have the Ingredients?"</span>, <span> </span><span class="lua5-comment">-- only show if it's given</span><br><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"Hey look, the Potion of Disappearance has disappeared! Take this empty bottle, it's yours now."</span>,<br><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"You are missing all or some of the needed ingredients. Remember, to make a Potion of Disappearance I need 6 Longswords, 2 pairs of boots and 2 leather armors."</span>,<br><span class="lua5-ctrl">}</span><br><br><br>Quest<span class="lua5-ctrl">{</span> <span> </span><span class="lua5-comment">-- Instead of Ingredients topic</span><br><span class="lua5-tab">&#9;</span>Slot <span class="lua5-note">=</span> B,<br><span class="lua5-tab">&#9;</span>CanShow <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>t<span class="lua5-ctrl">|</span> Game.CurrentScreen <span class="lua5-operator">~=</span> const.Screens.House, <span> </span><span class="lua5-comment">-- only show if NPC was met on the street</span><br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Greet <span class="lua5-note">=</span> <span class="lua5-str">"I think there's something in your backpack..."</span>,<br><span class="lua5-ctrl">}</span></div></div><label class="spoiler-label" for="spoiler5"></label><span class="spoiler-fade"></span></div>
<b>Quest Kill Monsters.lua</b> 

содержит 2 задания <a href="#KillMonstersQuest">"убить определённых монстров"</a> &ndash; MMExtension поддерживает такие задания "из коробки", так что Вам не придётся прописывать проверки убийства вручную во все задействованные карты.
<div class="spoiler"><input class="spoiler-checkbox" type="checkbox" id="spoiler6"/><div class="spoiler-scroll"><div class="spoiler-space"></div><div class="pre-spoiler"><span class="lua5-comment">--[[</span><br><span class="lua5-comment">These are 2 example quests that require killing multiple kinds of monsters.</span><br><span class="lua5-comment">Go to the Clan Leader's Hall in Dagger Wound to see the quests in action.</span><br><span class="lua5-comment">--]]</span><br><br>QuestNPC <span class="lua5-note">=</span> <span class="lua5-literal">182</span> <span> </span><span class="lua5-comment">-- Dirthic, an empty NPC in a house on an island</span><br><br>evt.MoveNPC(QuestNPC, <span class="lua5-literal">173</span>) <span> </span><span class="lua5-comment">-- move him to Clan Leader's Hall</span><br><br><br><span class="lua5-comment">-- Quest 1: Kill all pirates</span><br>KillMonstersQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- quest name is optional</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">{</span>Map <span class="lua5-note">=</span> <span class="lua5-str">"out01.odm"</span>, Monster <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><span class="lua5-literal">181</span>, <span class="lua5-literal">182</span>, <span class="lua5-literal">183</span><span class="lua5-ctrl">}</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Exp <span class="lua5-note">=</span> <span class="lua5-literal">2000</span>,<br><span class="lua5-tab">&#9;</span>Gold <span class="lua5-note">=</span> <span class="lua5-literal">2000</span>,<br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Greet <span class="lua5-note">=</span> <span class="lua5-str">"Hi there!"</span>,<br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Pirates!"</span>,<br><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"Kill all da Pirates on Dagger Wound Islands."</span>,<br><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"It's great that you've killed them! 2000 gold for you."</span>,<br><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"Just kill 'em, ok?"</span>,<br><span class="lua5-tab">&#9;</span>TopicDone <span class="lua5-note">=</span> <span class="lua5-literal">false</span>, <span> </span><span class="lua5-comment">-- hide the topic when the quest is completed</span><br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Quest <span class="lua5-note">=</span> <span class="lua5-str">"Kill all Pirates on Dagger Wound Islands. Return to Dirthic in Clan Leader's Hall."</span>,<br><span class="lua5-tab">&#9;</span>Award <span class="lua5-note">=</span> <span class="lua5-str">"Killed all da Pirates on Dagger Wound Islands"</span>,<br><span class="lua5-tab">&#9;</span>Killed <span class="lua5-note">=</span> <span class="lua5-str">"You have killed all Pirates!"</span>, <span> </span><span class="lua5-comment">-- completion message</span><br><span class="lua5-ctrl">}</span><br><br><br><span class="lua5-comment">-- Quest 2: Kill all creatures in Abandoned Temple</span><br>KillMonstersQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"ClearAbandonedTemple"</span>, <span> </span><span class="lua5-comment">-- quest name</span><br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">{</span>Map <span class="lua5-note">=</span> <span class="lua5-str">"d05.blv"</span>, Monster <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><span class="lua5-literal">7</span>, <span class="lua5-literal">8</span>, <span class="lua5-literal">9</span><span class="lua5-ctrl">}</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"You have killed all Couatls! Serpentmen are yet to be killed."</span>, <span> </span><span class="lua5-comment">-- partial completion message (optional)</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">{</span>Map <span class="lua5-note">=</span> <span class="lua5-str">"d05.blv"</span>, Monster <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><span class="lua5-literal">94</span>, <span class="lua5-literal">95</span>, <span class="lua5-literal">96</span><span class="lua5-ctrl">}</span><span class="lua5-ctrl">}</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"You have killed all Serpentmen! Some Couatls are alive."</span>, <span> </span><span class="lua5-comment">-- partial completion message (optional)</span><br><br><span class="lua5-tab">&#9;</span>Exp <span class="lua5-note">=</span> <span class="lua5-literal">5000</span>,<br><span class="lua5-tab">&#9;</span>Gold <span class="lua5-note">=</span> <span class="lua5-literal">5000</span>,<br><span class="lua5-ctrl">}</span><br>.SetTexts<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Snakes!"</span>,<br><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"Kill all of them creatures in Abandoned Temple."</span>,<br><span class="lua5-tab">&#9;</span>Done <span class="lua5-note">=</span> <span class="lua5-str">"It's great that you've killed them! 5000 gold for you."</span>,<br><span class="lua5-tab">&#9;</span>Undone <span class="lua5-note">=</span> <span class="lua5-str">"Just kill 'em, ok?"</span>,<br><span class="lua5-tab">&#9;</span>TopicDone <span class="lua5-note">=</span> <span class="lua5-literal">false</span>, <span> </span><span class="lua5-comment">-- hide the topic when the quest is completed</span><br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>Quest <span class="lua5-note">=</span> <span class="lua5-str">"Kill all creatures in Abandoned Temple. Return to Dirthic in Clan Leader's Hall."</span>,<br><span class="lua5-tab">&#9;</span>Award <span class="lua5-note">=</span> <span class="lua5-str">"Conducted a massacre in the Abandoned Temple"</span>,<br><span class="lua5-tab">&#9;</span>Killed <span class="lua5-note">=</span> <span class="lua5-str">"You have killed all Couatls and Serpentmen!"</span>, <span> </span><span class="lua5-comment">-- completion message</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">KillMonstersQuest function takes a list of tasks that it checks with CheckMonstersKilled.</span><br><span class="lua5-comment">Here are ways of using CheckMonstersKilled:</span><br><span> </span><span class="lua5-comment">CheckMonstersKilled{} <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- killed all monsters on the map?</span><br><span> </span><span class="lua5-comment">CheckMonstersKilled{Group = 1} <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- killed all monsters belonging to group 1?</span><br><span> </span><span class="lua5-comment">CheckMonstersKilled{Monster = 7} <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- killed all monsters of kind 7 (Young Couatl)?</span><br><span> </span><span class="lua5-comment">CheckMonstersKilled{NameId = 3} <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- killed all monsters with NameId = 3 in placemon.txt (Dragon Hunter Pet)?</span><br><span> </span><span class="lua5-comment">CheckMonstersKilled{MonsterIndex = 5} <span> </span>-- killed monster with index 5 in Map.Monsters array?</span><br><span class="lua5-comment">Instead of a single number you can pass a table with numbers, like I do in this example.</span><br><span class="lua5-comment">Additonal parameters:</span><br><span> </span><span class="lua5-comment">Count <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>-- need to kill at least this many monsters</span><br><span> </span><span class="lua5-comment">InvisibleAsDead <span> </span><span> </span>-- treat invisible (that is, currently disabled) monsters as dead when counting (MM8 only. 'true' by default)</span><br><br><span class="lua5-comment">MM6 currently isn't supported, because it doesn't have evt.CheckMonstersKilled command. InvisibleAsDead = false is only supported in MM8.</span><br><br><span class="lua5-comment">KillMonstersQuest tasks have an extra required Map parameter. A quest can span across multiple maps.</span><br><br><span class="lua5-comment">You can specify partial completion messages. They are placed after a group of tasks. For example:</span><br><span class="lua5-comment">{task1},</span><br><span class="lua5-comment">{task2},</span><br><span class="lua5-comment">{task3},</span><br><span class="lua5-comment">"first 3 tasks done",</span><br><span class="lua5-comment">{task4},</span><br><span class="lua5-comment">{task5},</span><br><span class="lua5-comment">"tasks 4 and 5 done",</span><br><span class="lua5-comment">{task6},</span><br><span class="lua5-comment">"task 6 done",</span><br><br><span class="lua5-comment">KillMonstersQuest adds completion messages to Texts under names Killed1, Killed2, Killed3 and so on, for localization.</span><br><br><span class="lua5-comment">KillMonstersQuest supports all parameters of Quest function. It sets Quest parameter to 'true' if it isn't specified.</span><br><span class="lua5-comment">]]</span></div></div><label class="spoiler-label" for="spoiler6"></label><span class="spoiler-fade"></span></div>
<b>Multilevel Quest.lua</b> 

создаёт сложный древовидный диалог, но код остаётся вполне элегантным. Используется функция <a href="#QuestBranch">QuestBranch</a>.
<div class="spoiler"><input class="spoiler-checkbox" type="checkbox" id="spoiler7"/><div class="spoiler-scroll"><div class="spoiler-space"></div><div class="pre-spoiler"><span class="lua5-note">local</span> A, B, C, D, E, F <span class="lua5-note">=</span> <span class="lua5-literal">0</span>, <span class="lua5-literal">1</span>, <span class="lua5-literal">2</span>, <span class="lua5-literal">3</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">5</span><br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">This example demonstrates a complex branched dialog.</span><br><span class="lua5-comment">It isn't too easy to understand, but it's elegant.</span><br><span class="lua5-comment">It also shows how you can have item name as topic name and some other bells and whistles.</span><br><span class="lua5-comment">Go to the Clan Leader's Hall in Dagger Wound to see it in action.</span><br><span class="lua5-comment">--]]</span><br><br><span class="lua5-note">local</span> MyNPC <span class="lua5-note">=</span> <span class="lua5-literal">2</span> <span> </span><span class="lua5-comment">-- Dadeross in the lizards tavern</span><br><br><span class="lua5-comment">-- For fun: play sound when entering the conversation</span><br><span class="lua5-ctrl">function</span> events.EnterNPC(npc)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> npc <span class="lua5-operator">==</span> MyNPC <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.PlaySound(<span class="lua5-literal">130</span>) <span> </span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> SetBranch(t)<br><span class="lua5-tab">&#9;</span>QuestBranch(t.NewBranch)<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> ItemTopic(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- return 'false' if the quest is given, which means the item is given away</span><br><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> <span class="lua5-ctrl">not</span> vars.Quests[t.Name] <span class="lua5-ctrl">and</span> Game.ItemsTxt[t.MyItem].Name<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> GiveItem(t)<br><span class="lua5-tab">&#9;</span>evt.ForPlayer().Add(<span class="lua5-str">"Inventory"</span>, t.MyItem) <span> </span><span class="lua5-comment">-- give item</span><br><span class="lua5-tab">&#9;</span><span class="lua5-comment">-- Game.PlaySound(205) <span> </span>-- make only sound</span><br><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Experience"</span>, <span class="lua5-literal">0</span>) <span> </span><span class="lua5-comment">-- make sound and animation</span><br><span class="lua5-tab">&#9;</span>evt.FaceAnimation(Game.CurrentPlayer, const.FaceAnimation.SmileHuge) <span> </span><span class="lua5-comment">-- a happy face</span><br><span class="lua5-tab">&#9;</span>QuestBranch(<span class="lua5-str">"Thanks"</span>)<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-comment">-- sipmlify similar quests creation</span><br><span class="lua5-note">local</span> QuestBase <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> MyQuest(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-std">table</span>.copy(QuestBase, t) <span> </span><span class="lua5-comment">-- copy common values</span><br><span class="lua5-tab">&#9;</span>QuestBase.Slot <span class="lua5-note">=</span> QuestBase.Slot <span class="lua5-ctrl">and</span> QuestBase.Slot <span class="lua5-operator">+</span> <span class="lua5-literal">1</span> <span> </span><span class="lua5-comment">-- auto-increment Slot</span><br><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> Quest(t)<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">Now, let's get to the quests themselves.</span><br><br><span class="lua5-comment">Dialog structure:</span><br><br><span class="lua5-comment">- Weapons</span><br><span> </span><span> </span><span class="lua5-comment">- Swords</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Sword 1</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Sword 2</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Sword 3</span><br><span> </span><span> </span><span class="lua5-comment">- Daggers</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Dagger 1</span><br><span> </span><span> </span><span class="lua5-comment">- Axes</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Axe 1</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Axe 2</span><br><span> </span><span> </span><span> </span><span> </span><span class="lua5-comment">- Axe 3</span><br><span> </span><span> </span><span class="lua5-comment">- Blasters</span><br><span class="lua5-comment">- Magic</span><br><span> </span><span> </span><span class="lua5-comment">- Book 1</span><br><span> </span><span> </span><span class="lua5-comment">- Book 2</span><br><span> </span><span> </span><span class="lua5-comment">- Book 3</span><br><span> </span><span> </span><span class="lua5-comment">- Book 4</span><br><span class="lua5-comment">- Dadeross' Letter to Fellmoon</span><br><span class="lua5-comment">- Certificate of Authentication (for Axe of Balthazar)</span><br><span class="lua5-comment">(+ Thanks screen)</span><br><span class="lua5-comment">]]</span><br><br>QuestNPC <span class="lua5-note">=</span> MyNPC<br><br><span class="lua5-comment">-- greeting</span><br><br>Greeting<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-str">"I'm placed here to give you free stuff."</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Please choose your free stuff."</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- default topics</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span>Slot <span class="lua5-note">=</span> A<span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- get rid of standard topics of this NPC</span><br>MyQuest<span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br><span class="lua5-comment">-- A topic that's shown when there are no items left. This one is a bit hackish.</span><br><span class="lua5-comment">-- Since the quest-matching function goes from slot A to slot F, by the time it</span><br><span class="lua5-comment">-- asks for topic in slot F it has done all other slots. So, I check that these</span><br><span class="lua5-comment">-- slots have no topics and then enable the topic of this slot</span><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Ungive <span class="lua5-note">=</span> SetBranch,<br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">""</span>,<br><span class="lua5-tab">&#9;</span>GetTopic <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i <span class="lua5-note">=</span> <span class="lua5-literal">0</span>, <span class="lua5-literal">4</span> <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> Game.NPC[MyNPC].Events[i] <span class="lua5-operator">~=</span> <span class="lua5-literal">0</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> t.Texts.Topic<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Sorry, I don't have any of these"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Ungive <span class="lua5-note">=</span> <span class="lua5-str">"Sorry, I don't have any of these. Maybe you want something else?"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- base branch topics</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">""</span>, Slot <span class="lua5-note">=</span> A, Ungive <span class="lua5-note">=</span> SetBranch<span class="lua5-ctrl">}</span><br><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">"Weapons"</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Weapons"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Ungive <span class="lua5-note">=</span> <span class="lua5-str">"Choose which you prefer."</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">"Magic"</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Magic"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Ungive <span class="lua5-note">=</span> <span class="lua5-str">"I have a few books."</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Weapons branch</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">"Weapons"</span>, Slot <span class="lua5-note">=</span> A, Ungive <span class="lua5-note">=</span> SetBranch<span class="lua5-ctrl">}</span><br><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">"Swords"</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Swords"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">"Daggers"</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Daggers"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">"Axes"</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Axes"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">"Blasters"</span>,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Topic <span class="lua5-note">=</span> <span class="lua5-str">"Blasters"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Swords branch</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">"Swords"</span>, Slot <span class="lua5-note">=</span> A,<br><span class="lua5-tab">&#9;</span>GetTopic <span class="lua5-note">=</span> ItemTopic,<br><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> GiveItem,<br><span class="lua5-tab">&#9;</span>Texts <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Give <span class="lua5-note">=</span> <span class="lua5-str">"Use it well!"</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">}</span><br><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">1</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">10</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">502</span><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Daggers branch</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-std">table</span>.copy(QuestBase, <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">"Daggers"</span>, Slot <span class="lua5-note">=</span> A,<br><span class="lua5-ctrl">}</span>)<br><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">508</span><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Axes branch</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-std">table</span>.copy(QuestBase, <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">"Axes"</span>, Slot <span class="lua5-note">=</span> A,<br><span class="lua5-ctrl">}</span>)<br><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">34</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">37</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">541</span><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Magic branch</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-std">table</span>.copy(QuestBase, <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">"Magic"</span>, Slot <span class="lua5-note">=</span> A,<br><span class="lua5-ctrl">}</span>)<br><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">460</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">430</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">444</span><span class="lua5-ctrl">}</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">404</span><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Letter and Certificate of Authentication items in main branch</span><br><br>QuestBase <span class="lua5-note">=</span> <span class="lua5-std">table</span>.copy(QuestBase, <span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">""</span>, Slot <span class="lua5-note">=</span> C,<br><span class="lua5-ctrl">}</span>)<br><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">741</span><span class="lua5-ctrl">}</span> <span> </span><span class="lua5-comment">-- Dadeross' Letter to Fellmoon</span><br>MyQuest<span class="lua5-ctrl">{</span>MyItem <span class="lua5-note">=</span> <span class="lua5-literal">732</span>, <span> </span><span class="lua5-comment">-- Certificate of Authentication</span><br><span class="lua5-tab">&#9;</span>CanShow <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> evt.All.Cmp(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">541</span>) <span> </span><span class="lua5-comment">-- check for Axe of Balthazar</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">-- Thanks branch</span><br><br>NPCTopic<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>Branch <span class="lua5-note">=</span> <span class="lua5-str">"Thanks"</span>, Slot <span class="lua5-note">=</span> A,<br><span class="lua5-tab">&#9;</span>Ungive <span class="lua5-note">=</span> SetBranch,<br><span class="lua5-tab">&#9;</span>NewBranch <span class="lua5-note">=</span> <span class="lua5-str">""</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Thanks!"</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">"Maybe you want something else?"</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-comment">--[[</span><br><span class="lua5-comment">Here's how dialog branches work:</span><br><br><span class="lua5-comment">A quest with Branch field is only shown if that's the current branch.</span><br><br><span class="lua5-comment">Current branch can be set with QuestBranch function:</span><br><span> </span><span class="lua5-comment">QuestBranch("BranchName")</span><br><span class="lua5-comment">You can also make the branch persist after you reenter NPC dialog:</span><br><span> </span><span class="lua5-comment">QuestBranch("BranchName", true)</span><br><span class="lua5-comment">Or you can obtain current branch:</span><br><span> </span><span class="lua5-comment">local branch = QuestBranch()</span><br><br><span class="lua5-comment">If there is no persisted branch name, when you enter NPC dialog the branch is set to "".</span><br><br><span class="lua5-comment">Branches support is really simple. Previous version of this example implemented it manually.</span><br><span class="lua5-comment">]]</span></div></div><label class="spoiler-label" for="spoiler7"></label><span class="spoiler-fade"></span></div>

В MM7 часть примеров тоже будет работать, если Вы найдёте персонажей, к которыми они применяются. Что касается MM6, в нём нет приветствий персонажей и всего 3 пункта диалога, плюс 2 исключительно текстовых пункта. Первый пример задания на нём должен работать.
<br>
<br>


<a id="Autonotes"></a><h3>Автозаметки</h3>

Чтобы избежать проблем с индексами и лимитом автозаметок, используйте функции <a href="#Autonote">Autonote</a> и <a href="#AddAutonote">AddAutonote</a> для новых автозаметок.
<br>
<br>
Пример:
<br>
<b>Maps\out01.global.lua:</b>
<div class="pre-outer"><div class="pre">Autonote(<span class="lua5-str">'hi'</span>, <span class="lua5-literal">1</span>, <span class="lua5-str">'Welcome to out01!'</span>)</div></div>
<b>Maps\out01.lua:</b>
<div class="pre-outer"><div class="pre"><span class="lua5-note">local</span> TXT <span class="lua5-note">=</span> Localize<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>AutonoteMessage <span class="lua5-note">=</span> <span class="lua5-str">"Check Auto Notes, it's extremely important!"</span>,<br><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">if</span> <span class="lua5-ctrl">not</span> CheckAutonote<span class="lua5-str">'hi'</span> <span class="lua5-ctrl">then</span> <span> </span><span class="lua5-comment">-- just to demonstrate use of CheckLocalAutonote</span><br><span class="lua5-tab">&#9;</span>Game.ShowStatusText(TXT.AutonoteMessage)<br><span class="lua5-ctrl">end</span><br>AddAutonote<span class="lua5-str">'hi'</span></div></div>
<br>

Добавленные таким образом автозаметки автоматически локализуемы. По умолчанию, автозаметки локальны по отношению к скрипту, чтобы избежать конфликтов имён. Для автозаметок, используемых несколькими скриптами, используйте ":" в начале их имени (например ":hi").
<br>
<br>


<a id="Localization"></a><h3>Локализация</h3>

Чтобы сделать скрипт локализуемым, Вы должны в нём вызвать функцию <a href="#Localize">Localize</a>, передав ей таблицу со строками по умолчанию. Она вернёт таблицу с локализованными строками. См.  
<a href="#LocalizeScriptExample">предыдущий пример</a>.<br>



Для общих строк, используемых несколькими скриптами, используйте функцию <a href="#LocalizeAll">LocalizeAll</a>. Она работает так же, но Вам не потребуется возвращаемая ей таблица. Таблица, возвращаемая <a href="#Localize">Localize</a>, автоматически берёт отсутствующие строки из таблицы общих строк.<br>
Вообще, таблицы локализации могут содержать любые значения, а не только строки. В том числе, подтаблицы.<br>
Задания локализуются автоматически.
<br>
<br>

Локализация максимально автоматизирована. Функция <a href="#GenerateLocalization">GenerateLocalization()</a> автоматически извлекает информацию о локализации из всех скриптов и генерирует файлы локализации. Она накладывает ограничения на скрипты в папках <b>Maps</b> и <b>Modules</b>. Эти скрипты не должны ничего делать до вызова функций <a href="#Localize">Localize</a> и/или <a href="#LocalizeAll">LocalizeAll</a>. К тому же, каждую функцию они должны вызывать только 1 раз, иначе строки, переданные в последующих вызовах, могут быть проигнорированы.
<br>

Чтобы сгенерировать файлы локализации для всех скриптов, загрузите любую игру, нажмите Ctrl+F1, напишите <b>GenerateLocalization()</b> и нажмите Ctrl+Enter. В папке <b>Scripts\Localization</b> будут созданы следующие файлы:
<table class="table">
<tbody>
	<tr><td><i>&nbsp;Файл</i></td><td><i>&nbsp;Описание</i></td></tr>
	<tr><td>Quests.txt</td><td>Локализация заданий.</td></tr>
	<tr><td>Common.txt</td><td>Строки, переданные в функцию <a href="#LocalizeAll">LocalizeAll</a>.</td></tr>
	<tr><td>Scripts.txt</td><td>Строки, переданные в функцию <a href="#Localize">Localize</a>.</td></tr>
</tbody>
</table>
 Для редактирования этих файлов используйте <a href="https://grayface.github.io/mm/#Txt-Edit">Txt Tables Editor</a>.<br>

 Или же можно запустить команду <b>GenerateLocalization(true)</b>, чтобы сгенерировать файлы локализации <b class="def-param">*.lua</b>. Выбирайте тот формат, который Вам удобнее.<br>

 Чтобы сгенерировать локализацию только для заданий, можно использовать команду <a href="#GenerateQuestsLocalization">GenerateQuestsLocalization()</a>.<br>
Чтобы сгенерировать локализацию для всего, кроме заданий, можно использовать команду <b>GenerateLocalization(false, false)</b>.
<br>
<br>

 Чтобы тестировать изменения локализации без перезапуска игры, можно создать скрит в папке <b>Global</b> со следующей строкой:
<br>
<div class="pre-outer"><div class="pre">ReloadLocalization()</div></div>

 После этого для для тестирования изменений локализации достаточно будет перезагрузить сохраненную игру.
<br>
<br>

<a id="Special-Codes-in-Texts"></a><h3>Особые коды в сообщениях</h3>
В любом тексте можно использовать особые коды, создаваемые функциями <a href="#StrLeft">StrLeft</a>, <a href="#StrRight">StrRight</a> и <a href="#StrColor">StrColor</a>.<br>
В сообщениях NPC и в файле History.txt также используется следующий набор особых кодов:
<table class="table">
<tbody>
<tr><th><i>Строка</i></th><th><i>Значение</i></th></tr>
<tr><td>%01 </td><td>NPC name</td></tr>
<tr><td>%02 </td><td>Current player name</td></tr>
<tr><td>%03 </td><td>"his"/"her" (depending on NPC sex)</td></tr>
<tr><td>%04 </td><td>Bribe cost</td></tr>
<tr><td>%05 </td><td>"day"/"evening"/"morning"</td></tr>
<tr><td>%06 </td><td>"lady"/"sir" (depending on sex of current player)</td></tr>
<tr><td>%07 </td><td>"Lady"/"Sir" (depending on sex of current player)</td></tr>
<tr><td>%08 </td><td>Random achieved award from a hardcoded list</td></tr>
<tr><td>%09 </td><td>Same as %03</td></tr>
<tr><td>%10 </td><td>"Lady"/"Lord" (depending on sex of current player)</td></tr>
<tr><td>%11 </td><td>Reputation category of the party</td></tr>
<tr><td>%12 </td><td>Reputation category required by the NPC</td></tr>
<tr><td>%13 </td><td>Any name starting with the same letter as that of current player</td></tr>
<tr><td>%14 </td><td>"sister"/"brother" (depending on NPC sex)</td></tr>
<tr><td>%15 </td><td>"daughter"</td></tr>
<tr><td>%16 </td><td>Same as %14</td></tr>
<tr><td>%17 </td><td>Gold percentage an NPC takes</td></tr>
<tr><td>%23 </td><td>Map name</td></tr>
<tr><td>%24 </td><td>Item name (in yellow color)</td></tr>
<tr><td>%25 </td><td>Standard buy/sell/repair cost</td></tr>
<tr><td>%27 </td><td>Actual buy/sell/repair cost with regards to Merchant skill</td></tr>
<tr><td>%28 </td><td>Shop owner title</td></tr>
<tr><td>%29 </td><td>Identification price</td></tr>
<tr><th colspan="2"><i>MM7, MM8:</i></th></tr>
<tr><td>%30 </td><td>History entry date</td></tr>
<tr><td>%31 </td><td>Player 1 name</td></tr>
<tr><td>%51 &ndash; %70 </td><td><a href="#structs.GameParty.SpecialDates">Special date</a></td></tr>
<tr><th colspan="2"><i>MM7:</i></th></tr>
<tr><td>%32 </td><td>Player 2 name</td></tr>
<tr><td>%33 </td><td>Player 3 name</td></tr>
<tr><td>%34 </td><td>Player 4 name</td></tr>
<tr><th colspan="2"><i>MM8:</i></th></tr>
<tr><td>%32 </td><td>"his"/"her" (depending on player 1 sex)</td></tr>
<tr><td>%33 </td><td>"he"/"she" (depending on player 1 sex)</td></tr>
<tr><td>%34 </td><td>"him"/"her" (depending on player 1 sex)</td></tr>
</tbody>
</table>
<br>

<a id="More-on-Data-Tables"></a><h3>Ещё о Data\Tables</h3>

Папка Data\Tables &ndash; это отличный инструмент при разработке мода, но простое распространение её с большим модом может вызвать сложности при последующем создании меньших модов для него, поскольку любое обновление большого мода их перезапишет.
<br>

Во-первых, я советую настроить чтение таблиц, по которым не генерируются файлы *.bin, из LOD-архива мода, если он большой. Это позволит другим модам их перекрывать более безопасно. Вот пример, как это сделать (для Scripts\General):
<div class="pre-outer"><div class="pre"><span class="lua5-std">table</span>.copy(<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'Chest'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Chest.txt'</span>,<br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'Class HP SP'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'ClsHPSP.txt'</span>,<br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'Class Skills'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'ClsSkill.txt'</span>,<br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'Class Starting Skills'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'ClsSkilB.txt'</span>,<br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'Class Starting Stats'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'ClsStats.txt'</span>,<br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'House Movies'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'HouseMov.txt'</span>,<br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'Monster Kinds'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'MonKind.txt'</span>,<br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'Spells2'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Spells2.txt'</span>,<br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'Town Portal'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'TownPort.txt'</span>,<br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'Transport Index'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'TripIdx.txt'</span>,<br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'Transport Locations'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'TripLoc.txt'</span>,<br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'Shops'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Shops.txt'</span>,<br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'Faces'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Faces.txt'</span>,<br><span class="lua5-tab">&#9;</span>[<span class="lua5-str">'Face Animations'</span>] <span class="lua5-note">=</span> <span class="lua5-str">'FaceAnim.txt'</span>,<br><span class="lua5-ctrl">}</span>, DataTables.Files, <span class="lua5-literal">true</span>)<br><span class="lua5-comment">-- DataTables.LazyMode = true <span> </span>-- see below for an explanation</span></div></div>

Можно таким же образом отключить любую таблицу, присвоив ей здесь пустую строку.
<br>

Во-вторых, для таблиц, которые генерируют файлы *.bin, есть 2	пути:
<list>
	<li>
	Распространять папку Data\Tables с ними вместе с модом. Также хорошей практикой является включение в мод папки DataFiles с соответствующими файлами *.bin. Это приведёт к описанной проблеме с меньшими модами, но Вам не обязательно будет создавать инсталлятор для мода.</li>
	<li>
	Распространять сгенерированные файлы *.bin в LOD-архиве мода и включить <span class="def-code">DataTables.LazyMode <span class="lua5-note">=</span> <span class="lua5-literal">true</span></span> &ndash; она делает так, что таблицы из Data\Tables читаются, если они есть, но не генерируются автоматически (их можно сгенерировать, вызвав <span class="def-code">UpdateDataTables()</span>). Вам также надо будет перенести или удалить существующие папки Data\Tables и DataFiles при первой установке мода, поскольку файлы в них будут иметь приоритет над файлами мода.</li>
</list>
<br>
<br>

<br>
<hr>
<a id="Examples"></a><h2>Примеры</h2>

Вы найдёте больше примеров в <a href="http://www.celestialheavens.com/forums/viewtopic.php?t=10423">теме для обсуждения MMExtension</a>.

<a id="Players-Skills-And-Spells"></a><h3>Умения и заклинания игроков</h3>

Здесь есть кое-какие скрипты, показывающие, как можно работать с умениями и заклинаниями. Скопируйте приглянувшийся скрипт в отладочную консоль, чтобы протестировать его.<br>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- learn all spells</span><br><span class="lua5-ctrl">for</span> _, pl <span class="lua5-ctrl">in</span> Party <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i <span class="lua5-ctrl">in</span> pl.Spells <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>pl.Spells[i] <span class="lua5-note">=</span> <span class="lua5-literal">true</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- give Expert Perception for all players</span><br><span class="lua5-ctrl">for</span> _, pl <span class="lua5-ctrl">in</span> Party <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> skill, mastery <span class="lua5-note">=</span> SplitSkill(pl.Skills[const.Skills.Perception])<br><span class="lua5-tab">&#9;</span>pl.Skills[const.Skills.Perception] <span class="lua5-note">=</span> JoinSkill(<span class="lua5-std">math</span>.<span class="lua5-std">max</span>(skill, <span class="lua5-literal">4</span>), <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(mastery, const.Expert))<br><span class="lua5-ctrl">end</span></div></div>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- get all skills at Master 12</span><br><span class="lua5-ctrl">for</span> _, pl <span class="lua5-ctrl">in</span> Party <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i, val <span class="lua5-ctrl">in</span> pl.Skills <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> skill, mastery <span class="lua5-note">=</span> SplitSkill(val)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>pl.Skills[i] <span class="lua5-note">=</span> JoinSkill(<span class="lua5-std">math</span>.<span class="lua5-std">max</span>(skill, <span class="lua5-literal">12</span>), <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(mastery, const.Master))<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- get all learned skills to Master 12</span><br><span class="lua5-ctrl">for</span> _, pl <span class="lua5-ctrl">in</span> Party <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i, val <span class="lua5-ctrl">in</span> pl.Skills <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> val <span class="lua5-operator">~=</span> <span class="lua5-literal">0</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> skill, mastery <span class="lua5-note">=</span> SplitSkill(val)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>pl.Skills[i] <span class="lua5-note">=</span> JoinSkill(<span class="lua5-std">math</span>.<span class="lua5-std">max</span>(skill, <span class="lua5-literal">12</span>), <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(mastery, const.Master))<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- learn all available skills at Expert</span><br><span class="lua5-ctrl">for</span> _, pl <span class="lua5-ctrl">in</span> Party <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i, learn <span class="lua5-ctrl">in</span> EnumAvailableSkills(pl.Class) <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> learn <span class="lua5-operator">&gt;=</span> const.Expert <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> skill, mastery <span class="lua5-note">=</span> SplitSkill(pl.Skills[i])<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>skill <span class="lua5-note">=</span> <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(skill, <span class="lua5-literal">4</span>) <span> </span><span class="lua5-comment">-- learn at least level 4</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mastery <span class="lua5-note">=</span> <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(mastery, const.Expert) <span> </span><span class="lua5-comment">-- learn the mastery</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>pl.Skills[i] <span class="lua5-note">=</span> JoinSkill(skill, mastery)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- learn all available skills at their maximum level</span><br><span class="lua5-note">local</span> LearnLevel <span class="lua5-note">=</span> (Game.Version <span class="lua5-operator">&gt;</span> <span class="lua5-literal">6</span> <span class="lua5-ctrl">and</span> <span class="lua5-ctrl">{</span><span class="lua5-literal">1</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">7</span>, <span class="lua5-literal">10</span><span class="lua5-ctrl">}</span> <span class="lua5-ctrl">or</span> <span class="lua5-ctrl">{</span><span class="lua5-literal">1</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">12</span><span class="lua5-ctrl">}</span>)<br><br><span class="lua5-ctrl">for</span> _, pl <span class="lua5-ctrl">in</span> Party <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i, learn <span class="lua5-ctrl">in</span> EnumAvailableSkills(pl.Class) <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> skill, mastery <span class="lua5-note">=</span> SplitSkill(pl.Skills[i])<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>skill <span class="lua5-note">=</span> <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(skill, LearnLevel[learn]) <span> </span><span class="lua5-comment">-- learn at least the usual needed level</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mastery <span class="lua5-note">=</span> <span class="lua5-std">math</span>.<span class="lua5-std">max</span>(mastery, learn) <span> </span><span class="lua5-comment">-- learn the mastery</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>pl.Skills[i] <span class="lua5-note">=</span> JoinSkill(skill, mastery)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

<a id="Artifact-Bonuses"></a><h3>Бонусы артефактов</h3>

Дать кожаным доспехам Харека бонус 'Магии Земли'. (не тестированный код)
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> events.CalcStatBonusByItems(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> t.Stat <span class="lua5-operator">~=</span> const.Stats.EarthMagic <span class="lua5-ctrl">or</span> t.Player.Skills[const.Skills.EarthMagic] <span class="lua5-operator">==</span> <span class="lua5-literal">0</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> item, slot <span class="lua5-ctrl">in</span> t.Player:EnumActiveItems() <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> item.Number <span class="lua5-operator">==</span> <span class="lua5-literal">516</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t:SetMagicBonus(SplitSkill(t.Player.Skills[const.Skill.EarthMagic]):div(<span class="lua5-literal">2</span>))<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

Дать кожаным доспехам Харека бонус 'Оружейник + 8'. (не тестированный код)
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> events.CalcStatBonusByItems(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> t.Stat <span class="lua5-operator">~=</span> const.Stats.Armsmaster <span class="lua5-ctrl">or</span> t.Player.Skills[const.Skills.Armsmaster] <span class="lua5-operator">==</span> <span class="lua5-literal">0</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> item, slot <span class="lua5-ctrl">in</span> t.Player:EnumActiveItems() <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> item.Number <span class="lua5-operator">==</span> <span class="lua5-literal">516</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t:SetArtifactBonus(<span class="lua5-literal">8</span>)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>
Вопрос: Возможно ли изменить силу усилений предметов? Например, чтобы предметы со свойством 'Богов' давали +30 к статистикам вместо +10?<br>
Ответ: (не тестированный код)
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> events.CalcStatBonusByItems(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> t.Stat <span class="lua5-operator">&gt;=</span> const.Stats.Might <span class="lua5-ctrl">and</span> t.Stat <span class="lua5-operator">&lt;=</span> const.Stats.Luck <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> it <span class="lua5-ctrl">in</span> t.Player:EnumActiveItems() <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> it.Bonus2 <span class="lua5-operator">==</span> <span class="lua5-literal">2</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t.Result <span class="lua5-note">=</span> t.Result <span class="lua5-operator">+</span> <span class="lua5-literal">20</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

<a id="Skill-Bonuses"></a><h3>Бонусы умений</h3>

Сделать, чтобы Гранд топора добавлял +2 повреждения за очко умения вместо +1:
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> events.CalcStatBonusBySkills(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> t.Result <span class="lua5-operator">~=</span> <span class="lua5-literal">0</span> <span class="lua5-ctrl">and</span> t.Stat <span class="lua5-operator">==</span> const.Stats.MeleeDamageBase <span class="lua5-ctrl">then</span> <span> </span><span class="lua5-comment">-- t.Result ~= 0 is for speedup</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> sk, mas <span class="lua5-note">=</span> SplitSkill(t.Player.Skills[const.Skills.Dagger])<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> mas <span class="lua5-operator">&gt;=</span> const.GM <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> it <span class="lua5-note">=</span> t.Player:GetActiveItem(const.ItemSlot.MainHand)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> it <span class="lua5-ctrl">and</span> it:T().Skill <span class="lua5-operator">==</span> const.Skills.Dagger <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t.Result <span class="lua5-note">=</span> t.Result <span class="lua5-operator">+</span> sk<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>


<a id="Spells-Damage"></a><h3>Урон заклинания</h3>

Изменить урон заклинания №2 &ndash; Стрела пламени. Также можно сделать его зависящим от мастерства <b class="def-param">t.Mastery</b> в магии и здоровья <b class="def-param">t.HP</b> монстра.
<div class="pre-outer"><div class="pre"><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> Randoms(<span class="lua5-std">min</span>, <span class="lua5-std">max</span>, count)<br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> r <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i <span class="lua5-note">=</span> <span class="lua5-literal">1</span>, count <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>r <span class="lua5-note">=</span> r <span class="lua5-operator">+</span> <span class="lua5-std">math</span>.<span class="lua5-std">random</span>(<span class="lua5-std">min</span>, <span class="lua5-std">max</span>)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-note">return</span> r<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-ctrl">function</span> events.CalcSpellDamage(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> t.Spell <span class="lua5-operator">==</span> <span class="lua5-literal">2</span> <span class="lua5-ctrl">then</span> <span> </span><span class="lua5-comment">-- Flame Arrow</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t.Result <span class="lua5-note">=</span> <span class="lua5-literal">100</span> <span class="lua5-operator">+</span> Randoms(<span class="lua5-literal">1</span>, <span class="lua5-literal">100</span>, t.Skill) <span> </span><span class="lua5-comment">-- 100 + (1-100) per skill level</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

<a id="Controlling-monsters-aggression-in-MM6"></a><h3>Управление агрессией монстров в MM6</h3>

Положите этот скрипт в папку <b>Scripts\Global</b>. Это делает лучников в Свободной гавани дружественными, а крестьян &ndash; агрессивными. В других местах лучники будут по-прежнему агрессивными, а крестьяне &ndash; дружелюбными.
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> events.BeforeLoadMap() <br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> Game.Map.Name <span class="lua5-operator">==</span> <span class="lua5-str">"outc2.odm"</span> <span class="lua5-ctrl">then</span> <br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>LocalMonstersTxt()<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.MonstersTxt[<span class="lua5-literal">1</span>].HostileType <span class="lua5-note">=</span> <span class="lua5-literal">0</span> <span> </span><span class="lua5-comment">-- ArcherA </span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.MonstersTxt[<span class="lua5-literal">2</span>].HostileType <span class="lua5-note">=</span> <span class="lua5-literal">0</span> <span> </span><span class="lua5-comment">-- ArcherB </span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.MonstersTxt[<span class="lua5-literal">3</span>].HostileType <span class="lua5-note">=</span> <span class="lua5-literal">0</span> <span> </span><span class="lua5-comment">-- ArcherC </span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.MonstersTxt[<span class="lua5-literal">121</span>].HostileType <span class="lua5-note">=</span> <span class="lua5-literal">4</span> <span> </span><span class="lua5-comment">-- PeasantF1A </span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.MonstersTxt[<span class="lua5-literal">122</span>].HostileType <span class="lua5-note">=</span> <span class="lua5-literal">4</span> <span> </span><span class="lua5-comment">-- PeasantF1B </span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Game.MonstersTxt[<span class="lua5-literal">123</span>].HostileType <span class="lua5-note">=</span> <span class="lua5-literal">4</span> <span> </span><span class="lua5-comment">-- PeasantF1C </span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>

Вместо проверки имени карты вы можете поставить любое условие. Например, после того как игрок выполнит задание, вы можете сделать некоторых монстров дружественными или агрессивными.<br>
<br>

<a id="Flowers-you-can-pick-up-(MM8)"></a><h3>Цветы, которые можно подобрать (MM8)</h3>

Положите этот скрипт в папку <b>Scripts\Global</b>.
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- You can find such flowers in Ravenshore at X = 16921, Y = 4112</span><br><span class="lua5-comment">-- Flowers disappear when picked up, which makes life easier than in Barrels script</span><br><span class="lua5-comment">-- The game remembers which sprites are hidden by itself</span><br><br><span class="lua5-note">local</span> SpriteEvents <span class="lua5-note">=</span> <span class="lua5-literal">20000</span><br><span class="lua5-note">local</span> TXT <span class="lua5-note">=</span> Localize<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>FlowerHint <span class="lua5-note">=</span> <span class="lua5-str">"Flowers"</span>,<br><span class="lua5-ctrl">}</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> Flower(EvtId)<br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> i <span class="lua5-note">=</span> EvtId &ndash; SpriteEvents<br><span class="lua5-tab">&#9;</span>evt.Add(<span class="lua5-str">"Inventory"</span>, <span class="lua5-literal">208</span>)<br><span class="lua5-tab">&#9;</span>evt.SetSprite(i, <span class="lua5-literal">false</span>) <span> </span><span class="lua5-comment">-- alternatively, for the same effect: <span> </span>Map.Sprites[i].Invisible = true</span><br><span class="lua5-ctrl">end</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> InitFlower(i, a)<br><span class="lua5-tab">&#9;</span>a.Event <span class="lua5-note">=</span> SpriteEvents <span class="lua5-operator">+</span> i<br><span class="lua5-tab">&#9;</span>evt.map[SpriteEvents <span class="lua5-operator">+</span> i] <span class="lua5-note">=</span> Flower<br><span class="lua5-tab">&#9;</span>evt.hint[SpriteEvents <span class="lua5-operator">+</span> i] <span class="lua5-note">=</span> TXT.FlowerHint<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-ctrl">function</span> events.LoadMap()<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i, a <span class="lua5-ctrl">in</span> Map.Sprites <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> a.DecName <span class="lua5-operator">==</span> <span class="lua5-str">"plant27"</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>InitFlower(i, a)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

<a id="Unusually-looking-barrels-(MM7)"></a><h3>Необычно выглядящие бочки (MM7)</h3>
Положите этот скрипт в папку <b>Scripts\Global</b>, чтобы превратить деревья в бочки.
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- Turns trees into barrels</span><br><br><span class="lua5-note">local</span> SpriteEvents <span class="lua5-note">=</span> <span class="lua5-literal">20000</span><br><span class="lua5-note">local</span> TopicBase <span class="lua5-note">=</span> <span class="lua5-literal">383</span><br><span class="lua5-note">local</span> TextBase <span class="lua5-note">=</span> <span class="lua5-literal">582</span><br><span class="lua5-note">local</span> Reorder <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span>[<span class="lua5-literal">0</span>] <span class="lua5-note">=</span> <span class="lua5-literal">0</span>, <span class="lua5-literal">1</span>, <span class="lua5-literal">4</span>, <span class="lua5-literal">3</span>, <span class="lua5-literal">5</span>, <span class="lua5-literal">2</span>, <span class="lua5-literal">6</span>, <span class="lua5-literal">7</span><span class="lua5-ctrl">}</span> <span> </span><span class="lua5-comment">-- NPC topics order for barrels is messed up</span><br><span class="lua5-note">local</span> AutonotesBase <span class="lua5-note">=</span> <span class="lua5-literal">32</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> Barrel(EvtId)<br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> i <span class="lua5-note">=</span> EvtId &ndash; SpriteEvents<br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> v <span class="lua5-note">=</span> mapvars.Barrels[i]<br><span class="lua5-tab">&#9;</span>Game.ShowStatusText(Game.NPCText[TextBase <span class="lua5-operator">+</span> Reorder[v]])<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> v <span class="lua5-operator">&gt;</span> <span class="lua5-literal">0</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Add(evt.VarNum.BaseStats[v &ndash; <span class="lua5-literal">1</span>], <span class="lua5-literal">2</span>)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.Set(<span class="lua5-str">"AutonotesBits"</span>, AutonotesBase <span class="lua5-operator">+</span> v)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mapvars.Barrels[i] <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>evt.hint[SpriteEvents <span class="lua5-operator">+</span> i] <span class="lua5-note">=</span> Game.NPCTopic[TopicBase]<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span><br><br><span class="lua5-note">local</span> <span class="lua5-ctrl">function</span> InitBarrel(i, a)<br><span class="lua5-tab">&#9;</span>mapvars.Barrels <span class="lua5-note">=</span> mapvars.Barrels <span class="lua5-ctrl">or</span> <span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span><br><span class="lua5-tab">&#9;</span>mapvars.Barrels[i] <span class="lua5-note">=</span> mapvars.Barrels[i] <span class="lua5-ctrl">or</span> <span class="lua5-std">math</span>.<span class="lua5-std">random</span>(<span class="lua5-literal">1</span>, <span class="lua5-literal">7</span>)<br><span class="lua5-tab">&#9;</span><br><span class="lua5-tab">&#9;</span>a.Event <span class="lua5-note">=</span> SpriteEvents <span class="lua5-operator">+</span> i<br><span class="lua5-tab">&#9;</span>evt.map[SpriteEvents <span class="lua5-operator">+</span> i] <span class="lua5-note">=</span> Barrel<br><span class="lua5-tab">&#9;</span>evt.hint[SpriteEvents <span class="lua5-operator">+</span> i] <span class="lua5-note">=</span> Game.NPCTopic[TopicBase <span class="lua5-operator">+</span> Reorder[mapvars.Barrels[i]]]<br><span class="lua5-ctrl">end</span><br><br><span class="lua5-ctrl">function</span> events.LoadMap()<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">for</span> i, a <span class="lua5-ctrl">in</span> Map.Sprites <span class="lua5-ctrl">do</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> a.DecName <span class="lua5-ctrl">and</span> a.DecName:match(<span class="lua5-str">"^tree"</span>) <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>InitBarrel(i, a)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

<a id="Other-Examples"></a><h3>Еще примеры</h3>
Призвать монстра (крестьянина):
<div class="pre-outer"><div class="pre"><span class="lua5-note">local</span> mon <span class="lua5-note">=</span> SummonMonster(<span class="lua5-literal">151</span>, Party.X, Party.Y, Party.Z, <span class="lua5-literal">true</span>)<br>mon.NPC_ID <span class="lua5-note">=</span> <span class="lua5-literal">52</span><br>mon.Hostile <span class="lua5-note">=</span> <span class="lua5-literal">false</span></div></div>
<br>
Посмотреть номер глобального события (скопируйте в консоль, чтобы легко увидеть, какое событие вызывает пункт диалога):
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- on:</span><br><span class="lua5-ctrl">function</span> events.EvtGlobal(evt)<br><span class="lua5-tab">&#9;</span>Message(evt)<br><span class="lua5-ctrl">end</span></div></div>
<div class="pre-outer"><div class="pre"><span class="lua5-comment">-- off:</span><br>events.EvtGlobal.clear()</div></div>
<br>
Посмотреть номера текущего дома (2DEvent) и NPC (вызывайте из консоли):
<div class="pre-outer"><div class="pre">Game.GetCurrentHouse(), GetCurrentNPC()</div></div>
<br>
Вопрос: Как изменить место, где воскрешается команда после смерти?<br>
Ответ: Впишите нужные координаты в вызов функции <a href="#XYZ">XYZ</a> и присвойте <a href="#structs.GameParty.Direction">Direction</a> нужное направление:
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> events.DeathMap(t)<br><span class="lua5-tab">&#9;</span>t.Name <span class="lua5-note">=</span> <span class="lua5-str">"out05.odm"</span><br><span class="lua5-tab">&#9;</span>XYZ(Party, <span class="lua5-literal">0</span>, <span class="lua5-literal">0</span>, <span class="lua5-literal">0</span>)<br><span class="lua5-tab">&#9;</span>Party.Direction <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-tab">&#9;</span>Party.LookAngle <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-ctrl">end</span></div></div>
<br>

Изменение стартовой карты (аналогично предыдущему примеру):
<div class="pre-outer"><div class="pre">Game.NewGameMap <span class="lua5-note">=</span> <span class="lua5-str">"out05.odm"</span><br><span class="lua5-ctrl">function</span> events.NewGameMap()<br><span class="lua5-tab">&#9;</span>XYZ(Party, <span class="lua5-literal">0</span>, <span class="lua5-literal">0</span>, <span class="lua5-literal">0</span>)<br><span class="lua5-tab">&#9;</span>Party.Direction <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-tab">&#9;</span>Party.LookAngle <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-ctrl">end</span></div></div>
<br>
Вопрос: Как исполнить код при нажатии определённой кнопки?<br>
Способ 1:
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> Keys.F1(t)<br><span class="lua5-tab">&#9;</span>Message(<span class="lua5-str">"F1 pressed"</span>)<br><span class="lua5-ctrl">end</span></div></div>
Способ 2:
<div class="pre-outer"><div class="pre"><span class="lua5-ctrl">function</span> events.KeyDown(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> t.Key <span class="lua5-operator">==</span> const.Keys.F1 <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>Message(<span class="lua5-str">"F1 pressed"</span>)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div></div>

Устаревший способ, оставленный для обратной совместимости: <i>(Это НЕ то же самое, что установка Keys.F1)</i>
<div class="pre-outer"><div class="pre">Keys[const.Keys.F1] <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span>Message(<span class="lua5-str">"F1 pressed"</span>)<br><span class="lua5-ctrl">end</span></div></div>
Этот способ может пропустить быстрое нажатие кнопки.
<br>
<!--
<div class="pre-outer"><div class="pre"></div></div>
<br>

<div class="pre-outer"><div class="pre"></div></div>
<br>

<div class="pre-outer"><div class="pre"></div></div>
<br>

<div class="pre-outer"><div class="pre"></div></div>
<br>

<div class="pre-outer"><div class="pre"></div></div>
<br>
-->
<br>
<hr>




<br>
<a id="Evt-Commands"></a><h2>Evt Commands</h2>



<br>
<a id="evt.EnterHouse"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>evt.EnterHouse</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 In 2DEvents.txt<br>600 = you won<br>601 = you won 2 / you lost
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.PlaySound"></a><h3>evt.PlaySound</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.MoveToMap"></a><h3>evt.MoveToMap</h3>
 Notes:<br>If cancel is pressed, event execution is stopped<br>If <b class="def-param">X</b>, <b class="def-param">Y</b>, <b class="def-param">Z</b>, <b class="def-param">Direction</b>, <b class="def-param">LookAngle</b>, <b class="def-param">SpeedZ</b> are all 0, the party isn't moved<br>If <b class="def-param">HouseId</b> and <b class="def-param">Icon</b> are 0, the enter dungeon dialog isn't shown<br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Direction
</td><td class="def-right">
 -1 = special case
</td>
</tr><tr>
<td class="def-left">
LookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
SpeedZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
HouseId
</td><td class="def-right">
 In 2DEvents.txt
</td>
</tr><tr>
<td class="def-left">
Icon
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Name
</td><td class="def-right">
 if unspecified or starts with "0" =&gt; current map
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.OpenChest"></a><h3>evt.OpenChest</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.FaceExpression"></a><h3>evt.FaceExpression</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.Players">Player</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Frame
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.DamagePlayer"></a><h3>evt.DamagePlayer</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.Players">Player</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a href="#const.Damage">DamageType</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Damage
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetSnow"></a><h3>evt.SetSnow</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
EffectId
</td><td class="def-right">
 Only 0 available
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetTexture"></a><h3>evt.SetTexture</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Facet
</td><td class="def-right">
 <span class="def-ver">[MM6]</span> <span class="def-nbsp"> </span>Index in <a href="#structs.GameMap.Facets">Map.Facets</a> indoors.<br><span class="def-ver">[MM7+]</span> <span class="def-nbsp"> </span>Id of facets group.
</td>
</tr><tr>
<td class="def-left">
Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetTextureOutdoors"></a><h3>evt.SetTextureOutdoors</h3>
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Model
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Facet
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.ShowMovie"></a><h3>evt.ShowMovie</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
DoubleSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
ExitCurrentScreen
</td><td class="def-right">
 Use <b class="def-param">true</b> only before using <a href="#evt.MoveToMap">evt.MoveToMap</a> command in houses and before showing game ending.<br>Prevents loading of house anmation after the movie stops playing, but doesn't exit the screen properly.
</td>
</tr><tr>
<td class="def-left">
Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetSprite"></a><h3>evt.SetSprite</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
SpriteId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Visible
</td><td class="def-right">
 bit 0x20 of sprite
</td>
</tr><tr>
<td class="def-left">
Name
</td><td class="def-right">
 If <b class="def-param">Name</b> is unspecified or "0", the sprite isn't changed
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.Cmp"></a><h3>evt.Cmp</h3>
 Usually performs Variable &gt;= Value comparison<br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.VarNum">VarNum</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Value
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetDoorState"></a><h3>evt.SetDoorState</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
State
</td><td class="def-right">
 0 &ndash; state (0),<br>1 &ndash; state (1),<br>2 &ndash; switch state if the door isn't moving,<br>3 &ndash; switch state
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.Add"></a><h3>evt.Add</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.VarNum">VarNum</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Value
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.Subtract"></a><h3>evt.Subtract</h3>
 Also available as <b class="def-param">evt.Sub</b>.<br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.VarNum">VarNum</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Value
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.Set"></a><h3>evt.Set</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.VarNum">VarNum</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Value
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SummonMonsters"></a><h3>evt.SummonMonsters</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
TypeIndexInMapStats
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Level
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Count
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
NPCGroup
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
unk
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.CastSpell"></a><h3>evt.CastSpell</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Spell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a href="#const">Mastery</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Skill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
FromX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
FromY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
FromZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
ToX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
ToY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
ToZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SpeakNPC"></a><h3>evt.SpeakNPC</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPC
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetFacetBit"></a><h3>evt.SetFacetBit</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 <span class="def-ver">[MM6]</span> <span class="def-nbsp"> </span>Index in <a href="#structs.GameMap.Facets">Map.Facets</a> indoors.<br><span class="def-ver">[MM7+]</span> <span class="def-nbsp"> </span>Id of facets group.
</td>
</tr><tr>
<td class="def-left">
<a href="#const.FacetBits">Bit</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetFacetBitOutdoors"></a><h3>evt.SetFacetBitOutdoors</h3>
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Model
</td><td class="def-right">
 Model index in <a href="#structs.GameMap.Models">Map.Models</a>
</td>
</tr><tr>
<td class="def-left">
Facet
</td><td class="def-right">
 -1 = for all faces of the model
</td>
</tr><tr>
<td class="def-left">
<a href="#const.FacetBits">Bit</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetMonsterBit"></a><h3>evt.SetMonsterBit</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Monster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a href="#const.MonsterBits">Bit</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.Question"></a><h3>evt.Question</h3>
 Use <a href="#Question">Question</a> function instead, e.g.<div class="def-codeblock"><span class="lua5-ctrl">if</span> Question(<span class="lua5-str">"Restricted area - Keep out."</span>, <span class="lua5-str">"What's the password?"</span>):<span class="lua5-std">lower</span>() <span class="lua5-operator">==</span> <span class="lua5-str">"jbard"</span> <span class="lua5-ctrl">then</span> ...</div><br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Question
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Answer1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Answer2
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.StatusText"></a><h3>evt.StatusText</h3>
 Use <a href="#structs.GameStructure.ShowStatusText">Game.ShowStatusText</a> function instead, e.g.<div class="def-codeblock">Game.ShowStatusText(<span class="lua5-str">"Hi!"</span>)</div><br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Str
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetMessage"></a><h3>evt.SetMessage</h3>
 Use <a href="#Message">Message</a> function instead, e.g.<div class="def-codeblock">Message(<span class="lua5-str">"Hi!"</span>)</div><br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Str
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetLight"></a><h3>evt.SetLight</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 <span class="def-ver">[MM6, MM7]</span> <span class="def-nbsp"> </span><a href="#structs.GameMap.Lights">Map.Lights</a> index<br><span class="def-ver">[MM8]</span> <span class="def-nbsp"> </span>Light group id
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SimpleMessage"></a><h3>evt.SimpleMessage</h3>
 Use <a href="#Message">Message</a> function instead, e.g.<div class="def-codeblock">Message(<span class="lua5-str">"Hi!"</span>)</div><br><br>
&nbsp;<i>Нет параметров.</i><br>
</td>
</tr>
<tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SummonObject"></a><h3>evt.SummonObject</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Item
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  Item index. Index over 1000 means random item of the same kind as <b class="def-param">Item</b> % 1000 of strength <b class="def-param">Item</b> div 1000. For backward compatibility, this parameter can also be called <b class="def-param">Type</b>.
</td>
</tr><tr>
<td class="def-left">
Type
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  Object kind index (ObjList.txt)
</td>
</tr><tr>
<td class="def-left">
X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Speed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Count
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
RandomAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.ForPlayer"></a><h3>evt.ForPlayer</h3>
 Sets current player and returns <b class="def-param">evt</b>. You can thus write things like this:<div class="def-codeblock"><span class="lua5-tab">&#9;</span>evt.ForPlayer(<span class="lua5-str">"All"</span>).Add(<span class="lua5-str">"Exp"</span>, <span class="lua5-literal">1000</span>)</div><br>You can also manipulate <a href="#evt.Player">evt.Player</a> and <a href="#evt.CurrentPlayer">evt.CurrentPlayer</a> variables directly.<br>Usually a better approach is to specify player after <b class="def-param">evt</b>, this way it only effects one call that follows:<div class="def-codeblock"><span class="lua5-tab">&#9;</span>evt.All.Add(<span class="lua5-str">"Exp"</span>, <span class="lua5-literal">1000</span>)<br><span class="lua5-tab">&#9;</span>evt[<span class="lua5-literal">0</span>].Add(<span class="lua5-str">"Gold"</span>, <span class="lua5-literal">1000</span>)</div><br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.Players">Player</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetNPCTopic"></a><h3>evt.SetNPCTopic</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPC
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Index
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Event
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.MoveNPC"></a><h3>evt.MoveNPC</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPC
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
HouseId
</td><td class="def-right">
 In 2DEvents.txt
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.GiveItem"></a><h3>evt.GiveItem</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Strength
</td><td class="def-right">
 1-6 (like described at the end of STDITEMS.TXT)
</td>
</tr><tr>
<td class="def-left">
<a href="#const.ItemType">Type</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Id
</td><td class="def-right">
 If <b class="def-param">Id</b> is 0, a random item is chosen from the specified class with specified strength,<br>otherwise, <b class="def-param">Type</b> and <b class="def-param">Strength</b> determine the enchantments
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.ChangeEvent"></a><h3>evt.ChangeEvent</h3>
 
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NewEvent
</td><td class="def-right">
 Changes global event for barrels, pedestals etc. The kinds of sprites with such events are hard-coded.
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.CheckSkill"></a><h3>evt.CheckSkill</h3>
 Checks that the skill meets specified <b class="def-param">Level</b> requirement and that <b class="def-param">Mastery</b> exactly matches that of the player (Novice matches any mastery). Was supposed to include "Double effect" enchantments and NPC bonuses, but doesn't.<br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#const.Skills">Skill</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a href="#const">Mastery</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Level
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetNPCGroupNews"></a><h3>evt.SetNPCGroupNews</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPCGroup
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
NPCNews
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetMonsterGroup"></a><h3>evt.SetMonsterGroup</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Monster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
NPCGroup
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetNPCItem"></a><h3>evt.SetNPCItem</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPC
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Item
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetNPCGreeting"></a><h3>evt.SetNPCGreeting</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPC
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Greeting
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.CheckMonstersKilled"></a><h3>evt.CheckMonstersKilled</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
CheckType
</td><td class="def-right">
 0 &ndash; any monster, 1 &ndash; in group, 2 &ndash; of type, 3 &ndash; specific monster, 4 &ndash; specific monster by name (MM8)
</td>
</tr><tr>
<td class="def-left">
Id
</td><td class="def-right">
 Depending on <b class="def-param">CheckType</b>: 0 &ndash; not used, 1 &ndash; group id, 2 &ndash; monster type minus 1, 3 &ndash; monster id, 4 &ndash; id in placemon.txt (MM8 only)
</td>
</tr><tr>
<td class="def-left">
Count
</td><td class="def-right">
 0 &ndash; all must be killed, else a number of monsters that must be killed
</td>
</tr><tr>
<td class="def-left">
InvisibleAsDead
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  1 (default) &ndash; treat invisible (that is, currently disabled, like pirates in Ravenshore before you enter Regna) monsters as dead when counting, 0 &ndash; include invisible monsters
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.ChangeGroupToGroup"></a><h3>evt.ChangeGroupToGroup</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Old
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
New
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.ChangeGroupAlly"></a><h3>evt.ChangeGroupAlly</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPCGroup
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Ally
</td><td class="def-right">
 Monster class that guards this group. That is, <span class="def-code">(Id <span class="lua5-operator">+</span> <span class="lua5-literal">2</span>):div(<span class="lua5-literal">3</span>)</span>, like in Hostile.txt.
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.CheckSeason"></a><h3>evt.CheckSeason</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Season
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetMonGroupBit"></a><h3>evt.SetMonGroupBit</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
NPCGroup
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a href="#const.MonsterBits">Bit</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetChestBit"></a><h3>evt.SetChestBit</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
ChestId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a href="#const.ChestBits">Bit</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
On
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.FaceAnimation"></a><h3>evt.FaceAnimation</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a href="#evt.Players">Player</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Animation
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.SetMonsterItem"></a><h3>evt.SetMonsterItem</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Monster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Item
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Has
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.StopDoor"></a><h3>evt.StopDoor</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.CheckItemsCount"></a><h3>evt.CheckItemsCount</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
MinItemIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
MaxItemIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Count
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.RemoveItems"></a><h3>evt.RemoveItems</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
MinItemIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
MaxItemIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Count
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.Jump"></a><h3>evt.Jump</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
ZAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
Speed
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.IsTotalBountyInRange"></a><h3>evt.IsTotalBountyInRange</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
MinGold
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
MaxGold
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.CanPlayerAct"></a><h3>evt.CanPlayerAct</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 from Roster.txt
</td>
</tr><tr>
<td colspan="2" class="def-caption">
<br>
<a id="evt.RefundChestArtifacts"></a><h3>evt.RefundChestArtifacts</h3>
 To be added in 2.5.6 or 2.6 of the patches. Removes all artifacts randomly generated in the chest from <a href="#structs.GameParty.ArtifactsFound">Party.ArtifactsFound</a>.<br><br>
&nbsp;<i>Параметры:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
Id
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>


<br>
<hr>
<a id="Events"></a><h2>Events</h2>



<br>
<a id="StructsAfter-Spells.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Structs\After\ </span>Spells.lua</h3>
 
&nbsp;<i class="def-ib">События:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="events.MonsterCastSpell" class="abs"></a><h4 class="def-h4">MonsterCastSpell</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Action<br><span class="def-nbsp">  </span>CallDefault<br><span class="def-nbsp">  </span><a href="#structs.MissileDirection">Direction</a><br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a><br><span class="def-nbsp">  </span>MonsterIndex<br><span class="def-nbsp">  </span>ObjectType<br><span class="def-nbsp">  </span>Skill <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span>Sound<br><span class="def-nbsp">  </span>Spell<br><b class="def-rargs">}</b>
</td><td class="def-right">
 Can be used to change how a spell works when cast by a monster.<br><b class="def-param">Sound</b> and <b class="def-param">ObjectType</b> aren't assigned initially, you can set them to change what sound the spell makes and what projectiles it has.<br><span class="def-code">CallDefault(FakeSpell, FakeSkill)</span> would use logic from <b class="def-param">FakeSpell</b> with <b class="def-param">FakeSkill</b>, but change sound and any created projectiles to match what you've defined in the table.<br><span class="def-vspace">Example:<div class="def-codeblock"><span class="lua5-comment">-- allow Poison Spray to be cast by monsters</span><br>events.MonsterCastSpell <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>t<span class="lua5-ctrl">|</span> <span class="lua5-ctrl">if</span> t.Spell <span class="lua5-operator">==</span> <span class="lua5-literal">24</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> sk, mas <span class="lua5-note">=</span> SplitSkill(t.Skill)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> mas <span class="lua5-operator">&gt;=</span> const.Expert <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t.CallDefault(<span class="lua5-literal">15</span>, JoinSkill(sk, mas <span class="lua5-operator">-</span> <span class="lua5-literal">1</span>)) <span> </span><span class="lua5-comment">-- use Sparks as a template</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">else</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t.CallDefault(<span class="lua5-literal">2</span>) <span> </span><span class="lua5-comment">-- use Fire Bolt as a template</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div><br></span>
</td>
</tr><tr>
<td class="def-left">
<a id="events.EventCastSpell" class="abs"></a><h4 class="def-h4">EventCastSpell</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>CallDefault<br><span class="def-nbsp">  </span>FromX<br><span class="def-nbsp">  </span>FromY<br><span class="def-nbsp">  </span>FromZ<br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span><a href="#const">Mastery</a><br><span class="def-nbsp">  </span>ObjectType<br><span class="def-nbsp">  </span>Skill<br><span class="def-nbsp">  </span>Sound<br><span class="def-nbsp">  </span>Spell<br><span class="def-nbsp">  </span>ToX<br><span class="def-nbsp">  </span>ToY<br><span class="def-nbsp">  </span>ToZ<br><b class="def-rargs">}</b>
</td><td class="def-right">
 Can be used to change how a spell works when cast by <a href="#evt.CastSpell">evt.CastSpell</a>.<br><b class="def-param">Sound</b> and <b class="def-param">ObjectType</b> aren't assigned initially, you can set them to change what sound the spell makes and what projectiles it has.<br><span class="def-code">CallDefault(FakeSpell, FakeMastery, FakeSkill, x1, y1, z1, x2, y2, z2)</span> would use logic from <b class="def-param">FakeSpell</b> with <b class="def-param">FakeMastery</b> and <b class="def-param">FakeSkill</b>, but change sound and any created projectiles to match what you've defined in the table. Coordinates can also be changed.<br><span class="def-vspace">Complex</span> example:<div class="spoiler"><input class="spoiler-checkbox" type="checkbox" id="spoiler1"/><div class="spoiler-scroll"><div class="spoiler-space"></div><div class="spoiler-body"><div class="def-codeblock"><span class="lua5-comment">-- Enables Paralyze spell to be used by monsters and evt.CastSpell</span><br><span class="lua5-comment">-- You would also need to add the projectiles to ObjList.txt and SFT.txt in Data\Tables\</span><br><span class="lua5-note">local</span> spPara <span class="lua5-note">=</span> const.Spells.Paralyze<br><span class="lua5-note">local</span> objPara <span class="lua5-note">=</span> Game.SpellObjId[spPara]<br><br><span class="lua5-note">local</span> handler <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>t<span class="lua5-ctrl">|</span> <span class="lua5-ctrl">if</span> t.Spell <span class="lua5-operator">==</span> spPara <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span>t.CallDefault(<span class="lua5-literal">2</span>) <span> </span><span class="lua5-comment">-- Fire Bolt, because it simply plays a sound and creates a projectile</span><br><span class="lua5-ctrl">end</span><br>events.MonsterCastSpell <span class="lua5-note">=</span> handler<br>events.EventCastSpell <span class="lua5-note">=</span> handler<br><br>events.ReadMonsterSpell <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>t<span class="lua5-ctrl">|</span> <span class="lua5-ctrl">if</span> t.Name <span class="lua5-operator">==</span> <span class="lua5-str">"paralyze"</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span>t.Result <span class="lua5-note">=</span> spPara<br><span class="lua5-ctrl">end</span><br><br>events.PlayerAttacked <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>t<span class="lua5-ctrl">|</span> <span class="lua5-ctrl">if</span> <span class="lua5-ctrl">not</span> t.Handled <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> o <span class="lua5-note">=</span> t.Attacker.Object<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> o <span class="lua5-ctrl">and</span> o.Type <span class="lua5-operator">==</span> objPara <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t.Handled <span class="lua5-note">=</span> <span class="lua5-literal">true</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t.Player:DoBadThing(const.MonsterBonus.Paralyze, t.Attacker.Monster <span class="lua5-ctrl">or</span> Map.Monsters[<span class="lua5-literal">0</span>])<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span><br><br>events.MonsterAttacked <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>t<span class="lua5-ctrl">|</span> <span class="lua5-ctrl">if</span> <span class="lua5-ctrl">not</span> t.Handled <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> o, mon <span class="lua5-note">=</span> t.Attacker.Object, t.Monster<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> o <span class="lua5-ctrl">and</span> o.Type <span class="lua5-operator">==</span> objPara <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>t.Handled <span class="lua5-note">=</span> <span class="lua5-literal">true</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> mon:CalcHitByEffect(Game.SpellsTxt[spPara].DamageType) <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mon.CurrentActionLength <span class="lua5-note">=</span> <span class="lua5-literal">128</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mon.AIState <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mon.SpeedX <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mon.SpeedY <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mon.SpeedZ <span class="lua5-note">=</span> <span class="lua5-literal">0</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mon:UpdateGraphicState()<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mon.SpellBuffs[const.MonsterBuff.Paralyze]:Set(Game.Time <span class="lua5-operator">+</span> <span class="lua5-literal">3</span><span class="lua5-operator">*</span>const.Minute<span class="lua5-operator">*</span>o.SpellSkill, o.SpellLevel)<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>mon:ShowSpellEffect()<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div>
</div></div><label class="spoiler-label" for="spoiler1"></label><span class="spoiler-fade"></span></div>
</td>
</tr><tr>
<td class="def-left">
<a id="events.ReadMonsterSpell" class="abs"></a><h4 class="def-h4">ReadMonsterSpell</h4><b class="def-largs">{</b>word1, word2, ...;<br><span class="def-nbsp">  </span>Name<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 If spell name is "Hour of Power", the table passed to event would be <span class="def-code"><span class="lua5-ctrl">{</span><span class="lua5-str">"hour"</span>, <span class="lua5-str">"of"</span>, <span class="lua5-str">"power"</span>, Name <span class="lua5-note">=</span> <span class="lua5-str">"hour of power"</span><span class="lua5-ctrl">}</span></span>, all in lower case.<br><span class="def-vspace">Example:<div class="def-codeblock"><span class="lua5-comment">-- allow Poison Spray to be read from Monsters.txt</span><br>events.ReadMonsterSpell <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>t<span class="lua5-ctrl">|</span> <span class="lua5-ctrl">if</span> t.Name <span class="lua5-operator">==</span> <span class="lua5-str">"poison spray"</span> <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span>t.Result <span class="lua5-note">=</span> <span class="lua5-literal">24</span><br><span class="lua5-ctrl">end</span></div><br></span>
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-events.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>events.lua</h3>
 
&nbsp;<i class="def-ib">События:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="events.CalcSpellDamage" class="abs"></a><h4 class="def-h4">CalcSpellDamage</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>HP<br><span class="def-nbsp">  </span>HitPoints<br><span class="def-nbsp">  </span><a href="#const">Mastery</a><br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>Skill<br><span class="def-nbsp">  </span>Spell<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.WalkToMap" class="abs"></a><h4 class="def-h4">WalkToMap</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Days <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span>EnterMap<br><span class="def-nbsp">  </span>EnterSide <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span>LeaveMap<br><span class="def-nbsp">  </span>LeaveSide <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span>X<br><span class="def-nbsp">  </span>Y<br><b class="def-rargs">}</b>
</td><td class="def-right">
 Sides:<br><span class="def-nbsp">  </span>0, "up", "down", "left", "right".<br><span class="def-nbsp">  </span>0 means "party start" sprite.
</td>
</tr><tr>
<td class="def-left">
<a id="events.DeathMap" class="abs"></a><h4 class="def-h4">DeathMap</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Name<br><span class="def-nbsp">  </span>Set<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.NewGameMap" class="abs"></a><h4 class="def-h4">NewGameMap</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>AutoFallStart<br><span class="def-nbsp">  </span>Set<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">Set</b><b class="def-largs-i">(</b>x, y, z, direction, lookAngle, speedZ<b class="def-rargs-i">)</b> function sets both party position (saved in autosave) and map transition (used on start immediately).
</td>
</tr><tr>
<td class="def-left">
<a id="events.NewGameDefaultParty" class="abs"></a><h4 class="def-h4">NewGameDefaultParty</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.NewGameClearParty" class="abs"></a><h4 class="def-h4">NewGameClearParty</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GameInitialized1" class="abs"></a><h4 class="def-h4">GameInitialized1</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 loaded .bin data
</td>
</tr><tr>
<td class="def-left">
<a id="events.GameInitialized2" class="abs"></a><h4 class="def-h4">GameInitialized2</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 loaded .txt data
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanSaveGame" class="abs"></a><h4 class="def-h4">CanSaveGame</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>IsArena<br><span class="def-nbsp">  </span>SaveKind<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">SaveKind</b>: 0 &ndash; normal, 1 &ndash; autosave, 2 &ndash; quick save<br>If <b class="def-param">IsArena</b> is <b class="def-param">true</b>, the "No saving on the Arena" message is displayed
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanCastLloyd" class="abs"></a><h4 class="def-h4">CanCastLloyd</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.IsUnderwater" class="abs"></a><h4 class="def-h4">IsUnderwater</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Map<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="events.FogRange" class="abs"></a><h4 class="def-h4">FogRange</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.PopulateQuestLog" class="abs"></a><h4 class="def-h4">PopulateQuestLog</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Use this event to add quest indexes to <a href="#structs.DialogLogic.List">Game.DialogLogic.List</a> or rearrange them
</td>
</tr><tr>
<td class="def-left">
<a id="events.PopulateAutonotesList" class="abs"></a><h4 class="def-h4">PopulateAutonotesList</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Category<br><b class="def-rargs">}</b>
</td><td class="def-right">
 Use this event to add autonote indexes to <a href="#structs.DialogLogic.List">Game.DialogLogic.List</a> or rearrange them
</td>
</tr><tr>
<td class="def-left">
<a id="events.PopulateAwardsList" class="abs"></a><h4 class="def-h4">PopulateAwardsList</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>NoShuffle<br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><b class="def-rargs">}</b>
</td><td class="def-right">
 Use this event to add award indexes to <a href="#structs.DialogLogic.List">Game.DialogLogic.List</a> or rearrange them. Awards would later be arranged into groups of different colors. If <b class="def-param">NoShuffle</b> is set to <b class="def-param">true</b>, their order within groups would be preserved, otherwise default game code will sort them in an unpredictable manner.
</td>
</tr><tr>
<td class="def-left">
<a id="events.MonsterInfoPictureChanged" class="abs"></a><h4 class="def-h4">MonsterInfoPictureChanged</h4><b class="def-largs">(</b>MonId<b class="def-rargs">)</b>
</td><td class="def-right">
 Called when monster kind in monster info dialog changes. <a href="#structs.DialogLogic.MonsterInfoMonster">Game.DialogLogic.MonsterInfoMonster</a> holds the monster prototype being displayed. This is the event you can use to change <a href="#structs.PatchOptions.MonSpritesSizeMul">Game.PatchOptions.MonSpritesSizeMul</a>.
</td>
</tr><tr>
<td class="def-left">
<a id="events.WindowMessage" class="abs"></a><h4 class="def-h4">WindowMessage</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span>LParam<br><span class="def-nbsp">  </span>Msg<br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>WParam<br><span class="def-nbsp">  </span>Window<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.KeyDown" class="abs"></a><h4 class="def-h4">KeyDown</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Alt<br><span class="def-nbsp">  </span>ExtendedKey<br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span><a href="#const.Keys">Key</a><br><span class="def-nbsp">  </span>WasPressed<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.KeyUp" class="abs"></a><h4 class="def-h4">KeyUp</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Alt<br><span class="def-nbsp">  </span>ExtendedKey<br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span><a href="#const.Keys">Key</a><br><span class="def-nbsp">  </span>WasPressed<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.PostRender" class="abs"></a><h4 class="def-h4">PostRender</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.Action" class="abs"></a><h4 class="def-h4">Action</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Action<br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span>Param<br><span class="def-nbsp">  </span>Param2<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.MenuAction" class="abs"></a><h4 class="def-h4">MenuAction</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Action<br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span>Param<br><span class="def-nbsp">  </span>Param2<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.ExitMapAction" class="abs"></a><h4 class="def-h4">ExitMapAction</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#const.ExitMapAction">Action</a><br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.KeysFilter" class="abs"></a><h4 class="def-h4">KeysFilter</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#const.Keys">Key</a><br><span class="def-nbsp">  </span>On<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.BeforeSaveGame" class="abs"></a><h4 class="def-h4">BeforeSaveGame</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.BeforeNewGameAutosave" class="abs"></a><h4 class="def-h4">BeforeNewGameAutosave</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.AfterNewGameAutosave" class="abs"></a><h4 class="def-h4">AfterNewGameAutosave</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.AfterSaveGame" class="abs"></a><h4 class="def-h4">AfterSaveGame</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.SkyBitmap" class="abs"></a><h4 class="def-h4">SkyBitmap</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>FirstVisit<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.PlayMapTrack" class="abs"></a><h4 class="def-h4">PlayMapTrack</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>MapIndex<br><span class="def-nbsp">  </span>Track<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.ShowMovie" class="abs"></a><h4 class="def-h4">ShowMovie</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>CallDefault = function<b class="def-largs-i">(</b><b class="def-rargs-i">)</b><br><span class="def-nbsp">  </span>DoubleSize<br><span class="def-nbsp">  </span>ExitCurrentScreen<br><span class="def-nbsp">  </span>Name<br><span class="def-nbsp">  </span>Y<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.PlaySound" class="abs"></a><h4 class="def-h4">PlaySound</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>CallDefault = function<b class="def-largs-i">(</b><b class="def-rargs-i">)</b><br><span class="def-nbsp">  </span>Loops<br><span class="def-nbsp">  </span>ObjRef<br><span class="def-nbsp">  </span>Sound<br><span class="def-nbsp">  </span>Speed<br><span class="def-nbsp">  </span>UnkParam<br><span class="def-nbsp">  </span>Volume<br><span class="def-nbsp">  </span>X<br><span class="def-nbsp">  </span>Y<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.FaceAnimation" class="abs"></a><h4 class="def-h4">FaceAnimation</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>Animation<br><span class="def-nbsp">  </span>CallDefault = function<b class="def-largs-i">(</b><b class="def-rargs-i">)</b><br><span class="def-nbsp">  </span>Face<br><span class="def-nbsp">  </span>ForceSound<br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Sound<br><span class="def-nbsp">  </span>SoundCount<br><span class="def-nbsp">  </span>SoundOffset<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CalcStatBonusByItems" class="abs"></a><h4 class="def-h4">CalcStatBonusByItems</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>ArtifactBonus <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span>IgnoreExtraHand<br><span class="def-nbsp">  </span>MagicBonus <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>SetArtifactBonus<br><span class="def-nbsp">  </span>SetMagicBonus<br><span class="def-nbsp">  </span><a href="#const.Stats">Stat</a><br><b class="def-rargs">}</b>
</td><td class="def-right">
 Here's how <b class="def-param">SetArtifactBonus</b><b class="def-largs-i">(</b>value<b class="def-rargs-i">)</b> method works:<br><span class="def-nbsp">  </span><span class="def-ver">[MM7+]</span> If <b class="def-param">value</b> is bigger than <b class="def-param">ArtifactBonus</b>, it modifies <b class="def-param">ArtifactBonus</b> and increases <b class="def-param">Result</b>.<br><span class="def-nbsp">  </span><span class="def-ver">[MM6]</span> It just adds the <b class="def-param">value</b> to <b class="def-param">Result</b>. The game does the same, but only includes one instance of each artifact into consideration.<br><br><b class="def-param">SetMagicBonus</b> does the same to <b class="def-param">MagicBonus</b>.
</td>
</tr><tr>
<td class="def-left">
<a id="events.CalcStatBonusByMagic" class="abs"></a><h4 class="def-h4">CalcStatBonusByMagic</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span><a href="#const.Stats">Stat</a><br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CalcStatBonusBySkills" class="abs"></a><h4 class="def-h4">CalcStatBonusBySkills</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span><a href="#const.Stats">Stat</a><br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetSkill" class="abs"></a><h4 class="def-h4">GetSkill</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>Skill<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetAttackDelay" class="abs"></a><h4 class="def-h4">GetAttackDelay</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Ranged<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CalcDamageToPlayer" class="abs"></a><h4 class="def-h4">CalcDamageToPlayer</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Damage<br><span class="def-nbsp">  </span><a href="#const.Damage">DamageKind</a><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetMerchantTotalSkill" class="abs"></a><h4 class="def-h4">GetMerchantTotalSkill</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetDisarmTrapTotalSkill" class="abs"></a><h4 class="def-h4">GetDisarmTrapTotalSkill</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetDiplomacyTotalSkill" class="abs"></a><h4 class="def-h4">GetDiplomacyTotalSkill</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <span class="def-ver">[MM6]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetPerceptionTotalSkill" class="abs"></a><h4 class="def-h4">GetPerceptionTotalSkill</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetLearningTotalSkill" class="abs"></a><h4 class="def-h4">GetLearningTotalSkill</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="events.DoBadThingToPlayer" class="abs"></a><h4 class="def-h4">DoBadThingToPlayer</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a> <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span>MonsterIndex <span class="def-ver">[MM7+]</span><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span><a href="#const.MonsterBonus">Thing</a><br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetStatisticEffect" class="abs"></a><h4 class="def-h4">GetStatisticEffect</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>Value<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.UseMouseItem" class="abs"></a><h4 class="def-h4">UseMouseItem</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.Player">ActivePlayer</a><br><span class="def-nbsp">  </span>ActivePlayerIndex<br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>CallDefault = function<b class="def-largs-i">(</b><b class="def-rargs-i">)</b><br><span class="def-nbsp">  </span>IsPortraitClick<br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.Regeneration" class="abs"></a><h4 class="def-h4">Regeneration</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>HP<br><span class="def-nbsp">  </span>Player<br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>SP<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">HP</b> and <b class="def-param">SP</b> don't include regeneration values assigned by the game, but setting them takes care of conditions<br>!k{Player :structs.Player}
</td>
</tr><tr>
<td class="def-left">
<a id="events.ModifyItemDamage" class="abs"></a><h4 class="def-h4">ModifyItemDamage</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Damage<br><span class="def-nbsp">  </span>Item<br><span class="def-nbsp">  </span>MonsterId<br><span class="def-nbsp">  </span>Player<br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>Slot<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.MonsterKilled" class="abs"></a><h4 class="def-h4">MonsterKilled</h4><b class="def-largs">(</b><a href="#structs.MapMonster">mon</a>, monIndex, defaultHandler<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.ItemAdditionalDamage" class="abs"></a><h4 class="def-h4">ItemAdditionalDamage</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#const.Damage">DamageKind</a><br><span class="def-nbsp">  </span>Item<br><span class="def-nbsp">  </span>Result<br><span class="def-nbsp">  </span>Vampiric<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="events.CalcDamageToMonster" class="abs"></a><h4 class="def-h4">CalcDamageToMonster</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Damage<br><span class="def-nbsp">  </span><a href="#const.Damage">DamageKind</a><br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a><br><span class="def-nbsp">  </span>MonsterIndex<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.PickCorpse" class="abs"></a><h4 class="def-h4">PickCorpse</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>CallDefault = function<b class="def-largs-i">(</b><b class="def-rargs-i">)</b><br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a><br><span class="def-nbsp">  </span>MonsterIndex<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CastTelepathy" class="abs"></a><h4 class="def-h4">CastTelepathy</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>CallDefault = function<b class="def-largs-i">(</b><b class="def-rargs-i">)</b><br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a><br><span class="def-nbsp">  </span>MonsterIndex<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanMonsterCastSpell" class="abs"></a><h4 class="def-h4">CanMonsterCastSpell</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>Distance <span class="def-ver">[MM8]</span><br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a><br><span class="def-nbsp">  </span>MonsterIndex<br><span class="def-nbsp">  </span>Spell<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="events.MonsterChooseAction" class="abs"></a><h4 class="def-h4">MonsterChooseAction</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#const.MonsterAction">Action</a><br><span class="def-nbsp">  </span>CallDefault = function<b class="def-largs-i">(</b><b class="def-rargs-i">)</b><br><span class="def-nbsp">  </span>Distance <span class="def-ver">[MM8]</span><br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a><br><span class="def-nbsp">  </span>MonsterIndex<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">Action</b> starts uninitialized. Each time you call <b class="def-param">CallDefault</b>, it generates new result, assigns it to <b class="def-param">Action</b> and returns the value.
</td>
</tr><tr>
<td class="def-left">
<a id="events.MonsterAttacked" class="abs"></a><h4 class="def-h4">MonsterAttacked</h4><b class="def-largs">(</b>{<br><span class="def-nbsp">  </span>Attacker = table returned by <a href="#WhoHitMonster">WhoHitMonster</a><br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a><br><span class="def-nbsp">  </span>MonsterIndex<br>}, attacker<b class="def-rargs">)</b>
</td><td class="def-right">
 Called when a player or a projectile tries to hit a monster. Can be used to completely replace what happens.
</td>
</tr><tr>
<td class="def-left">
<a id="events.AfterMonsterAttacked" class="abs"></a><h4 class="def-h4">AfterMonsterAttacked</h4><b class="def-largs">(</b>{<br><span class="def-nbsp">  </span>Attacker = table returned by <a href="#WhoHitMonster">WhoHitMonster</a><br><span class="def-nbsp">  </span>Handled = carried over from <a href="#events.MonsterAttacked">MonsterAttacked</a> event<br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a><br><span class="def-nbsp">  </span>MonsterIndex<br>}, attacker<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.PlayerAttacked" class="abs"></a><h4 class="def-h4">PlayerAttacked</h4><b class="def-largs">(</b>{<br><span class="def-nbsp">  </span>Attacker = table returned by <a href="#WhoHitPlayer">WhoHitPlayer</a><br><span class="def-nbsp">  </span>Handled<br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerSlot<br>}, attacker<b class="def-rargs">)</b>
</td><td class="def-right">
 Called when a monster or a projectile tries to hit a player. Can be used to completely replace what happens.
</td>
</tr><tr>
<td class="def-left">
<a id="events.AfterPlayerAttacked" class="abs"></a><h4 class="def-h4">AfterPlayerAttacked</h4><b class="def-largs">(</b>{<br><span class="def-nbsp">  </span>Attacker = table returned by <a href="#WhoHitPlayer">WhoHitPlayer</a><br><span class="def-nbsp">  </span>Handled = carried over from <a href="#events.PlayerAttacked">PlayerAttacked</a> event<br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerSlot<br>}, attacker<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-evt.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>evt.lua</h3>
 
&nbsp;<i class="def-ib">События:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="events.LeaveMap" class="abs"></a><h4 class="def-h4">LeaveMap</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.LeaveGame" class="abs"></a><h4 class="def-h4">LeaveGame</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.BeforeLoadMap" class="abs"></a><h4 class="def-h4">BeforeLoadMap</h4><b class="def-largs">(</b>WasInGame, WasLoaded<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CancelLoadingMapScripts" class="abs"></a><h4 class="def-h4">CancelLoadingMapScripts</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Return <b class="def-param">true</b> to cancel execution of map scripts. Used by the Editor.
</td>
</tr><tr>
<td class="def-left">
<a id="events.BeforeLoadMapScripts" class="abs"></a><h4 class="def-h4">BeforeLoadMapScripts</h4><b class="def-largs">(</b>WasInGame<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.LoadMapScripts" class="abs"></a><h4 class="def-h4">LoadMapScripts</h4><b class="def-largs">(</b>WasInGame<b class="def-rargs">)</b>
</td><td class="def-right">
 Use this event instead of <b class="def-param">LoadMap</b> in Global and General scripts
</td>
</tr><tr>
<td class="def-left">
<a id="events.LoadMap" class="abs"></a><h4 class="def-h4">LoadMap</h4><b class="def-largs">(</b>WasInGame, NoScripts<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">NoScripts</b> = <b class="def-param">true</b> if map scripts execution was cancelled by <a href="#events.CancelLoadingMapScripts">CancelLoadingMapScripts</a> event.
</td>
</tr><tr>
<td class="def-left">
<a id="events.AfterLoadMap" class="abs"></a><h4 class="def-h4">AfterLoadMap</h4><b class="def-largs">(</b>WasInGame<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetEventHint" class="abs"></a><h4 class="def-h4">GetEventHint</h4><b class="def-largs">(</b>evtId<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetMazeInfo" class="abs"></a><h4 class="def-h4">GetMazeInfo</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.EvtMap" class="abs"></a><h4 class="def-h4">EvtMap</h4><b class="def-largs">(</b>evtId, seq<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.EvtGlobal" class="abs"></a><h4 class="def-h4">EvtGlobal</h4><b class="def-largs">(</b>evtId, seq<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-main.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>main.lua</h3>
 
&nbsp;<i class="def-ib">События:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="events.StructsLoaded" class="abs"></a><h4 class="def-h4">StructsLoaded</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.ScriptsLoaded" class="abs"></a><h4 class="def-h4">ScriptsLoaded</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-npc.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>npc.lua</h3>
 
&nbsp;<i class="def-ib">События:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="events.EnterAnyNPC" class="abs"></a><h4 class="def-h4">EnterAnyNPC</h4><b class="def-largs">(</b>{<br><span class="def-nbsp">  </span>Index<br><span class="def-nbsp">  </span>Kind<br><span class="def-nbsp">  </span><a href="#structs.NPC">NPC</a><br>}, npc<b class="def-rargs">)</b>
</td><td class="def-right">
 Happens before <a href="#events.EnterNPC">events.EnterNPC</a>. <b class="def-param">Kind</b> ("NPC", "HiredNPC", "StreetNPC") defines the array NPC belongs to and <b class="def-param">Index</b> is index in that array.
</td>
</tr><tr>
<td class="def-left">
<a id="events.EnterNPC" class="abs"></a><h4 class="def-h4">EnterNPC</h4><b class="def-largs">(</b>Index<b class="def-rargs">)</b>
</td><td class="def-right">
 Only called for NPCs from Game.NPC array, not for street or hired NPCs
</td>
</tr><tr>
<td class="def-left">
<a id="events.ShowNPCTopics" class="abs"></a><h4 class="def-h4">ShowNPCTopics</h4><b class="def-largs">(</b>Index<b class="def-rargs">)</b>
</td><td class="def-right">
 NPC topics are about to be shown and you can update them here
</td>
</tr><tr>
<td class="def-left">
<a id="events.ShowHiredNPCTopics" class="abs"></a><h4 class="def-h4">ShowHiredNPCTopics</h4><b class="def-largs">(</b>Index, RealNPC<b class="def-rargs">)</b>
</td><td class="def-right">
 Happens only in MM6 when you talk to a hired NPC.<br><b class="def-param">Index</b> is the index in Party.HiredNPC array.<br><b class="def-param">RealNPC</b> is the index of the prototype NPC in Game.NPC array or <b class="def-param">nil</b>.
</td>
</tr><tr>
<td class="def-left">
<a id="events.DrawNPCGreeting" class="abs"></a><h4 class="def-h4">DrawNPCGreeting</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>NPC<br><span class="def-nbsp">  </span>Seen<br><span class="def-nbsp">  </span>Text<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.SpeakWithMonster" class="abs"></a><h4 class="def-h4">SpeakWithMonster</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span><a href="#structs.MapMonster">Monster</a><br><span class="def-nbsp">  </span>MonsterIndex<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span> Called when you speak with a guard or any other monster with a generic message from NPCGroup.txt. Assign <b class="def-param">Result</b> a string to override default monster group message. Assign an empty string to show no message. Initially <b class="def-param">Result</b> is <b class="def-param">nil</b>.
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanExitNPC" class="abs"></a><h4 class="def-h4">CanExitNPC</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>Must<br><span class="def-nbsp">  </span>NPC<br><b class="def-rargs">}</b>
</td><td class="def-right">
 If <b class="def-param">Must</b> is <b class="def-param">true</b>, the handler can still set <b class="def-param">Allow</b> to <b class="def-param">false</b>, but can't fully cancel the exit. After <b class="def-param">CanExitNPC</b> cancels it 100 times, the exit will happen unconditionally.
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanExitStreetNPC" class="abs"></a><h4 class="def-h4">CanExitStreetNPC</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>Index<br><span class="def-nbsp">  </span>Kind<br><span class="def-nbsp">  </span>Must<br><span class="def-nbsp">  </span><a href="#structs.NPC">NPC</a><br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanExitHiredNPC" class="abs"></a><h4 class="def-h4">CanExitHiredNPC</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>Index<br><span class="def-nbsp">  </span>Kind<br><span class="def-nbsp">  </span>Must<br><span class="def-nbsp">  </span><a href="#structs.NPC">NPC</a><br><span class="def-nbsp">  </span>RealNPC<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">RealNPC</b> is the index of the prototype NPC in Game.NPC array or <b class="def-param">nil</b>.
</td>
</tr><tr>
<td class="def-left">
<a id="events.ExitNPC" class="abs"></a><h4 class="def-h4">ExitNPC</h4><b class="def-largs">(</b>CurrentNPC<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.ExitAnyNPC" class="abs"></a><h4 class="def-h4">ExitAnyNPC</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Index<br><span class="def-nbsp">  </span>Kind<br><span class="def-nbsp">  </span><a href="#structs.NPC">NPC</a><br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.ExitHouseScreen" class="abs"></a><h4 class="def-h4">ExitHouseScreen</h4><b class="def-largs">(</b>Game.HouseScreen<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanTeachSkillMastery" class="abs"></a><h4 class="def-h4">CanTeachSkillMastery</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Allow<br><span class="def-nbsp">  </span>Cost<br><span class="def-nbsp">  </span>Mastery<br><span class="def-nbsp">  </span>Skill<br><span class="def-nbsp">  </span>Text<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanTempleHealPlayer" class="abs"></a><h4 class="def-h4">CanTempleHealPlayer</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GetShopItemTreatment" class="abs"></a><h4 class="def-h4">GetShopItemTreatment</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Action<br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span><a href="#const.HouseType">HouseType</a><br><span class="def-nbsp">  </span><a href="#structs.Item">Item</a><br><span class="def-nbsp">  </span><a href="#structs.Player">Player</a><br><span class="def-nbsp">  </span>PlayerIndex<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">Action</b>: "buy", "sell", "identify", "repair"<br><b class="def-param">Result</b>: 0-based option from merchant.txt<br><b class="def-param">GetDefault</b><b class="def-largs-i">(</b>HouseType, House, Item, Action, Player<b class="def-rargs-i">)</b> function lets you get item treatment by another shop type (all parameters are optional)
</td>
</tr><tr>
<td class="def-left">
<a id="events.CanShopOperateOnItem" class="abs"></a><h4 class="def-h4">CanShopOperateOnItem</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Action<br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span><a href="#const.HouseType">HouseType</a><br><span class="def-nbsp">  </span><a href="#structs.Item">Item</a><br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <b class="def-param">Action</b>: "buy", "sell", "identify", "repair"<br><b class="def-param">GetDefault</b><b class="def-largs-i">(</b>House, Item<b class="def-rargs-i">)</b> function lets you get item treatment by another shop type (all parameters are optional)
</td>
</tr><tr>
<td class="def-left">
<a id="events.ShopItemsGenerated" class="abs"></a><h4 class="def-h4">ShopItemsGenerated</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span><a href="#const.HouseType">HouseType</a><br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.GuildItemsGenerated" class="abs"></a><h4 class="def-h4">GuildItemsGenerated</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span><a href="#const.HouseType">HouseType</a><br><b class="def-rargs">}</b>
</td><td class="def-right">
 Note that you'll have to update <a href="#structs.GameStructure.GuildItemIconPtr">Game.GuildItemIconPtr</a> if you change items in this event (see an example there).
</td>
</tr><tr>
<td class="def-left">
<a id="events.HouseMovieFrame" class="abs"></a><h4 class="def-h4">HouseMovieFrame</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.ArcomageSetup" class="abs"></a><h4 class="def-h4">ArcomageSetup</h4><b class="def-largs">(</b><a href="#structs.Arcomage">arcomage</a>, house<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.ArcomageText" class="abs"></a><h4 class="def-h4">ArcomageText</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 Lets you modify Victory Conditions text
</td>
</tr><tr>
<td class="def-left">
<a id="events.NewBountyHunt" class="abs"></a><h4 class="def-h4">NewBountyHunt</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span>Index<br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 Assign <b class="def-param">Result</b> to specify the target monster for the hunt
</td>
</tr><tr>
<td class="def-left">
<a id="events.BountyHuntDone" class="abs"></a><h4 class="def-h4">BountyHuntDone</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Gold<br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span>Index<br><b class="def-rargs">}</b>
</td><td class="def-right">
 If you modify <b class="def-param">Gold</b> here, it wouldn't be in line with the promised sum, but you may introduce other rewards for example
</td>
</tr><tr>
<td class="def-left">
<a id="events.SetMapNoNPC" class="abs"></a><h4 class="def-h4">SetMapNoNPC</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 <span class="def-ver">[MM7]</span> Use this event if you need to set <a href="#structs.GameMap.NoNPC">Map.NoNPC</a>
</td>
</tr><tr>
<td class="def-left">
<a id="events.PopulateNPCDialog" class="abs"></a><h4 class="def-h4">PopulateNPCDialog</h4><b class="def-largs">(</b>{<br><span class="def-nbsp">  </span>DlgKind<br><span class="def-nbsp">  </span>Index<br><span class="def-nbsp">  </span>Kind<br><span class="def-nbsp">  </span><a href="#structs.NPC">NPC</a><br><span class="def-nbsp">  </span>Result<br>}, npc<b class="def-rargs">)</b>
</td><td class="def-right">
 Change topics of an NPC dialog. <b class="def-param">Result</b> is an array of NPC commands from <a href="#const.HouseScreens">const.HouseScreens</a>. Names from <a href="#const.HouseScreens">const.HouseScreens</a> as text are also allowed. You can also add a table with extra parameters, see the example below. <b class="def-param">Kind</b> ("NPC", "HiredNPC", "StreetNPC") defines the array NPC belongs to and <b class="def-param">Index</b> is index in that array.<br><span class="def-vspace">The</span> following <b class="def-param">DlgKind</b> values are possible:<br><span class="def-code"><span class="lua5-str">"Main"</span></span> &ndash; Regular NPC conversation. In MM6 this is also the Dismiss conversation with a hired NPC.<br><span class="def-code"><span class="lua5-str">"StreetNPC"</span></span> &ndash; Conversation with a street NPC that you can hire. In MM7 this is also the Dismiss conversation with a hired NPC. In MM6 it ratains items you add to beg/threat/bribe menu.<br><span class="def-code"><span class="lua5-str">"LackFame"</span></span> &ndash; Not enough fame to communicate with a street NPC. Unused.<br><span class="def-code"><span class="lua5-str">"BegThreatBribe"</span></span> &ndash; Beg/Threat/Bribe menu in MM6.<br><span class="def-code"><span class="lua5-str">"ThreatBribe"</span></span> &ndash; Beg/Threat/Bribe menu, but "Beg" option won't do anything, because you've already begged the NPC before.<br><span class="def-code"><span class="lua5-str">"JoinMenu"</span></span> &ndash; Join party menu in MM6, MM7.<br><span class="def-code"><span class="lua5-str">"JoinRoster"</span></span> &ndash; Join party menu in MM8.<br><span class="def-code"><span class="lua5-str">"TeachSkill"</span></span> &ndash; Expert/Master/GM teaching.<br><span class="def-code"><span class="lua5-str">"JoinGuild"</span></span> &ndash; Join a guild.<br><span class="def-code"><span class="lua5-str">"BountyHuntNPC"</span></span> &ndash; Bounty Hunt NPC topic. Only utilized by MM6.<br><span class="def-code"><span class="lua5-str">"ArenaMenu"</span></span> &ndash; Any Arena menu.<br><span class="def-code"><span class="lua5-str">"SeerPilgrimage"</span></span> &ndash; Pilgrimage in MM6.
</td>
</tr><tr>
<td class="def-left">
<a id="events.AfterPopulateNPCDialog" class="abs"></a><h4 class="def-h4">AfterPopulateNPCDialog</h4><b class="def-largs">(</b>{<br><span class="def-nbsp">  </span>DlgKind<br><span class="def-nbsp">  </span>ExtraParams<br><span class="def-nbsp">  </span>Index<br><span class="def-nbsp">  </span>Kind<br><span class="def-nbsp">  </span><a href="#structs.NPC">NPC</a><br><span class="def-nbsp">  </span>Result<br>}, npc<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.PopulateHouseDialog" class="abs"></a><h4 class="def-h4">PopulateHouseDialog</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span><a href="#const.HouseType">PicType</a><br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 Change topics in the main dialog menu in a house, unless isn't an NPC conversation. Unfortunately, the captions displayed won't change as they are hard-coded in various places. <b class="def-param">Result</b> is an array of topic numbers from <a href="#const.HouseScreens">const.HouseScreens</a>. Names from <a href="#const.HouseScreens">const.HouseScreens</a> as text are also supported.<br><span class="def-vspace">Example:<div class="def-codeblock">events.PopulateHouseDialog <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>t<span class="lua5-ctrl">|</span> <span class="lua5-ctrl">if</span> t.PicType <span class="lua5-operator">==</span> const.HouseType.Training <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span>t.Result <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><span class="lua5-str">"Train"</span><span class="lua5-ctrl">}</span> <span> </span><span class="lua5-comment">-- disable learning skills at training halls</span><br><span class="lua5-ctrl">end</span></div><br></span>
</td>
</tr><tr>
<td class="def-left">
<a id="events.PopulateArcomageDialog" class="abs"></a><h4 class="def-h4">PopulateArcomageDialog</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span><a href="#const.HouseType">PicType</a><br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.PopulateDisplayInventoryDialog" class="abs"></a><h4 class="def-h4">PopulateDisplayInventoryDialog</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span><a href="#const.HouseType">PicType</a><br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="events.AfterPopulateHouseDialog" class="abs"></a><h4 class="def-h4">AfterPopulateHouseDialog</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>ExtraParams<br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span><a href="#const.HouseType">PicType</a><br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 There are also similar AfterPopulateArcomageDialog and PopulateDisplayInventoryDialog events
</td>
</tr><tr>
<td class="def-left">
<a id="events.PopulateLearnSkillsDialog" class="abs"></a><h4 class="def-h4">PopulateLearnSkillsDialog</h4><b class="def-largs">{</b><br><span class="def-nbsp">  </span>House<br><span class="def-nbsp">  </span><a href="#const.HouseType">PicType</a><br><span class="def-nbsp">  </span>Result<br><b class="def-rargs">}</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span> Change skills in Learn Skills dialog. <b class="def-param">Result</b> is an array of skill numbers. Skill names from <a href="#const.Skills">const.Skills</a> are also allowed.<br><span class="def-vspace">Example:<div class="def-codeblock">events.PopulateLearnSkillsDialog <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>t<span class="lua5-ctrl">|</span> <span class="lua5-ctrl">if</span> t.PicType <span class="lua5-operator">==</span> const.HouseType.Tavern <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span>t.Result[<span class="lua5-operator">#</span>t.Result <span class="lua5-operator">+</span> <span class="lua5-literal">1</span>] <span class="lua5-note">=</span> <span class="lua5-str">"Blaster"</span> <span> </span><span class="lua5-comment">-- devs apperently forgot to make taverns teach you Blaster skill</span><br><span class="lua5-ctrl">end</span></div><br></span>
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-timers.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>timers.lua</h3>
 
&nbsp;<i class="def-ib">События:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="events.Tick" class="abs"></a><h4 class="def-h4">Tick</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Modules-Faces.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Modules\ </span>Faces.lua</h3>
 
&nbsp;<i class="def-ib">События:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="events.BeforeUpdateFaces" class="abs"></a><h4 class="def-h4">BeforeUpdateFaces</h4><b class="def-largs">(</b>JustRead<b class="def-rargs">)</b>
</td><td class="def-right">
 Triggered when "Faces.txt" is read or when <a href="#package.loaded.Faces.Update">Update</a> is called.
</td>
</tr><tr>
<td class="def-left">
<a id="events.AfterUpdateFaces" class="abs"></a><h4 class="def-h4">AfterUpdateFaces</h4><b class="def-largs">(</b>JustRead<b class="def-rargs">)</b>
</td><td class="def-right">
 Triggered after the changes to Faces were applied.
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Modules-PaperDoll.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Modules\ </span>PaperDoll.lua</h3>
 
&nbsp;<i class="def-ib">События:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="events.ReloadPaperDollGraphics" class="abs"></a><h4 class="def-h4">ReloadPaperDollGraphics</h4><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 When corresponding <a href="#ReloadPaperDollGraphics">ReloadPaperDollGraphics</a> function is called
</td>
</tr><tr>
<td class="def-left">
<a id="events.PaperDollHiddenPieces" class="abs"></a><h4 class="def-h4">PaperDollHiddenPieces</h4><b class="def-largs">(</b>{<br><span class="def-nbsp">  </span>arm1 = 1st arm when holding a weapon<br><span class="def-nbsp">  </span>arm1f = 1st arm without a weapon<br><span class="def-nbsp">  </span>arm2 = 2nd arm without 2-handed weapon<br><span class="def-nbsp">  </span>arm2f = 2nd arm when not holding anything, drawn behind armor<br><span class="def-nbsp">  </span>arm2h = 2nd arm for 2-handed weapon<br><span class="def-nbsp">  </span>arm2hb = 2nd arm for 2-handed weapon, drawn behind armor<br><span class="def-nbsp">  </span>game = in game (for BackDoll in MM8)<br><span class="def-nbsp">  </span>hand1 = 1st hand when holding a weapon<br><span class="def-nbsp">  </span>hand1a = 1st hand (always drawn)<br><span class="def-nbsp">  </span>hand2 = 2nd hand for dual-wielding<br><span class="def-nbsp">  </span>hand2h = 2nd hand for 2-handed weapon<br><span class="def-nbsp">  </span>menu = in new game menu (for BackDoll in MM8)<br><span class="def-nbsp">  </span>shield = drawn when holding a shield<br>}, player<b class="def-rargs">)</b>
</td><td class="def-right">
 Here I've described pieces that <b class="def-param">PaperDoll</b> module handles automatically. You can define your own pieces through <a href="#PaperDollDrawOrder">PaperDollDrawOrder</a> array and hide them conditionally here.
</td>
</tr><tr>
<td class="def-left">
<a id="events.PaperDollGetItems" class="abs"></a><h4 class="def-h4">PaperDollGetItems</h4><b class="def-largs">(</b>t, player<b class="def-rargs">)</b>
</td><td class="def-right">
 Lets you modify weared items, such as add new weared item slots. E.g. setting <span class="def-code">t.My <span class="lua5-note">=</span> <span class="lua5-literal">1</span></span> would draw <span class="def-code">pl.Items[<span class="lua5-literal">1</span></span>]. Setting <span class="def-code">t.My <span class="lua5-note">=</span> <span class="lua5-literal">true</span></span> would make ":My" drawn the same way ":Player" is drawn. You'll also need to add "My" to <a href="#PaperDollDrawOrder">PaperDollDrawOrder</a>. If you set <span class="def-code">t.My <span class="lua5-note">=</span> <span class="lua5-str">"solid"</span></span>, ":My" would be drawn without transparency, just like ":BackDoll".
</td>
</tr></tbody>
</table>
<br>


<br>
<hr>
<a id="General-Functions"></a><h2>General Functions</h2>



<br>
<a id="StructsAfter-00-Mem-Functions.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Structs\After\ </span>00 Mem Functions.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="mem.BatchAdd" class="abs"></a><h5 class="def-h5">mem.BatchAdd</h5><b class="def-largs">(</b>t, d<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.ChangeGameArray" class="abs"></a><h5 class="def-h5">mem.ChangeGameArray</h5><b class="def-largs">(</b>name, p, count, lenP<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.ExtendGameStructure" class="abs"></a><h5 class="def-h5">mem.ExtendGameStructure</h5><b class="def-largs">(</b>t<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.ExtendAndSaveGameStructure" class="abs"></a><h5 class="def-h5">mem.ExtendAndSaveGameStructure</h5><b class="def-largs">{</b>...;<br><span class="def-nbsp">  </span>CustomOnce<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.ExtendBitsArray" class="abs"></a><h5 class="def-h5">mem.ExtendBitsArray</h5><b class="def-largs">{</b>...;<br><span class="def-nbsp">  </span>CountRefs<br><span class="def-nbsp">  </span>Custom<br><span class="def-nbsp">  </span>CustomOnce<br><span class="def-nbsp">  </span>LimCountRefs<br><span class="def-nbsp">  </span>Limit<br><span class="def-nbsp">  </span>NoSave<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="StructsAfter-Backup.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Structs\After\ </span>Backup.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="LocalFile" class="abs"></a><h5 class="def-h5">LocalFile</h5><b class="def-largs">(</b>t<b class="def-rargs">)</b>
</td><td class="def-right">
 Pass any table from <a href="#structs.GameStructure">Game.*</a> to this function to make it restore its original state after the player exits the map.
</td>
</tr><tr>
<td class="def-left">
<a id="LocalMonstersTxt" class="abs"></a><h5 class="def-h5">LocalMonstersTxt</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="LocalHostileTxt" class="abs"></a><h5 class="def-h5">LocalHostileTxt</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="LocalNPCNews" class="abs"></a><h5 class="def-h5">LocalNPCNews</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="StructsAfter-Draw.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Structs\After\ </span>Draw.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="DrawScreenEffectD3D" class="abs"></a><h5 class="def-h5">DrawScreenEffectD3D</h5><b class="def-largs">(</b>BitmapIndex, u, v, du, dv, x1, y1, x2, y2, cl, cl2, cl3, cl4<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="StructsAfter-Functions.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Structs\After\ </span>Functions.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="SplitSkill" class="abs"></a><h5 class="def-h5">SplitSkill</h5><b class="def-largs">(</b>val<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="JoinSkill" class="abs"></a><h5 class="def-h5">JoinSkill</h5><b class="def-largs">(</b>skill, <a href="#const">mastery</a><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="XYZ" class="abs"></a><h5 class="def-h5">XYZ</h5><b class="def-largs">(</b>t, x, y, z<b class="def-rargs">)</b>
</td><td class="def-right">
 Get X,Y,Z fields:<div class="def-codeblock"><span class="lua5-note">local</span> x, y, z <span class="lua5-note">=</span> XYZ(Party)</div><br>Set X,Y,Z fields:<div class="def-codeblock">XYZ(Party, x, y, z)</div><br>Enumerate "X", "Y", "Z" strings:<div class="def-codeblock"><span class="lua5-ctrl">for</span> X <span class="lua5-ctrl">in</span> XYZ <span class="lua5-ctrl">do</span><br><span> </span><span> </span><span class="lua5-std">print</span>(Party[X])<br><span class="lua5-ctrl">end</span></div><br>
</td>
</tr><tr>
<td class="def-left">
<a id="ClearConsoleEvents" class="abs"></a><h5 class="def-h5">ClearConsoleEvents</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="Message" class="abs"></a><h5 class="def-h5">Message</h5><b class="def-largs">(</b>text, KeepSound, global<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="Question" class="abs"></a><h5 class="def-h5">Question</h5><b class="def-largs">(</b>text, qtext<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns the reply. <b class="def-param">text</b> is shown as message, <b class="def-param">qtext</b> is shown at the beginning of reply field.<br>Doesn't work in houses in MM7.
</td>
</tr><tr>
<td class="def-left">
<a id="ReplaceNPCTopic" class="abs"></a><h5 class="def-h5">ReplaceNPCTopic</h5><b class="def-largs">(</b>old, new<b class="def-rargs">)</b>
</td><td class="def-right">
 Searches through all NPC topics and replaces one topic with another
</td>
</tr><tr>
<td class="def-left">
<a id="SuppressSound" class="abs"></a><h5 class="def-h5">SuppressSound</h5><b class="def-largs">(</b>on<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ExitScreen" class="abs"></a><h5 class="def-h5">ExitScreen</h5><b class="def-largs">(</b>process<b class="def-rargs">)</b>
</td><td class="def-right">
 Simulates Esc press
</td>
</tr><tr>
<td class="def-left">
<a id="ReloadHouse" class="abs"></a><h5 class="def-h5">ReloadHouse</h5><b class="def-largs">(</b>id<b class="def-rargs">)</b>
</td><td class="def-right">
 Rebuilds house dialog, e.g. after you've moved an NPC to or from this house.<br>Can seemlessly transition between different houses if <b class="def-param">id</b> is specified.<br>Simply closes the house if <b class="def-param">id</b> is '-1'.
</td>
</tr><tr>
<td class="def-left">
<a id="SwitchHouseMovie" class="abs"></a><h5 class="def-h5">SwitchHouseMovie</h5><b class="def-largs">(</b>s, loop<b class="def-rargs">)</b>
</td><td class="def-right">
 Exits currently playing movie and loads the specified one
</td>
</tr><tr>
<td class="def-left">
<a id="DrawSimpleMessage" class="abs"></a><h5 class="def-h5">DrawSimpleMessage</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Draw simple message in screens where it isn't normally supposed to be
</td>
</tr><tr>
<td class="def-left">
<a id="HouseMessage" class="abs"></a><h5 class="def-h5">HouseMessage</h5><b class="def-largs">(</b>text<b class="def-rargs">)</b>
</td><td class="def-right">
 show a message in houses in screens that don't normally support it
</td>
</tr><tr>
<td class="def-left">
<a id="AddGoldExp" class="abs"></a><h5 class="def-h5">AddGoldExp</h5><b class="def-largs">(</b>gold, exp<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="TakeItemFromParty" class="abs"></a><h5 class="def-h5">TakeItemFromParty</h5><b class="def-largs">(</b>id, keep<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">id</b> can also be a table or a table of tables. See <b class="def-param">Quest Alchemy.lua</b> from <a href="#Quests">quest examples</a>
</td>
</tr><tr>
<td class="def-left">
<a id="CheckMonstersKilled" class="abs"></a><h5 class="def-h5">CheckMonstersKilled</h5><b class="def-largs">{</b><br><span class="def-nbsp">  </span>Group<br><span class="def-nbsp">  </span>Monster<br><span class="def-nbsp">  </span>MonsterIndex<br><span class="def-nbsp">  </span>NameId<br><span class="def-nbsp">  </span>Count<br><span class="def-nbsp">  </span>InvisibleAsDead<br><b class="def-rargs">}</b>
</td><td class="def-right">
 See <b class="def-param">Quest Kill Monsters.lua</b> from <a href="#Quests">quest examples</a>
</td>
</tr><tr>
<td class="def-left">
<a id="EnumAvailableSkills" class="abs"></a><h5 class="def-h5">EnumAvailableSkills</h5><b class="def-largs">(</b>class<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <a href="#const.Skills">Skill</a>, <a href="#const">MaxMastery</a>
</td>
</tr><tr>
<td class="def-left">
<a id="RGB" class="abs"></a><h5 class="def-h5">RGB</h5><b class="def-largs">(</b>r, g, b<b class="def-rargs">)</b>
</td><td class="def-right">
 else<br><span class="def-nbsp">  </span>end<br>end
</td>
</tr><tr>
<td class="def-left">
<a id="StrLeft" class="abs"></a><h5 class="def-h5">StrLeft</h5><b class="def-largs">(</b>v<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="StrRight" class="abs"></a><h5 class="def-h5">StrRight</h5><b class="def-largs">(</b>v<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="StrColor" class="abs"></a><h5 class="def-h5">StrColor</h5><b class="def-largs">(</b>r, g, b, s<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="SummonMonster" class="abs"></a><h5 class="def-h5">SummonMonster</h5><b class="def-largs">(</b>id, x, y, z, treasure, place<b class="def-rargs">)</b>
</td><td class="def-right">
 Unless <b class="def-param">treasure</b> is <b class="def-param">true</b>, the monster doesn't have any items or gold.<br><b class="def-param">place</b> defines monster index in <a href="#structs.GameMap.Monsters">Map.Monsters</a> array if specified.
</td>
</tr><tr>
<td class="def-left">
<a id="SummonItem" class="abs"></a><h5 class="def-h5">SummonItem</h5><b class="def-largs">(</b>number, x, y, z, speed<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="RebildIDList" class="abs"></a><h5 class="def-h5">RebildIDList</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ChangeSprite" class="abs"></a><h5 class="def-h5">ChangeSprite</h5><b class="def-largs">(</b>n, name<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="CreateSprite" class="abs"></a><h5 class="def-h5">CreateSprite</h5><b class="def-largs">{</b>name, x, y, z;<br><span class="def-nbsp">  </span>Bits<br><span class="def-nbsp">  </span>X<br><span class="def-nbsp">  </span>Y<br><span class="def-nbsp">  </span>Z<br><b class="def-rargs">}</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="MoveModel" class="abs"></a><h5 class="def-h5">MoveModel</h5><b class="def-largs">(</b>m, dx, dy, dz, MoveParty<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">MoveParty</b> isn't supported yet
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="StructsAfter-LocalizationAndQuests.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Structs\After\ </span>LocalizationAndQuests.lua</h3>
 
&nbsp;<i class="def-ib">Переменные:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="TakeQuestOperation" class="abs"></a><h5 class="def-h5">TakeQuestOperation</h5>
</td><td class="def-right">
 Should be either "Add" or "Set". This determines the overlay flash on character face when a quest is taken.<br><span class="def-ver">[MM6, MM8]</span> Defaults to "Add".<br><span class="def-ver">[MM7]</span> Defaults to "Set".
</td>
</tr><tr>
<td class="def-left">
<a id="Quests-" class="abs"></a><h5 class="def-h5">Quests</h5>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="QuestNPC" class="abs"></a><h5 class="def-h5">QuestNPC</h5>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="vars.Quests" class="abs"></a><h5 class="def-h5">vars.Quests</h5>[name]
</td><td class="def-right">
 Quest states: nil, "Given", "Done" or a custom state.
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="LocalizeAll" class="abs"></a><h5 class="def-h5">LocalizeAll</h5><b class="def-largs">(</b>t, over<b class="def-rargs">)</b>
</td><td class="def-right">
 See <a href="#Localization">Localization</a>.<br>Possible values of <b class="def-param">over</b>:<br><span class="def-nbsp">  </span>true: <span class="def-nbsp"> </span>permanent setup &ndash; overwrite all (used in <b>Localization</b> scripts only)<br><span class="def-nbsp">  </span>false: <span class="def-nbsp"> </span>temporary setup &ndash; overwrite temporary setup only<br><span class="def-nbsp">  </span>"update": <span class="def-nbsp"> </span>remove all previous temporary setup, overwrite temporary setup only
</td>
</tr><tr>
<td class="def-left">
<a id="Localize" class="abs"></a><h5 class="def-h5">Localize</h5><b class="def-largs">(</b>t, over, lev = 1<b class="def-rargs">)</b>
</td><td class="def-right">
 See <a href="#Localization">Localization</a>.<br>Possible values of <b class="def-param">over</b>:<br><span class="def-nbsp">  </span>true: <span class="def-nbsp"> </span>permanent setup &ndash; overwrite all (used in <b>Localization</b> scripts only)<br><span class="def-nbsp">  </span>false: <span class="def-nbsp"> </span>temporary setup &ndash; overwrite temporary setup only<br><span class="def-nbsp">  </span>"update": <span class="def-nbsp"> </span>remove all previous temporary setup, overwrite temporary setup only
</td>
</tr><tr>
<td class="def-left">
<a id="GenerateQuestsLocalization" class="abs"></a><h5 class="def-h5">GenerateQuestsLocalization</h5><b class="def-largs">(</b>IsLua<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="GenerateLocalization" class="abs"></a><h5 class="def-h5">GenerateLocalization</h5><b class="def-largs">(</b>IsLua, IncludeQuests<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ShowQuestEffect" class="abs"></a><h5 class="def-h5">ShowQuestEffect</h5><b class="def-largs">(</b>flash_book, operation<b class="def-rargs">)</b>
</td><td class="def-right">
 Plays sound and shows visual effect on current character's face.<br>If <b class="def-param">flash_book</b> is <b class="def-param">true</b>, the quest book will start flashing.
</td>
</tr><tr>
<td class="def-left">
<a id="ShowAwardEffect" class="abs"></a><h5 class="def-h5">ShowAwardEffect</h5><b class="def-largs">(</b>exclude, operation<b class="def-rargs">)</b>
</td><td class="def-right">
 Plays sound and shows visual effect on all characters' faces.<br><b class="def-param">exclude</b> can be a function(<a href="#structs.Player">player</a>, slot) that returns <b class="def-param">true</b> if the character should be excluded from the effect.
</td>
</tr><tr>
<td class="def-left">
<a id="ShowAutonoteEffect" class="abs"></a><h5 class="def-h5">ShowAutonoteEffect</h5><b class="def-largs">(</b>category, just_sound, operation<b class="def-rargs">)</b>
</td><td class="def-right">
 Plays sound and shows visual effect on current character's face
</td>
</tr><tr>
<td class="def-left">
<a id="AutoQuest" class="abs"></a><h5 class="def-h5">AutoQuest</h5><b class="def-largs">(</b>t, text<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">t</b> can be a function(t), which returns <b class="def-param">true</b> if quest should be visible in the quest log
</td>
</tr><tr>
<td class="def-left">
<a id="AutoAward" class="abs"></a><h5 class="def-h5">AutoAward</h5><b class="def-largs">(</b>t, text, sort<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">t</b> can be a function(t, player_index, <a href="#structs.Player">player</a>), which returns <b class="def-param">true</b> if award should be visible on the Awards page
</td>
</tr><tr>
<td class="def-left">
<a id="AutoAutonote" class="abs"></a><h5 class="def-h5">AutoAutonote</h5><b class="def-largs">(</b>t, text, category<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">t</b> can be a function(t), which returns <b class="def-param">true</b> if autonote should be visible
</td>
</tr><tr>
<td class="def-left">
<a id="GetLocalName" class="abs"></a><h5 class="def-h5">GetLocalName</h5><b class="def-largs">(</b>name, lev<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="Autonote" class="abs"></a><h5 class="def-h5">Autonote</h5><b class="def-largs">(</b>name, cat, text<b class="def-rargs">)</b>
</td><td class="def-right">
 Crates a named autonote. To operate on global named autonotes, use ":" at the beginning of its name.
</td>
</tr><tr>
<td class="def-left">
<a id="AddAutonote" class="abs"></a><h5 class="def-h5">AddAutonote</h5><b class="def-largs">(</b>name, force<b class="def-rargs">)</b>
</td><td class="def-right">
 Adds a named autonote to Auto Notes. <b class="def-param">force</b> = <b class="def-param">true</b> makes it emit the sound even if autonote is already added
</td>
</tr><tr>
<td class="def-left">
<a id="CheckAutonote" class="abs"></a><h5 class="def-h5">CheckAutonote</h5><b class="def-largs">(</b>name<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">true</b> if named autonote was added to Auto Notes
</td>
</tr><tr>
<td class="def-left">
<a id="FindAutonote" class="abs"></a><h5 class="def-h5">FindAutonote</h5><b class="def-largs">(</b>name, must<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="UpdateNPCQuests" class="abs"></a><h5 class="def-h5">UpdateNPCQuests</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="QuestBranch" class="abs"></a><h5 class="def-h5">QuestBranch</h5><b class="def-largs">(</b>branch, persist<b class="def-rargs">)</b>
</td><td class="def-right">
 Sets current dialog branch to <b class="def-param">branch</b> if it's specified.<br><b class="def-param">persist</b> parameter makes the branch persist after you reenter NPC dialog.<br>Returns current branch when called without parameters.<br>If there is no persisted branch name, when you enter NPC dialog the branch is set to "".
</td>
</tr><tr>
<td class="def-left">
<a id="QuestBranchScreen" class="abs"></a><h5 class="def-h5">QuestBranchScreen</h5><b class="def-largs">(</b>branch<b class="def-rargs">)</b>
</td><td class="def-right">
 Switches dialog branch to <b class="def-param">branch</b>, but returns to current branch upon pressing Esc.
</td>
</tr><tr>
<td class="def-left">
<a id="ExitQuestBranch" class="abs"></a><h5 class="def-h5">ExitQuestBranch</h5><b class="def-largs">(</b>all<b class="def-rargs">)</b>
</td><td class="def-right">
 Exits current branch opened with <a href="#QuestBranchScreen">QuestBranchScreen</a>. If no branch screens are left open, simulates Esc press to exit the dialog.
</td>
</tr><tr>
<td class="def-left">
<a id="GetQuestBranchStack" class="abs"></a><h5 class="def-h5">GetQuestBranchStack</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns a table with branch names stored by <a href="#QuestBranchScreen">QuestBranchScreen</a> function (on each call it adds previous branch to the end of this table).
</td>
</tr><tr>
<td class="def-left">
<a id="Quest" class="abs"></a><h5 class="def-h5">Quest</h5><b class="def-largs">{</b>name;<br><span class="def-nbsp">  </span>AddAutonote<br><span class="def-nbsp">  </span>AddAward<br><span class="def-nbsp">  </span>AddQuestBit<br><span class="def-nbsp">  </span>After<br><span class="def-nbsp">  </span>Award<br><span class="def-nbsp">  </span>AwardIndex<br><span class="def-nbsp">  </span>Awards<br><span class="def-nbsp">  </span>BaseName<br><span class="def-nbsp">  </span>Branch<br><span class="def-nbsp">  </span>CanAddAutonote<br><span class="def-nbsp">  </span>CheckDone<br><span class="def-nbsp">  </span>CheckGive<br><span class="def-nbsp">  </span>Done<br><span class="def-nbsp">  </span>DoneState<br><span class="def-nbsp">  </span>Event<br><span class="def-nbsp">  </span>Execute<br><span class="def-nbsp">  </span>Exp<br><span class="def-nbsp">  </span>Experience<br><span class="def-nbsp">  </span>FirstStdTopic<br><span class="def-nbsp">  </span>GetGreeting<br><span class="def-nbsp">  </span>GetTopic<br><span class="def-nbsp">  </span>Give<br><span class="def-nbsp">  </span>GivenItem<br><span class="def-nbsp">  </span>GivenState<br><span class="def-nbsp">  </span>Gold<br><span class="def-nbsp">  </span>IsAwarded<br><span class="def-nbsp">  </span>IsGiven<br><span class="def-nbsp">  </span>KeepQuestItem<br><span class="def-nbsp">  </span>NPC<br><span class="def-nbsp">  </span>Name<br><span class="def-nbsp">  </span>NeverDone<br><span class="def-nbsp">  </span>NeverGiven<br><span class="def-nbsp">  </span>Quest<br><span class="def-nbsp">  </span>QuestGold<br><span class="def-nbsp">  </span>QuestIndex<br><span class="def-nbsp">  </span>QuestItem<br><span class="def-nbsp">  </span>RewardItem<br><span class="def-nbsp">  </span>SetTexts<br><span class="def-nbsp">  </span>Slot<br><span class="def-nbsp">  </span>StdTopic<br><span class="def-nbsp">  </span>StdTopicDone<br><span class="def-nbsp">  </span>StdTopicGiven<br><span class="def-nbsp">  </span>StoreAwards<br><span class="def-nbsp">  </span>TakeQuestOperation<br><span class="def-nbsp">  </span>Texts<br><span class="def-nbsp">  </span>Undone<br><span class="def-nbsp">  </span>Ungive<br><b class="def-rargs">}</b>
</td><td class="def-right">
 See <a href="#Quests">quest examples</a>
</td>
</tr><tr>
<td class="def-left">
<a id="Greeting" class="abs"></a><h5 class="def-h5">Greeting</h5><b class="def-largs">{</b>text, textSeen;<br><span class="def-nbsp">  </span>Text<br><span class="def-nbsp">  </span>TextSeen<br><span class="def-nbsp">  </span>... Quest() parameters ...<br><b class="def-rargs">}</b>
</td><td class="def-right">
 See <a href="#Quests">quest examples</a>
</td>
</tr><tr>
<td class="def-left">
<a id="NPCTopic" class="abs"></a><h5 class="def-h5">NPCTopic</h5><b class="def-largs">{</b>topic, text;<br><span class="def-nbsp">  </span>Topic<br><span class="def-nbsp">  </span>Text<br><span class="def-nbsp">  </span>... Quest() parameters ...<br><b class="def-rargs">}</b>
</td><td class="def-right">
 See <a href="#Quests">quest examples</a>
</td>
</tr><tr>
<td class="def-left">
<a id="KillMonstersQuest" class="abs"></a><h5 class="def-h5">KillMonstersQuest</h5><b class="def-largs">{</b>name = nil, ... A list of either tables with CheckMonstersKilled() parameters or partial completion messages ...;<br><span class="def-nbsp">    </span>... Quest() parameters ...<br><b class="def-rargs">}</b>
</td><td class="def-right">
 See <b class="def-param">Quest Kill Monsters.lua</b> from <a href="#Quests">quest examples</a>
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="StructsAfter-Text-Tables.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Structs\After\ </span>Text Tables.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="ParseTextTable" class="abs"></a><h5 class="def-h5">ParseTextTable</h5><b class="def-largs">(</b>s, r, SkipEmpty, AssignTables<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="LoadTextTable" class="abs"></a><h5 class="def-h5">LoadTextTable</h5><b class="def-largs">(</b>s, r, SkipEmpty, AssignTables<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ParseBasicTextTable" class="abs"></a><h5 class="def-h5">ParseBasicTextTable</h5><b class="def-largs">(</b>s, SkipLinesCount, StartingIndex<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="LoadBasicTextTable" class="abs"></a><h5 class="def-h5">LoadBasicTextTable</h5><b class="def-largs">(</b>s, SkipLinesCount, StartingIndex<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="WriteBasicTextTable" class="abs"></a><h5 class="def-h5">WriteBasicTextTable</h5><b class="def-largs">(</b>t, fname<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ParseNumbersTextTable" class="abs"></a><h5 class="def-h5">ParseNumbersTextTable</h5><b class="def-largs">(</b>s, StartingLinesCount<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="LoadNumbersTextTable" class="abs"></a><h5 class="def-h5">LoadNumbersTextTable</h5><b class="def-largs">(</b>s, StartingLinesCount<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ParseNamedColTable" class="abs"></a><h5 class="def-h5">ParseNamedColTable</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="LoadNamedColTable" class="abs"></a><h5 class="def-h5">LoadNamedColTable</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="WriteNamedColTable" class="abs"></a><h5 class="def-h5">WriteNamedColTable</h5><b class="def-largs">(</b>t, fname<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="TransposeTextTable" class="abs"></a><h5 class="def-h5">TransposeTextTable</h5><b class="def-largs">(</b>t<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ReadLodTextTable" class="abs"></a><h5 class="def-h5">ReadLodTextTable</h5><b class="def-largs">(</b>fname, row, col<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-Common.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>Common.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="assertnum" class="abs"></a><h5 class="def-h5">assertnum</h5><b class="def-largs">(</b>v, level, msg<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="tget" class="abs"></a><h5 class="def-h5">tget</h5><b class="def-largs">(</b>t, k, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <span class="def-code">t[k]</span> if it exists, otherwise sets <span class="def-code">t[k] <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span><span class="lua5-ctrl">}</span></span> and returns <span class="def-code">t[k]</span>.<br>The process is repeated for additional parameters, e.g. <span class="def-code">t[k][k1]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="pcall2" class="abs"></a><h5 class="def-h5">pcall2</h5><b class="def-largs">(</b>...<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <b class="def-param">pcall</b>, but in case of an error shows error message
</td>
</tr><tr>
<td class="def-left">
<a id="xpcall2" class="abs"></a><h5 class="def-h5">xpcall2</h5><b class="def-largs">(</b>...<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <b class="def-param">xpcall</b>, but in case of an error shows error message
</td>
</tr><tr>
<td class="def-left">
<a id="cocall" class="abs"></a><h5 class="def-h5">cocall</h5><b class="def-largs">(</b>f, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 Same as <span class="def-code"><span class="lua5-std">coroutine</span>.<span class="lua5-std">resume</span>(<span class="lua5-std">coroutine</span>.<span class="lua5-std">create</span>(f), ...)</span>
</td>
</tr><tr>
<td class="def-left">
<a id="cocall2" class="abs"></a><h5 class="def-h5">cocall2</h5><b class="def-largs">(</b>f, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <a href="#cocall">cocall</a>, but in case of an error shows error message
</td>
</tr><tr>
<td class="def-left">
<a id="dofile2" class="abs"></a><h5 class="def-h5">dofile2</h5><b class="def-largs">(</b>path, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 Loads file in protected mode, in case of an error shows error message. Return format is the same as that of <b class="def-param">pcall</b>
</td>
</tr><tr>
<td class="def-left">
<a id="coroutine.resume2" class="abs"></a><h5 class="def-h5">coroutine.resume2</h5><b class="def-largs">(</b>...<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <b class="def-param">coroutine.resume</b>, but in case of an error shows error message
</td>
</tr><tr>
<td class="def-left">
<a id="os.GetErrorText" class="abs"></a><h5 class="def-h5">os.GetErrorText</h5><b class="def-largs">(</b>code<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="path.find" class="abs"></a><h5 class="def-h5">path.find</h5><b class="def-largs">(</b>filter, dir<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="path.FindFirst" class="abs"></a><h5 class="def-h5">path.FindFirst</h5><b class="def-largs">(</b>filter, dir<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="path.findfirst" class="abs"></a><h5 class="def-h5">path.findfirst</h5><b class="def-largs">(</b>filter, dir<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="os.chdir" class="abs"></a><h5 class="def-h5">os.chdir</h5><b class="def-largs">(</b>[dir]<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns previous current directory. Call without parameters to look up current dirrectory
</td>
</tr><tr>
<td class="def-left">
<a id="os.mkdir" class="abs"></a><h5 class="def-h5">os.mkdir</h5><b class="def-largs">(</b>dir<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="os.copy" class="abs"></a><h5 class="def-h5">os.copy</h5><b class="def-largs">(</b>old, new, FailIfExists<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="path.GetRelativePath" class="abs"></a><h5 class="def-h5">path.GetRelativePath</h5><b class="def-largs">(</b>from, to, isDir<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="string.convert" class="abs"></a><h5 class="def-h5">string.convert</h5><b class="def-largs">(</b>s, encFrom, encTo, defChar<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="debug.FunctionFile" class="abs"></a><h5 class="def-h5">debug.FunctionFile</h5><b class="def-largs">(</b>f<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-Debug.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>Debug.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="debug.HideConsole" class="abs"></a><h5 class="def-h5">debug.HideConsole</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-ErrorFunction.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>ErrorFunction.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="errorinfo" class="abs"></a><h5 class="def-h5">errorinfo</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="tostring2" class="abs"></a><h5 class="def-h5">tostring2</h5><b class="def-largs">(</b>v, lim, tabs<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-RSFunctions.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>RSFunctions.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="table.swap" class="abs"></a><h5 class="def-h5">table.swap</h5><b class="def-largs">(</b>t, min, max<b class="def-rargs">)</b>
</td><td class="def-right">
 Swaps order of the array. <b class="def-param">min</b> and <b class="def-param">max</b> default to 1 and <b class="def-param">#t</b> respectively
</td>
</tr><tr>
<td class="def-left">
<a id="table.move" class="abs"></a><h5 class="def-h5">table.move</h5><b class="def-largs">(</b>t, from, to<b class="def-rargs">)</b>
</td><td class="def-right">
 Moves an element from one index to another
</td>
</tr><tr>
<td class="def-left">
<a id="table.copy" class="abs"></a><h5 class="def-h5">table.copy</h5><b class="def-largs">(</b>src, dest, overwrite<b class="def-rargs">)</b>
</td><td class="def-right">
 Performs shallow copy. If <b class="def-param">dest</b> = <b class="def-param">nil</b>, a new table is created
</td>
</tr><tr>
<td class="def-left">
<a id="table.find" class="abs"></a><h5 class="def-h5">table.find</h5><b class="def-largs">(</b>t, v<b class="def-rargs">)</b>
</td><td class="def-right">
 Finds value <b class="def-param">v</b>, returns corresponding key
</td>
</tr><tr>
<td class="def-left">
<a id="table.ifind" class="abs"></a><h5 class="def-h5">table.ifind</h5><b class="def-largs">(</b>t, v, start<b class="def-rargs">)</b>
</td><td class="def-right">
 Finds value <b class="def-param">v</b> in array part of the table, returns first match. Uses raw access (<b class="def-param">rawget</b>)
</td>
</tr><tr>
<td class="def-left">
<a id="table.invert" class="abs"></a><h5 class="def-h5">table.invert</h5><b class="def-largs">(</b>t, out<b class="def-rargs">)</b>
</td><td class="def-right">
 Swaps keys and values
</td>
</tr><tr>
<td class="def-left">
<a id="table.clear" class="abs"></a><h5 class="def-h5">table.clear</h5><b class="def-largs">(</b>t<b class="def-rargs">)</b>
</td><td class="def-right">
 Removes all elements from the table
</td>
</tr><tr>
<td class="def-left">
<a id="table.join" class="abs"></a><h5 class="def-h5">table.join</h5><b class="def-largs">(</b>t, t1<b class="def-rargs">)</b>
</td><td class="def-right">
 Adds <b class="def-param">t1</b> array to the end of <b class="def-param">t</b>
</td>
</tr><tr>
<td class="def-left">
<a id="coroutine.yieldN" class="abs"></a><h5 class="def-h5">coroutine.yieldN</h5><b class="def-largs">(</b>n, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">n</b> times in a raw calls <span class="def-code"><span class="lua5-std">coroutine</span>.<span class="lua5-std">yield</span>(...)</span>. Returns the result of last call
</td>
</tr><tr>
<td class="def-left">
<a id="path.ext" class="abs"></a><h5 class="def-h5">path.ext</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 Extracts extension (e.g. returns <span class="def-code"><span class="lua5-str">".txt"</span></span> etc.)
</td>
</tr><tr>
<td class="def-left">
<a id="path.setext" class="abs"></a><h5 class="def-h5">path.setext</h5><b class="def-largs">(</b>s, ext<b class="def-rargs">)</b>
</td><td class="def-right">
 Changes extension (e.g. <span class="def-code">path.setext(<span class="lua5-str">"my.txt"</span>, <span class="lua5-str">"_2.txt"</span>) <span class="lua5-operator">==</span> <span class="lua5-str">"my_2.txt"</span></span>)
</td>
</tr><tr>
<td class="def-left">
<a id="path.name" class="abs"></a><h5 class="def-h5">path.name</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 Extracts file name
</td>
</tr><tr>
<td class="def-left">
<a id="path.dir" class="abs"></a><h5 class="def-h5">path.dir</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 Extracts file path including trailing slash
</td>
</tr><tr>
<td class="def-left">
<a id="path.addslash" class="abs"></a><h5 class="def-h5">path.addslash</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 Adds trailing slash
</td>
</tr><tr>
<td class="def-left">
<a id="path.noslash" class="abs"></a><h5 class="def-h5">path.noslash</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 Removes trailing slash (or multiple slashes)
</td>
</tr><tr>
<td class="def-left">
<a id="io.save" class="abs"></a><h5 class="def-h5">io.save</h5><b class="def-largs">(</b>path, s, translate<b class="def-rargs">)</b>
</td><td class="def-right">
 Saves a string into a file (overwrites it)
</td>
</tr><tr>
<td class="def-left">
<a id="io.load" class="abs"></a><h5 class="def-h5">io.load</h5><b class="def-largs">(</b>path, translate<b class="def-rargs">)</b>
</td><td class="def-right">
 Loads a file as a string
</td>
</tr><tr>
<td class="def-left">
<a id="string.print" class="abs"></a><h5 class="def-h5">string.print</h5><b class="def-largs">(</b>...<b class="def-rargs">)</b>
</td><td class="def-right">
 returns the string that <b class="def-param">print</b> function would normally print out
</td>
</tr><tr>
<td class="def-left">
<a id="string.split" class="abs"></a><h5 class="def-h5">string.split</h5><b class="def-largs">(</b>str, delim, plain<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns a table of strings. <b class="def-param">delim</b> can be a plain string (<b class="def-param">plain</b> = <b class="def-param">true</b>) or a pattern
</td>
</tr><tr>
<td class="def-left">
<a id="string.csplit" class="abs"></a><h5 class="def-h5">string.csplit</h5><b class="def-largs">(</b>str, charlist<b class="def-rargs">)</b>
</td><td class="def-right">
 Any character from <b class="def-param">charlist</b> string is a delimiter
</td>
</tr><tr>
<td class="def-left">
<a id="string.replace" class="abs"></a><h5 class="def-h5">string.replace</h5><b class="def-largs">(</b>str, old, new<b class="def-rargs">)</b>
</td><td class="def-right">
 Parameters are treated as plain strings, not patterns
</td>
</tr><tr>
<td class="def-left">
<a id="sortpairs" class="abs"></a><h5 class="def-h5">sortpairs</h5><b class="def-largs">(</b>t<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">pairs</b> in ascending order with the following comparison rule: <span class="def-nbsp"> </span>number &lt; boolean &lt; string &lt; userdata &lt; table &lt; function &lt; thread
</td>
</tr><tr>
<td class="def-left">
<a id="debug.findupvalue" class="abs"></a><h5 class="def-h5">debug.findupvalue</h5><b class="def-largs">(</b>f, name<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">index</b>, <b class="def-param">value</b> of an upvalue with the given name, or <b class="def-param">nil</b> if it doesn't exist
</td>
</tr><tr>
<td class="def-left">
<a id="debug.findlocal" class="abs"></a><h5 class="def-h5">debug.findlocal</h5><b class="def-largs">(</b>thread, lev, name<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">index</b>, <b class="def-param">value</b> of a local variable with the given name, or <b class="def-param">nil</b> if it doesn't exist
</td>
</tr><tr>
<td class="def-left">
<a id="debug.upvalues" class="abs"></a><h5 class="def-h5">debug.upvalues</h5><b class="def-largs">(</b>f, cache<b class="def-rargs">)</b>
</td><td class="def-right">
 If <b class="def-param">cache</b> = <b class="def-param">true</b>, upvalue indexes are cached.<br>Usage:<br>1) <span class="def-code">v <span class="lua5-note">=</span> <span class="lua5-std">debug</span>.upvalues(f).upvalue_name</span><br>2) <span class="def-code"><span class="lua5-std">debug</span>.upvalues(f).upvalue_name <span class="lua5-note">=</span> v</span><br>3) <span class="def-code"><span class="lua5-ctrl">for</span> k, v <span class="lua5-ctrl">in</span> <span class="lua5-std">debug</span>.upvalues(f) <span class="lua5-ctrl">do</span> <span> </span><span class="lua5-std">print</span>(k, v) <span> </span><span class="lua5-ctrl">end</span></span>
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-RSMem.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>RSMem.lua</h3><a id="&#8230;"></a><h5 class="def-hidden">&#8230;</h5>
 
&nbsp;<i class="def-ib">Переменные:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="mem.i1[p],%20%20mem.i2[p],%20%20mem.i4[p],%20%20mem.i8[p]" class="abs"></a>mem.i1[p], <span class="def-nbsp"> </span>mem.i2[p], <span class="def-nbsp"> </span>mem.i4[p], <span class="def-nbsp"> </span>mem.i8[p]
</td><td class="def-right">
 Read/write signed integer at address <b class="def-param">p</b>. Can also be called to convert a number to specified format.<br>For example, for a function that returns a signed byte:<div class="def-codeblock"><span class="lua5-note">return</span> mem.i1(mem.call(func, <span class="lua5-literal">0</span>))</div><br>This would treat function call result as a signed byte, ignoring 3 higher-order bytes.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.u1[p],%20%20mem.u2[p],%20%20mem.u4[p],%20%20mem.u8[p]" class="abs"></a>mem.u1[p], <span class="def-nbsp"> </span>mem.u2[p], <span class="def-nbsp"> </span>mem.u4[p], <span class="def-nbsp"> </span>mem.u8[p]
</td><td class="def-right">
 Read/write unsigned integer at address <b class="def-param">p</b>. Can also be called to convert a number to specified format.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.r4[p],%20%20mem.r8[p],%20%20mem.r10[p]" class="abs"></a>mem.r4[p], <span class="def-nbsp"> </span>mem.r8[p], <span class="def-nbsp"> </span>mem.r10[p]
</td><td class="def-right">
 Read/write a floating-point number at address <b class="def-param">p</b>
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="mem.string" class="abs"></a>mem.string<b class="def-largs">(</b>p, size, ReadNull<b class="def-rargs">)</b>
</td><td class="def-right">
 <span class="def-code">mem.<span class="lua5-std">string</span>(p)</span> &ndash; read null-terminated string<br><span class="def-code">mem.<span class="lua5-std">string</span>(p, size)</span> &ndash; read null-terminated string no bigger than <b class="def-param">size</b> bytes<br><span class="def-code">mem.<span class="lua5-std">string</span>(p, size, <span class="lua5-literal">true</span>)</span> &ndash; read <b class="def-param">size</b> bytes as string
</td>
</tr><tr>
<td class="def-left">
<a id="mem.call" class="abs"></a>mem.call<b class="def-largs">(</b>p, cc, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">p</b> is the function address,<br><b class="def-param">cc</b> is the number of parameters passed through registers: 0 &ndash; __stdcall or __cdecl, 1 &ndash; __thiscall, 2 &ndash; __fastcall, 3 &ndash; 3rd parameter in eax (eventhough the game doesn't use it),<br><b class="def-param">...</b> are the parameters.<br>Another way to call: <span class="def-code">mem.call<span class="lua5-ctrl">{</span>p <span class="lua5-note">=</span> <span class="lua5-literal">0x441EFD</span>, cc <span class="lua5-note">=</span> <span class="lua5-literal">0</span>, ...<span class="lua5-ctrl">}</span></span>
</td>
</tr><tr>
<td class="def-left">
<a id="mem.IgnoreProtection" class="abs"></a>mem.IgnoreProtection<b class="def-largs">(</b>on<b class="def-rargs">)</b>
</td><td class="def-right">
 Pass <b class="def-param">true</b> to be able to modify code with <b class="def-param">mem.i4</b> and such, pass <b class="def-param">false</b> after you've finished.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.prot" class="abs"></a>mem.prot<b class="def-largs">(</b>on<b class="def-rargs">)</b>
</td><td class="def-right">
 Same as above.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.malloc" class="abs"></a>mem.malloc<b class="def-largs">(</b>size<b class="def-rargs">)</b>
</td><td class="def-right">
 Allocate memory with the <b class="def-param">malloc</b> function of the game. Shouldn't be called before the game starts initializing, it may cause slowness, because the allocator isn't yet initilized. Instead call <a href="#mem.allocMM">mem.allocMM</a> or <a href="#mem.StaticAlloc">mem.StaticAlloc</a>.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.alloc" class="abs"></a>mem.alloc<b class="def-largs">(</b>size<b class="def-rargs">)</b>
</td><td class="def-right">
 Same as above.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.free" class="abs"></a>mem.free<b class="def-largs">(</b>p<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.realloc" class="abs"></a>mem.realloc<b class="def-largs">(</b>p, size<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.new" class="abs"></a>mem.new<b class="def-largs">(</b>size, f, ...<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.StaticAlloc" class="abs"></a>mem.StaticAlloc<b class="def-largs">(</b>size<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.copy" class="abs"></a>mem.copy<b class="def-largs">(</b>dest, src, count<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">count</b> can be omitted if <b class="def-param">src</b> is a string or a structure
</td>
</tr><tr>
<td class="def-left">
<a id="mem.fill" class="abs"></a>mem.fill<b class="def-largs">(</b>ptr, n, c = 0<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.cmp" class="abs"></a>mem.cmp<b class="def-largs">(</b>ptr1, ptr2, n<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.LuaAlloc" class="abs"></a>mem.LuaAlloc<b class="def-largs">(</b>size<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.func" class="abs"></a>mem.func<b class="def-largs">(</b>...<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.LoadDll" class="abs"></a>mem.LoadDll<b class="def-largs">(</b>name, cc<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.UnloadDll" class="abs"></a>mem.UnloadDll<b class="def-largs">(</b>t<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.GetProcAddress" class="abs"></a>mem.GetProcAddress<b class="def-largs">(</b>p, proc<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.structs.getdefine" class="abs"></a>mem.structs.getdefine<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.structs.getunions" class="abs"></a>mem.structs.getunions<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.structs.CustomType" class="abs"></a>mem.structs.CustomType<b class="def-largs">(</b>name, size, f<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.struct" class="abs"></a>mem.struct<b class="def-largs">(</b>f, class, p<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.GetHookSize" class="abs"></a>mem.GetHookSize<b class="def-largs">(</b>p<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">n</b>, <b class="def-param">short</b>, <b class="def-param">long</b>.<br><b class="def-param">n</b> is the number of bytes occupied by instructions at address <b class="def-param">p</b>. <b class="def-param">n</b> is 5 or more, because placing a hook requires 5 bytes.<br><b class="def-param">short</b> is <b class="def-param">true</b> if the code contains a short jump leading outside of it.<br><b class="def-param">long</b> is <b class="def-param">true</b> if the code contains a near jump or call to a relative address.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.GetInstructionSize" class="abs"></a>mem.GetInstructionSize<b class="def-largs">(</b>p<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">n</b>, <b class="def-param">short</b>, <b class="def-param">long</b>.<br><b class="def-param">n</b> is the number of bytes occupied by the instruction at address <b class="def-param">p</b>.<br><b class="def-param">short</b> is <b class="def-param">true</b> if the instruction is a short jump and it doesn't lead to itself.<br><b class="def-param">long</b> is <b class="def-param">true</b> if the instruction is a near jump or call to a relative address.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.findcode" class="abs"></a>mem.findcode<b class="def-largs">(</b>p, s<b class="def-rargs">)</b>
</td><td class="def-right">
 Takes a string to search for. Only checks for a match at the start of a new instruction.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.findcall" class="abs"></a>mem.findcall<b class="def-largs">(</b>p, fptr, p2<b class="def-rargs">)</b>
</td><td class="def-right">
 Finds a call to <b class="def-param">fpts</b> starting at <b class="def-param">p</b> and stopping at <b class="def-param">p2</b> (optional). If <b class="def-param">fptr</b> isn't specified, searches for any call instruction.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.enumcalls" class="abs"></a>mem.enumcalls<b class="def-largs">(</b>p1, p2, fptr<b class="def-rargs">)</b>
</td><td class="def-right">
 Enumerates all calls to <b class="def-param">fptr</b>. If <b class="def-param">fptr</b> isn't specified, enumerates all function calls.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.hook" class="abs"></a>mem.hook<b class="def-largs">(</b>p, f, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Primitive call hook: 5-byte call instruction that calls into Lua code
</td>
</tr><tr>
<td class="def-left">
<a id="mem.hookjmp" class="abs"></a>mem.hookjmp<b class="def-largs">(</b>p, f, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Primitive jump hook
</td>
</tr><tr>
<td class="def-left">
<a id="mem.hookalloc" class="abs"></a>mem.hookalloc<b class="def-largs">(</b>size<b class="def-rargs">)</b>
</td><td class="def-right">
 Allocate memory for code
</td>
</tr><tr>
<td class="def-left">
<a id="mem.hookfree" class="abs"></a>mem.hookfree<b class="def-largs">(</b>p<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="mem.copycode" class="abs"></a>mem.copycode<b class="def-largs">(</b>ptr, size, MemPtr, NoJumpBack, DuplicateHooks<b class="def-rargs">)</b>
</td><td class="def-right">
 Copies standard code into a memory block and then writes a jump back into the function<br>(the copied code must not contain short jumps that lead outside of it)<br><b class="def-param">MemPtr</b> can optionally specify a pre-allocated memory address.<br>If <b class="def-param">DuplicateHooks</b> is <b class="def-param">true</b>, Lua hooks are kept in both new and old code, otherwise they're moved to the new location.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.autohook" class="abs"></a>mem.autohook<b class="def-largs">(</b>p, f, size<b class="def-rargs">)</b>
</td><td class="def-right">
 <a href="#mem.hookjmp">hookjmp</a> with automatic calling of overwritten code (see <a href="#mem.copycode">copycode</a> note)<br>If the function returns <b class="def-param">true</b>, the jump to original code isn't performed
</td>
</tr><tr>
<td class="def-left">
<a id="mem.autohook2" class="abs"></a>mem.autohook2<b class="def-largs">(</b>p, f, size<b class="def-rargs">)</b>
</td><td class="def-right">
 <a href="#mem.hookjmp">hookjmp</a> with automatic calling of overwritten code (see <a href="#mem.copycode">copycode</a> note)<br>The function is called after the overwritten code<br>If the function returns <b class="def-param">true</b>, the jump to original code isn't performed
</td>
</tr><tr>
<td class="def-left">
<a id="mem.bytecodehook" class="abs"></a>mem.bytecodehook<b class="def-largs">(</b>p, code, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <a href="#mem.autohook">autohook</a>, but takes a compiled Asm code string as parameter<br><b class="def-param">code</b> can also be a function <span class="def-code">f(ptr)</span>. <b class="def-param">ptr</b> is the address of memory allocated for hook code or <b class="def-param">nil</b> (to calculate size)
</td>
</tr><tr>
<td class="def-left">
<a id="mem.bytecodehook2" class="abs"></a>mem.bytecodehook2<b class="def-largs">(</b>p, code, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <a href="#mem.autohook2">autohook2</a>, but takes a compiled Asm code string as parameter<br>See note of <a href="#mem.bytecodehook">bytecodehook</a> about <b class="def-param">code</b>
</td>
</tr><tr>
<td class="def-left">
<a id="mem.bytecodepatch" class="abs"></a>mem.bytecodepatch<b class="def-largs">(</b>p, code, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Replaces original instructions with new ones, jumping out if needed<br>See note of <a href="#mem.bytecodehook">bytecodehook</a> about <b class="def-param">code</b>
</td>
</tr><tr>
<td class="def-left">
<a id="mem.asm" class="abs"></a>mem.asm<b class="def-largs">(</b>code<b class="def-rargs">)</b>
</td><td class="def-right">
 Compiles Asm code and returns resulting binary as string
</td>
</tr><tr>
<td class="def-left">
<a id="mem.asmhook" class="abs"></a>mem.asmhook<b class="def-largs">(</b>p, code, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <a href="#mem.autohook">autohook</a>, but takes an Asm code string as parameter.<br><i><span class="def-vspace">Example</span> (from MM7):</i><div class="def-codeblock">mem.asmhook(<span class="lua5-literal">0x441D4C</span>, <span class="lua5-literal">[[</span><br><span class="lua5-tab">&#9;</span><span class="lua5-literal">cmp dword [0xE31AF0], 0</span><br><span class="lua5-tab">&#9;</span><span class="lua5-literal">jnz absolute 0x441D51</span><br><span class="lua5-literal">]]</span>)</div><br>Original Asm code:<div class="def-codeblock">.text:00441D4C    call sub_4C2E6C<br>.text:00441D51    mov ecx, offset unk_511768</div><br>Resulting Asm code:<div class="def-codeblock">.text:00441D4C    jmp @p<br>.text:00441D51    mov ecx, offset unk_511768<br><br>@p:<br>                  cmp dword [0xE31AF0], 0<br>                  jnz 0x441D51<br>                  call sub_4C2E6C<br>                  jmp 0x441D51</div><br>
</td>
</tr><tr>
<td class="def-left">
<a id="mem.asmhook2" class="abs"></a>mem.asmhook2<b class="def-largs">(</b>p, code, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Like <a href="#mem.autohook2">autohook2</a>, but takes an Asm code string as parameter<br><i><span class="def-vspace">Example</span> (from MM6):</i><div class="def-codeblock"><span class="lua5-note">local</span> p <span class="lua5-note">=</span> mem.asmhook2(<span class="lua5-literal">0x43C8E3</span>, <span class="lua5-literal">[[</span><br><span class="lua5-tab">&#9;</span><span class="lua5-literal">mov [edi], esi</span><br><span class="lua5-literal">]]</span>)</div><br>Original Asm code:<div class="def-codeblock">.text:0043C8E3    mov edi, offset CurrentEvtLines<br>.text:0043C8E8    rep movsd</div><br>Resulting Asm code:<div class="def-codeblock">.text:0043C8E3    jmp @p<br>.text:0043C8E8    rep movsd<br><br>@p:<br>                  mov edi, offset CurrentEvtLines<br>                  mov [edi], esi<br>                  jmp 0x43C8E8</div><br>
</td>
</tr><tr>
<td class="def-left">
<a id="mem.asmpatch" class="abs"></a>mem.asmpatch<b class="def-largs">(</b>p, code, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Replaces original instructions with new ones, jumping out if needed
</td>
</tr><tr>
<td class="def-left">
<a id="mem.asmproc" class="abs"></a>mem.asmproc<b class="def-largs">(</b>code<b class="def-rargs">)</b>
</td><td class="def-right">
 Creates an Asm function
</td>
</tr><tr>
<td class="def-left">
<a id="mem.hookfunction" class="abs"></a>mem.hookfunction<b class="def-largs">(</b>p, nreg, nstack, f, size<b class="def-rargs">)</b>
</td><td class="def-right">
 Set hook at the beginning of a function, allows calling the original function (see <a href="#mem.copycode">copycode</a> note)<br>Function <b class="def-param">f</b> is as follows: <span class="def-code">f(d, def, params...)</span><br>Here <b class="def-param">d</b> is HookData object, <b class="def-param">def</b> is the default function defined as <span class="def-code">def(params...)</span> and <b class="def-param">params...</b> are the parameters.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.hookcall" class="abs"></a>mem.hookcall<b class="def-largs">(</b>p, nreg, nstack, f<b class="def-rargs">)</b>
</td><td class="def-right">
 Replaces an existing CALL instruction and uses the same protocol as <a href="#mem.hookfunction">hookfunction</a>
</td>
</tr><tr>
<td class="def-left">
<a id="mem.luaproc" class="abs"></a>mem.luaproc<b class="def-largs">(</b>f, nreg, nstack<b class="def-rargs">)</b>
</td><td class="def-right">
 Creates a Lua callback (because any use of FFI for function calls leads to random bugs)
</td>
</tr><tr>
<td class="def-left">
<a id="mem.nop" class="abs"></a>mem.nop<b class="def-largs">(</b>p, n<b class="def-rargs">)</b>
</td><td class="def-right">
 Writes <b class="def-param">n</b> NOPs. If <b class="def-param">n</b> is omitted, replaces a single instruction at the given address with NOPs
</td>
</tr><tr>
<td class="def-left">
<a id="mem.nop2" class="abs"></a>mem.nop2<b class="def-largs">(</b>p, p2<b class="def-rargs">)</b>
</td><td class="def-right">
 Writes NOPs from <b class="def-param">p</b> to <b class="def-param">p2</b> - 1
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-RSPersist.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>RSPersist.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="persist" class="abs"></a><h5 class="def-h5">persist</h5><b class="def-largs">(</b>t, perm<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="unpersist" class="abs"></a><h5 class="def-h5">unpersist</h5><b class="def-largs">(</b>buf, perm, data<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-dump.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>dump.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="dump" class="abs"></a><h5 class="def-h5">dump</h5><b class="def-largs">(</b>t, depth, exact, detectClones, limit<b class="def-rargs">)</b>
</td><td class="def-right">
 Useful for debugging and experiments. Shows <b class="def-param">t</b>, expanding all tables in it up to the <b class="def-param">depth</b> level. In <b class="def-param">exact</b> = <b class="def-param">true</b> mode outputs proper Lua code.
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-events.lua-"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>events.lua</h3>
 
&nbsp;<i class="def-ib">Переменные:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="VFlipUnfixed" class="abs"></a><h5 class="def-h5">VFlipUnfixed</h5>
</td><td class="def-right">
 <span class="def-ver">[MM6]</span> <span class="def-nbsp"> </span>Textures on horizontal outdoor surfaces are flipped vertically. This is default to preserve look of standard maps.
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="HookManager" class="abs"></a><h5 class="def-h5">HookManager</h5><b class="def-largs">(</b>ref<b class="def-rargs">)</b>
</td><td class="def-right">
 Allows switching all hooks installed by it on/off. <b class="def-param">ref</b> table is used for substitutions in Asm code: "%key%" is replaced with <span class="def-code">ref[key]</span>, "%%" is replaced with "%". All hook functions are supported, but memory-editing arrays are supported through <b class="def-param">set</b> function.<br><span class="def-vspace">Example</span> 1 &ndash; substitution:<div class="def-codeblock"><span class="lua5-note">local</span> ArtifactBonus <span class="lua5-note">=</span> mem.StaticAlloc(<span class="lua5-literal">8</span>)<br>HookManager<span class="lua5-ctrl">{</span><br><span class="lua5-tab">&#9;</span>buf <span class="lua5-note">=</span> ArtifactBonus,<br><span class="lua5-ctrl">}</span>.asmhook2(<span class="lua5-literal">0x48F60A</span>, <span class="lua5-literal">[[</span><br><span class="lua5-tab">&#9;</span><span class="lua5-literal">mov [%buf%], eax</span><br><span class="lua5-tab">&#9;</span><span class="lua5-literal">mov [%buf%+4], ecx</span><br><span class="lua5-literal">]]</span>)</div><br><span class="def-vspace">Example</span> 2 &ndash; on/off:<div class="def-codeblock"><span class="lua5-note">local</span> hooks<br><span class="lua5-ctrl">function</span> ArcomageRequireDeck(on)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">if</span> hooks <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>hooks.Switch(<span class="lua5-ctrl">not</span> on)<br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">elseif</span> <span class="lua5-ctrl">not</span> on <span class="lua5-ctrl">then</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>hooks <span class="lua5-note">=</span> HookManager()<br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>hooks.nop(<span class="lua5-literal">0x4B3A06</span>) <span> </span><span class="lua5-comment">-- no arcomage deck requirement</span><br><span class="lua5-tab">&#9;</span><span class="lua5-tab">&#9;</span>hooks.nop(<span class="lua5-literal">0x4B8A31</span>) <span> </span><span class="lua5-comment">-- no arcomage deck requirement</span><br><span class="lua5-tab">&#9;</span><span class="lua5-ctrl">end</span><br><span class="lua5-ctrl">end</span></div><br><span class="def-vspace">Example</span> 3 &ndash; editing memory:<div class="def-codeblock"><span class="lua5-note">local</span> hooks <span class="lua5-note">=</span> HookManager()<br>hooks.set(<span class="lua5-str">'i4'</span>, <span class="lua5-literal">0x469BBE</span><span class="lua5-operator">+</span><span class="lua5-literal">1</span>, <span class="lua5-literal">0x10000</span>) <span> </span><span class="lua5-comment">-- instead of mem.prot(true); <span> </span>mem.i4[0x469BBE+1] = 0x10000; <span> </span>mem.prot(false)</span><br>hooks.set(<span class="lua5-str">'u2'</span>, <span class="lua5-literal">0x472FB7</span>, <span class="lua5-literal">0x9090</span>) <span> </span><span class="lua5-comment">-- instead of mem.prot(true); <span> </span>mem.u2[0x472FB7] = 0x9090; <span> </span>mem.prot(false)</span><br>hooks.asmpatch(<span class="lua5-literal">0x472F5E</span>, <span class="lua5-str">"add eax, ecx"</span>, <span class="lua5-literal">2</span>)<br>DisableVFlipFix <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span>on<span class="lua5-ctrl">|</span> hooks.Switch(<span class="lua5-ctrl">not</span> on)</div><br><span class="def-vspace">P.S.</span> Don't try to run the code of these examples, they are for illustration.
</td>
</tr><tr>
<td class="def-left">
<a id="CallDefaultWindowProc" class="abs"></a><h5 class="def-h5">CallDefaultWindowProc</h5><b class="def-largs">(</b>Msg, WParam, LParam<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="EnableLuaDataCompression" class="abs"></a><h5 class="def-h5">EnableLuaDataCompression</h5><b class="def-largs">(</b>on<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="FixVFlip" class="abs"></a><h5 class="def-h5">FixVFlip</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 <span class="def-ver">[MM6]</span> <span class="def-nbsp"> </span>Turns off texture flip on horizontal outdoor surfaces. Note that the editor accounts for vertical flip, so you probably shouldn't ever call this function.
</td>
</tr><tr>
<td class="def-left">
<a id="EnableMonstersCastingAnimation" class="abs"></a><h5 class="def-h5">EnableMonstersCastingAnimation</h5><b class="def-largs">(</b>on<b class="def-rargs">)</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span> Makes monsters play their regular attack animation rather then idle animation when casting damage spells if <b class="def-param">on</b> is <b class="def-param">true</b>.
</td>
</tr><tr>
<td class="def-left">
<a id="WhoHitMonster" class="abs"></a><h5 class="def-h5">WhoHitMonster</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 If a monster is being attacked, returns <b class="def-param">t</b>, <b class="def-param">TargetMonsterIndex</b>.<br><a href="#structs.Player">t.Player</a> and <b class="def-param">t.PlayerIndex</b> are set if monster is attacked by the party.<br><a href="#structs.MapMonster">t.Monster</a>, <b class="def-param">t.MonsterIndex</b> and <a href="#const.MonsterAction">t.MonsterAction</a> fields are set if monster is attacked by another monster.<br><a href="#structs.MapObject">t.Object</a> and <b class="def-param">t.ObjectIndex</b> are set if monster is hit by a missile.<br>Note that <b class="def-param">t.Object</b> can be set at the same time as <b class="def-param">t.Monster</b> or <b class="def-param">t.Player</b>.
</td>
</tr><tr>
<td class="def-left">
<a id="WhoHitPlayer" class="abs"></a><h5 class="def-h5">WhoHitPlayer</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 If a player is being attacked, returns <b class="def-param">t</b>, <b class="def-param">PlayerSlot</b>.<br><a href="#structs.MapMonster">t.Monster</a>, <b class="def-param">t.MonsterIndex</b> and <a href="#const.MonsterAction">t.MonsterAction</a> fields are set if player is attacked by a monster.<br><a href="#structs.MapObject">t.Object</a> and <b class="def-param">t.ObjectIndex</b> are set if player is hit by a missile.<br>Note that <b class="def-param">t.Object</b> and <b class="def-param">t.Monster</b> can be set at the same time if the projectile was fired by a monster.
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-evt.lua-"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>evt.lua</h3>
 
&nbsp;<i class="def-ib">Переменные:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="vars" class="abs"></a><h5 class="def-h5">vars</h5>
</td><td class="def-right">
 Variables that are stored in saved game
</td>
</tr><tr>
<td class="def-left">
<a id="mapvars" class="abs"></a><h5 class="def-h5">mapvars</h5>
</td><td class="def-right">
 Variables stored in a saved game that belong to current map. On map refill <b class="def-param">mapvars</b> are cleared, but old table is stored in <a href="#structs.GameMap.Refilled">Map.Refilled</a>.
</td>
</tr><tr>
<td class="def-left">
<a id="evt.CanShowTopic" class="abs"></a><h5 class="def-h5">evt.CanShowTopic</h5>[]
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span> <span class="def-nbsp"> </span>Functions that can return <b class="def-param">true</b> or <b class="def-param">false</b> to change topic visibility
</td>
</tr><tr>
<td class="def-left">
<a id="evt.map" class="abs"></a><h5 class="def-h5">evt.map</h5>[]
</td><td class="def-right">
 Event handlers<br><br>Event indexes convention:<br>Indexes 20000 &ndash; 22999 are for sprite events, so that event (20000 + i) corresponds to <a href="#structs.GameMap.Sprites">Map.Sprites</a>[i].
</td>
</tr><tr>
<td class="def-left">
<a id="evt.hint" class="abs"></a><h5 class="def-h5">evt.hint</h5>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.MazeInfo" class="abs"></a><h5 class="def-h5">evt.MazeInfo</h5>
</td><td class="def-right">
 <span class="def-ver">[MM6]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="evt.str" class="abs"></a><h5 class="def-h5">evt.str</h5>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.house" class="abs"></a><h5 class="def-h5">evt.house</h5>[]
</td><td class="def-right">
 House name used for hint
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Player" class="abs"></a><h5 class="def-h5">evt.Player</h5>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.CurrentPlayer" class="abs"></a><h5 class="def-h5">evt.CurrentPlayer</h5>
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="evt.InGlobal" class="abs"></a><h5 class="def-h5">evt.InGlobal</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.ForPlayer-" class="abs"></a><h5 class="def-h5">evt.ForPlayer</h5><b class="def-largs">(</b>n<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.HouseDoor" class="abs"></a><h5 class="def-h5">evt.HouseDoor</h5><b class="def-largs">(</b>evtId, houseId<b class="def-rargs">)</b>
</td><td class="def-right">
 Here's what it does:<div class="def-codeblock">evt.house[evtId] <span class="lua5-note">=</span> houseId<br>evt.map[evtId] <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span>evt.EnterHouse(houseId)<br><span class="lua5-ctrl">end</span></div><br>
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-evtdeco.lua"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>evtdeco.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="evt.Decompile" class="abs"></a><h5 class="def-h5">evt.Decompile</h5><b class="def-largs">(</b>fileName, funcMode, outFile, asTxt<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-main.lua-"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>main.lua</h3>
 
&nbsp;<i class="def-ib">Переменные:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="mem.EditPChar" class="abs"></a><h5 class="def-h5">mem.EditPChar</h5>
</td><td class="def-right">
 Editable PChar
</td>
</tr><tr>
<td class="def-left">
<a id="mem.ConstPChar" class="abs"></a><h5 class="def-h5">mem.ConstPChar</h5>
</td><td class="def-right">
 Editable write-protected PChar
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="mem.allocMM" class="abs"></a><h5 class="def-h5">mem.allocMM</h5><b class="def-largs">(</b>size<b class="def-rargs">)</b>
</td><td class="def-right">
 Calls allocation function that MM uses for most of things. Note that my patch intersects these calls and uses Delphi memory manager to do the allocation.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.freeMM" class="abs"></a><h5 class="def-h5">mem.freeMM</h5><b class="def-largs">(</b>p<b class="def-rargs">)</b>
</td><td class="def-right">
 Free memory allocated by <a href="#mem.allocMM">mem.allocMM</a>.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.reallocMM" class="abs"></a><h5 class="def-h5">mem.reallocMM</h5><b class="def-largs">(</b>p, OldSize, NewSize, NoFree<b class="def-rargs">)</b>
</td><td class="def-right">
 Resizes memory, reallocating as necessary, preserving content. Returns new (or the same if no reallocation occured) address.<br>If <b class="def-param">NoFree</b> is <b class="def-param">true</b>, the memory at <b class="def-param">p</b> isn't freed. This is useful for extending static arrays of the game.<br><b class="def-param">p</b> can be a sctrucure, in which case its '?ptr' field is modified automatically.
</td>
</tr><tr>
<td class="def-left">
<a id="mem.resizeArrayMM" class="abs"></a><h5 class="def-h5">mem.resizeArrayMM</h5><b class="def-largs">(</b>t, n<b class="def-rargs">)</b>
</td><td class="def-right">
 Resizes an array allocated with <a href="#mem.allocMM">mem.allocMM</a> function. <b class="def-param">n</b> is the new count.
</td>
</tr><tr>
<td class="def-left">
<a id="MessageBox" class="abs"></a><h5 class="def-h5">MessageBox</h5><b class="def-largs">(</b>text, caption, typ<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">typ</b> can be a numeric value that MessageBox WinAPI function accepts or one of predefined strings: "error" (OK), "warning" (OK), "warn" (OK/Cancel), "confirm" (OK/Cancel), "confirmsnd" (OK/Cancel). Returns a number returned by the WinAPI funciton: 1 &ndash; OK, 2 &ndash; Cancel.
</td>
</tr><tr>
<td class="def-left">
<a id="debug.Message" class="abs"></a><h5 class="def-h5">debug.Message</h5><b class="def-largs">(</b>...<b class="def-rargs">)</b>
</td><td class="def-right">
 Shows debug console. Message includes file name and line number, and than each argument is added to the message as a new line of text.
</td>
</tr><tr>
<td class="def-left">
<a id="debug.ErrorMessage" class="abs"></a><h5 class="def-h5">debug.ErrorMessage</h5><b class="def-largs">(</b>msg<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ErrorMessage" class="abs"></a><h5 class="def-h5">ErrorMessage</h5><b class="def-largs">(</b>msg<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="AddScriptsPath" class="abs"></a><h5 class="def-h5">AddScriptsPath</h5><b class="def-largs">(</b>s<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="ReloadLocalization" class="abs"></a><h5 class="def-h5">ReloadLocalization</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-npc.lua-"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>npc.lua</h3>
 
&nbsp;<i class="def-ib">Функции:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="FindHiredNPC" class="abs"></a><h5 class="def-h5">FindHiredNPC</h5><b class="def-largs">(</b><a href="#structs.NPC">NPC</a><b class="def-rargs">)</b>
</td><td class="def-right">
 Finds the prototype NPC in Game.NPC array for the supplied hired NPC. Returns <b class="def-param">nil</b> if it's a street NPC.
</td>
</tr><tr>
<td class="def-left">
<a id="HireAllPeasants" class="abs"></a><h5 class="def-h5">HireAllPeasants</h5><b class="def-largs">(</b>on<b class="def-rargs">)</b>
</td><td class="def-right">
 <span class="def-ver">[MM7]</span> Normally first level of each peasant kind just talls you some news and can't be hired. Pass <b class="def-param">on</b> = <b class="def-param">true</b> to this function to make all peasants hireable.
</td>
</tr><tr>
<td class="def-left">
<a id="GetCurrentNPC" class="abs"></a><h5 class="def-h5">GetCurrentNPC</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns NPC index
</td>
</tr><tr>
<td class="def-left">
<a id="GetCurrentAnyNPC" class="abs"></a><h5 class="def-h5">GetCurrentAnyNPC</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <a href="#structs.NPC">NPC</a>, Index, Kind
</td>
</tr><tr>
<td class="def-left">
<a id="ArcomageRequireDeck" class="abs"></a><h5 class="def-h5">ArcomageRequireDeck</h5><b class="def-largs">(</b>on<b class="def-rargs">)</b>
</td><td class="def-right">
 <span class="def-ver">[MM7]</span> Pass <b class="def-param">false</b> to remove the deck requirement.
</td>
</tr><tr>
<td class="def-left">
<a id="TrainPerWeek" class="abs"></a><h5 class="def-h5">TrainPerWeek</h5><b class="def-largs">(</b>n<b class="def-rargs">)</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span> Set number of levels the party can train per training session. <b class="def-param">0</b> means any number of levels, as in MM6. <b class="def-param">1</b> is MM7+ default. If <b class="def-param">n</b> isn't specified, returns current setting.
</td>
</tr><tr>
<td class="def-left">
<a id="SkillToHouseTopic" class="abs"></a><h5 class="def-h5">SkillToHouseTopic</h5><b class="def-largs">(</b>i<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="HouseTopicToSkill" class="abs"></a><h5 class="def-h5">HouseTopicToSkill</h5><b class="def-largs">(</b>i<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Core-timers.lua-"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Core\ </span>timers.lua</h3>
 &nbsp;<i class="def-ib">Examples:</i><br><br>Damage selected player every minute:<div class="def-codeblock">Timer(<span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span>evt.DamagePlayer<span class="lua5-ctrl">{</span>Damage <span class="lua5-note">=</span> <span class="lua5-literal">1</span><span class="lua5-ctrl">}</span><br><span class="lua5-ctrl">end</span>, const.Minute)</div><br><br>Check some condition (e.g. that you killed all monsters) every 5 minutes, including the moment you enter the map:<div class="def-codeblock">Timer(CheckCondition, <span class="lua5-literal">5</span><span class="lua5-operator">*</span>const.Minute, <span class="lua5-literal">true</span>)</div><br><br>Refill a well every week on Tuesday at 3 AM:<div class="def-codeblock">RefillTimer(RefillWell, const.Week, const.Day <span class="lua5-operator">+</span> <span class="lua5-literal">3</span><span class="lua5-operator">*</span>const.Hour)</div><br><br>Make "eat" sound at 3 AM every day:<div class="def-codeblock">Timer(<span class="lua5-ctrl">function</span>()<br><span class="lua5-tab">&#9;</span>evt.PlaySound(Game.Version <span class="lua5-operator">==</span> <span class="lua5-literal">8</span> <span class="lua5-ctrl">and</span> <span class="lua5-literal">144</span> <span class="lua5-ctrl">or</span> <span class="lua5-literal">211</span>)<br><span class="lua5-ctrl">end</span>, const.Day, <span class="lua5-literal">3</span><span class="lua5-operator">*</span>const.Hour, <span class="lua5-literal">false</span>)</div><br><br>
&nbsp;<i class="def-ib">Переменные:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="Keys" class="abs"></a><h5 class="def-h5">Keys</h5>[<a href="#const.Keys">key</a>]
</td><td class="def-right">
 Example 1 (recommended):<div class="def-codeblock"><span class="lua5-ctrl">function</span> Keys.F2(t)<br><span> </span><span> </span>Message(<span class="lua5-str">"F2 pressed"</span>)<br><span class="lua5-ctrl">end</span></div><br>Example 2 (not recommended):<div class="def-codeblock">Keys[const.Keys.F2] <span class="lua5-note">=</span> <span class="lua5-ctrl">function</span>()<br><span> </span><span> </span>Message(<span class="lua5-str">"F2 pressed"</span>)<br><span class="lua5-ctrl">end</span></div><br>These examples are actually handled differently. The first one is equivalent to using <a href="#events.KeyDown">events.KeyDown</a> and checking <b class="def-param">t.Key</b>.<br>The second is mostly for backward compatibility. Instead of relying on messages, it checks key state on every frame and calls the function if the key was pressed. It may miss a very short key press.
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="timeGetTime" class="abs"></a><h5 class="def-h5">timeGetTime</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns time since Windows has started in milliseconds
</td>
</tr><tr>
<td class="def-left">
<a id="Timer" class="abs"></a><h5 class="def-h5">Timer</h5><b class="def-largs">(</b>f, Period = const.Minute, [Start,] [PastAware,] [Exact]<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">f</b> = <span class="def-code"><span class="lua5-ctrl">function</span>(TriggerTime, Period, LastTick, Tick)</span>:<br><span class="def-nbsp">  </span>Function to call when the timer is triggered.<br><b class="def-param">Start</b> is <span class="def-code">Game.Time <span class="lua5-operator">+</span> Period</span> if not specified (or <span class="def-code">Game.Time</span> if <b class="def-param">PastAware</b> = <b class="def-param">true</b>).<br><b class="def-param">PastAware</b> = remember last visit time and fire right away if timer condition was met in the period of your absence.<br><span class="def-nbsp">  </span>If not specified, it's <b class="def-param">true</b> if <b class="def-param">Start</b> is specified, <b class="def-param">false</b> otherwise.<br>Possible <b class="def-param">Exact</b> values:<br><span class="def-nbsp">  </span>false: <span class="def-nbsp"> </span>re-fires after <b class="def-param">Period</b> passes since last invocation (this is the default if <b class="def-param">Start</b> is not specified).<br><span class="def-nbsp">  </span>true: <span class="def-nbsp"> </span>fires whenever (start + period*N) line is crossed (this is the default if <b class="def-param">Start</b> is specified).<br><span class="def-nbsp">  </span><span class="def-code"><span class="lua5-ctrl">function</span>(TriggerTime, Period, LastTick, IsInit)</span>: <span class="def-nbsp"> </span>returns next trigger time when called.<br><span class="def-nbsp">    </span><b class="def-param">IsInit</b> = <b class="def-param">true</b> if it's called by Timer function itself which happens if <b class="def-param">Start</b> has already passed.<br>Note that the timer remembers last time you were in the location, so for example,<br>an exact weekly timer would fire right away if you haven't visited the map for a week.
</td>
</tr><tr>
<td class="def-left">
<a id="RefillTimer" class="abs"></a><h5 class="def-h5">RefillTimer</h5><b class="def-largs">(</b>f, Period = const.Day, Start<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">f</b> = <span class="def-code"><span class="lua5-ctrl">function</span>(TriggerTime, Period, LastTick, Tick)</span>:<br><span class="def-nbsp">  </span>Called when the timer is triggered.<br>If <b class="def-param">Start</b> is not specified, triggers when <b class="def-param">Period</b> passes since last time it was triggered and on map refill.<br>If <b class="def-param">Start</b> is specified, acts like exact Timer, but also fires at map refills.
</td>
</tr><tr>
<td class="def-left">
<a id="Sleep" class="abs"></a><h5 class="def-h5">Sleep</h5><b class="def-largs">(</b>time, realtime, screens<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="Sleep2" class="abs"></a><h5 class="def-h5">Sleep2</h5><b class="def-largs">(</b>f, time, realtime, screens<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="RemoveTimer" class="abs"></a><h5 class="def-h5">RemoveTimer</h5><b class="def-largs">(</b>f<b class="def-rargs">)</b>
</td><td class="def-right">
 You can remove the timer being executed by calling this function without a parameter
</td>
</tr><tr>
<td class="def-left">
<a id="Keys.IsPressed" class="abs"></a><h5 class="def-h5">Keys.IsPressed</h5><b class="def-largs">(</b><a href="#const.Keys">key</a><b class="def-rargs">)</b>
</td><td class="def-right">
 String representations of <a href="#const.Keys">const.Keys</a> are also supported, e.g. <span class="def-code">Keys.IsPressed<span class="lua5-str">"SHIFT"</span></span>
</td>
</tr><tr>
<td class="def-left">
<a id="Keys.IsToggled" class="abs"></a><h5 class="def-h5">Keys.IsToggled</h5><b class="def-largs">(</b><a href="#const.Keys">key</a><b class="def-rargs">)</b>
</td><td class="def-right">
 String representations of <a href="#const.Keys">const.Keys</a> are also supported, e.g. <span class="def-code">Keys.IsToggled<span class="lua5-str">"CAPSLOCK"</span></span>
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Modules-Faces.lua-"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Modules\ </span>Faces.lua</h3>
 Together with PaperDoll.lua can be used to create new character portraits and voices, or add them from other games. Unlike PaperDoll.lua, everything here is 0-based. If included, creates and/or loads "Faces.txt" and "Face Animations.txt" data tables.<br><br>Including the module:<div class="def-codeblock"><span class="lua5-note">local</span> P <span class="lua5-note">=</span> <span class="lua5-std">require</span><span class="lua5-str">"Faces"</span></div><br><br>You can add extra columns into "Faces.txt":<br><b class="def-param"><span class="def-vspace">AllowVoice</b></span> &ndash; <span class="def-ver">[MM7+]</span> Enable/disable selecting voice on start (if not specified, the value of <b class="def-param">Allow</b> is used).<br><b class="def-param">Voice</b> &ndash; <span class="def-ver">[MM7+]</span> Use specified default voice instead of the one with the same number as the face.<br><b class="def-param">Expressions</b> &ndash; Expressions list to use. Default is "Expressions". Use if you combine MM6 faces with faces from other games.<br><b class="def-param">Sounds</b> &ndash; Sounds list to use. Default is "Sounds". Use if you combine MM6 voices with faces from other games.<br><b class="def-param">SoundsOffset</b> &ndash; This value will be added to the sound id (the one being searched in dsounds.bin). You will need this if you add voices from all 3 games.<br><br>Note that <b class="def-param">AllowVoice</b>, <b class="def-param">Female</b>, <b class="def-param">Sounds</b> and sound counts are properties of voice, the rest are properties of face. If you leave any field empty, the default value would be used.<br><br>You can add extra columns into "Face Animations.txt". If their names are valid identifiers, thay would be read as lists. E.g. imagine you've added MM6 characters into another game &ndash; then you can add "Expressions6" and "Sounds6" columns there and set <b class="def-param">Expressions</b> and <b class="def-param">Sounds</b> columns for these characters to "Expressions6" and "Sounds6" respectively. You would however also need to join PFT.txt files and replace indexes in expressions lists accordingly.<br><br>The way animations work: random expression is picked from the list in "Expressions" column of "Face Animations.txt" (or "Expressions6" column in the above example). This number is looked up in PFT.txt and the animation is played. Expression 21 is special &ndash; it shows the character speaking the voice line as long as it lasts.<br>When it comes to voice, sound index is picked at random from the "Sounds" column list (or "Sounds7" in the above example), then sounds count for the voice is looked up and one of the variations of the sound is played. Up to 2 variations are supported.<br><br>
&nbsp;<i class="def-ib">Переменные:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="package.loaded.Faces.ExtraFields" class="abs"></a><h5 class="def-h5">P<span class="def-pad-dot">.</span>ExtraFields</h5>
</td><td class="def-right">
 You can define you own functions to read extra fields from Faces.txt
</td>
</tr><tr>
<td class="def-left">
<a id="package.loaded.Faces.Faces" class="abs"></a><h5 class="def-h5">P<span class="def-pad-dot">.</span>Faces</h5>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="package.loaded.Faces.FaceAnimations" class="abs"></a><h5 class="def-h5">P<span class="def-pad-dot">.</span>FaceAnimations</h5>
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="package.loaded.Faces.Update" class="abs"></a><h5 class="def-h5">P<span class="def-pad-dot">.</span>Update</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Call it if you change <b class="def-param">Faces</b> table manually. Triggers <a href="#events.UpdateFaces">UpdateFaces</a> event.
</td>
</tr></tbody>
</table>
<br>

<br>
<a id="Modules-PaperDoll.lua-"></a><table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3><span class="def-shadow">Modules\ </span>PaperDoll.lua</h3>
 To use, first place the PaperDol.txt file <a href="https://github.com/GrayFace/MMExtension/tree/master/Misc/Paper%20Doll">from here</a> corresponding to your game of choice into DataFiles folder (create it right next to Data folder of the game if it doesn't exist). Modify it as needed. You'll later distribute this file inside a LOD achive of your mod.<br><br>Including the module:<div class="def-codeblock"><span class="lua5-std">require</span><span class="lua5-str">"PaperDoll"</span></div><br><br>How it works:<br><a href="#PaperDollDrawOrder">PaperDollDrawOrder</a> defines the order in which pieces of body and clothing are drawn. <a href="#events.PaperDollHiddenPieces">PaperDollHiddenPieces</a> event can be used to change which pieces would be drawn. PaperDol.txt can specify custom graphics and coordinates for any piece. Lines further in the table take precedence. If <b class="def-param">Doll</b> includes current player, <b class="def-param">Piece</b> matches piece being drawn and <b class="def-param">ItemPicture</b> matches picture of the item being drawn (or ":Player" for a piece of player body), specified <b class="def-param">Image</b>, <b class="def-param">X</b> and <b class="def-param">Y</b> values are used.<br>A special case is when you specify item slot as <b class="def-param">ItemPicture</b>, e.g. ":Armor". In this case <b class="def-param">X</b> and <b class="def-param">Y</b> act as offsets added to whatever coordinates are specified for the item in <a href="#structs.Player.ItemArmor">Armor</a> slot. If you specify <b class="def-param">Mul</b> for a slot, coordinates of the item are multiplied by it. It can also contain 4 values "a1,a2,a3,a4" that work this way: <span class="def-code">x <span class="lua5-note">=</span> a1<span class="lua5-operator">*</span>X <span class="lua5-operator">+</span> a2<span class="lua5-operator">*</span>Y; y <span class="lua5-note">=</span> a3<span class="lua5-operator">*</span>X <span class="lua5-operator">+</span> a4<span class="lua5-operator">*</span>Y</span>. Setting <b class="def-param">Mul</b> to "0,-1,1,0" or similar 90 degree rotation matrices would cause the item to be drawn rotated in MM8.<br><br>Special <b class="def-param">ItemPicture</b> values:<br>item1 &ndash; override "item1" graphics<br>:Player &ndash; override piece of the body<br>:Player:Armor &ndash; override piece of the body if any Armor is equipped<br>:Player.item1 &ndash; override piece of the body if "item1" is equipped<br>:Player:Armor.item1 &ndash; override piece of the body if "item1" is equipped as Armor<br>:Belt:Armor.item1 &ndash; override any belt if "item1" if equipped as Armor<br>item2:Belt:Armor &ndash; override "item2" equipped as Belt if anything is equipped as Armor<br>item2:Belt.item1 &ndash; override "item2" equipped as Belt if "item1" is equipped<br>item2:Belt:Armor.item1 &ndash; override "item2" equipped as Belt if "item1" is equipped as Armor<br><br>
&nbsp;<i class="def-ib">Переменные:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="PaperDollCategories" class="abs"></a><h5 class="def-h5">PaperDollCategories</h5>
</td><td class="def-right">
 Maps category name to a <span class="def-code"><span class="lua5-ctrl">function</span>(i)</span> that returns <b class="def-param">true</b> if player face number <b class="def-param">i</b> belongs to the category. Use <a href="#PaperDollAddBodies">PaperDollAddBodies</a> or <a href="#PaperDollAddRace">PaperDollAddRace</a> to populate in a custom way.
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollMainPieces" class="abs"></a><h5 class="def-h5">PaperDollMainPieces</h5>
</td><td class="def-right">
 Specifies which pieces inherit item graphics by default. Default:<br><span class="def-code"><span class="lua5-ctrl">{</span>ItemExtraHand <span class="lua5-note">=</span> <span class="lua5-ctrl">{</span>hand2 <span class="lua5-note">=</span> <span class="lua5-literal">true</span>, shield <span class="lua5-note">=</span> <span class="lua5-literal">true</span><span class="lua5-ctrl">}</span><span class="lua5-ctrl">}</span></span><br>For slots not specified here piece with empty name is the main one.
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollBaseRace" class="abs"></a><h5 class="def-h5">PaperDollBaseRace</h5>
</td><td class="def-right">
 <span class="def-ver">[MM7]</span> Races that share the "Base" paper doll. Default:<br><span class="def-code"><span class="lua5-ctrl">{</span>[const.Race.Human] <span class="lua5-note">=</span> <span class="lua5-literal">true</span>, [const.Race.Goblin] <span class="lua5-note">=</span> <span class="lua5-literal">true</span>, [const.Race.Elf] <span class="lua5-note">=</span> <span class="lua5-literal">true</span><span class="lua5-ctrl">}</span></span><br>After altering it, call this command:<br><span class="def-code">PaperDollAddRace(<span class="lua5-str">'Base'</span>, PaperDollBaseRace)</span>
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollSpecialBodies" class="abs"></a><h5 class="def-h5">PaperDollSpecialBodies</h5>
</td><td class="def-right">
 After altering it, call <a href="#PaperDollAddBodies">PaperDollAddBodies</a>. Here are default MM8 values:<br><span class="def-code"><span class="lua5-ctrl">{</span>[<span class="lua5-literal">20</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Minotaur'</span>, [<span class="lua5-literal">21</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Minotaur'</span>, [<span class="lua5-literal">22</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Troll'</span>, [<span class="lua5-literal">23</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Troll'</span>, [<span class="lua5-literal">24</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Dragon'</span>, [<span class="lua5-literal">25</span>] <span class="lua5-note">=</span> <span class="lua5-str">'Dragon'</span><span class="lua5-ctrl">}</span></span>
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollMode" class="abs"></a><h5 class="def-h5">PaperDollMode</h5>
</td><td class="def-right">
 Defaults to <a href="#structs.GameStructure.Version">Game.Version</a>. If set to <b class="def-param">8</b>, spears aren't treated as 2-handed weapons. If set to <b class="def-param">6</b> prior to including <b class="def-param">PaperDoll</b> module, <a href="#PaperDollDrawOrder">PaperDollDrawOrder</a> would be different.
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollDrawOrder" class="abs"></a><h5 class="def-h5">PaperDollDrawOrder</h5>
</td><td class="def-right">
 Default (depending on <a href="#PaperDollMode">PaperDollMode</a>):<br><span class="def-code"><span class="lua5-ctrl">{</span><span class="lua5-str">'BackDoll'</span>, <span class="lua5-str">'BackDoll.menu'</span>, <span class="lua5-str">'BackDoll.game'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'Bow'</span>, <span class="lua5-str">'Cloak'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'Armor.back'</span>, <span class="lua5-str">'Belt.back'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'Player'</span>, <span class="lua5-str">'Player.arm1'</span>, <span class="lua5-str">'Player.arm1f'</span>, <span class="lua5-str">'Player.arm2hb'</span>, <span class="lua5-str">'Player.arm2f'</span>, <span class="lua5-str">'Player.shield'</span>, <span class="lua5-str">'Player.hair2'</span>, <span class="lua5-str">'Player.hair'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'Armor.back2'</span>,<br><span class="lua5-tab">&#9;</span>mm6 <span class="lua5-ctrl">and</span> <span class="lua5-str">'Helm'</span> <span class="lua5-ctrl">or</span> <span class="lua5-str">'Helm.back'</span>, mm6 <span class="lua5-ctrl">and</span> <span class="lua5-str">'Boots'</span> <span class="lua5-ctrl">or</span> <span class="lua5-str">'Boots.back'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'Armor'</span>, <span class="lua5-str">'Armor.arm1'</span>, <span class="lua5-str">'Armor.arm1f'</span>,<br><span class="lua5-tab">&#9;</span>mm6 <span class="lua5-ctrl">and</span> <span class="lua5-str">'Boots.front'</span> <span class="lua5-ctrl">or</span> <span class="lua5-str">'Boots'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'Belt'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'Player.arm2'</span>, <span class="lua5-str">'Player.arm2h'</span>, <span class="lua5-str">'Armor.arm2'</span>, <span class="lua5-str">'Armor.arm2h'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'Cloak.scarf'</span>, <span class="lua5-str">'Player.scarf'</span>, mm6 <span class="lua5-ctrl">and</span> <span class="lua5-str">'Helm.scarf'</span> <span class="lua5-ctrl">or</span> <span class="lua5-str">'Helm'</span>, <span class="lua5-str">'Cloak.scarf2'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'MainHand'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'Player.hand1a'</span>, <span class="lua5-str">'Player.hand1'</span>, <span class="lua5-str">'Armor.hand1a'</span>, <span class="lua5-str">'Armor.hand1'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'ExtraHand.hand2'</span>, <span class="lua5-str">'ExtraHand.shield'</span>,<br><span class="lua5-tab">&#9;</span><span class="lua5-str">'Player.hand2'</span>, <span class="lua5-str">'Player.hand2h'</span>, <span class="lua5-str">'Armor.hand2'</span>, <span class="lua5-str">'Armor.hand2h'</span>,<br><span class="lua5-ctrl">}</span></span>
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="PaperDollAddRace" class="abs"></a><h5 class="def-h5">PaperDollAddRace</h5><b class="def-largs">(</b>name, races<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="PaperDollAddBodies" class="abs"></a><h5 class="def-h5">PaperDollAddBodies</h5><b class="def-largs">(</b>bodies<b class="def-rargs">)</b>
</td><td class="def-right">
 Defines doll categories for <b class="def-param">bodies</b> array together with male and female variations of each.<br>If <b class="def-param">bodies</b> table isn't specified, uses <a href="#PaperDollSpecialBodies">PaperDollSpecialBodies</a> table and defines the "Base" paper dolls as well.
</td>
</tr><tr>
<td class="def-left">
<a id="AddPaperDollGraphics" class="abs"></a><h5 class="def-h5">AddPaperDollGraphics</h5><b class="def-largs">(</b>t<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">t</b> can be a string following the "PaperDol.txt" convention or a table that's similar to the result of calling <a href="#ParseNamedColTable">ParseNamedColTable</a> for such file.<br>Example &ndash; loading additional paper doll file for mods:<br><span class="def-code">events.ReloadPaperDollGraphics <span class="lua5-note">=</span> <span class="lua5-ctrl">|</span><span class="lua5-ctrl">|</span> AddPaperDollGraphics(Game.LoadTextFileFromLod<span class="lua5-str">'PaperMod.txt'</span>)</span>
</td>
</tr><tr>
<td class="def-left">
<a id="ReloadPaperDollGraphics" class="abs"></a><h5 class="def-h5">ReloadPaperDollGraphics</h5><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Reloads "PaperDol.txt" and calls <a href="#events.ReloadPaperDollGraphics">ReloadPaperDollGraphics</a> event. Very handy while tweaking "PaperDol.txt"
</td>
</tr></tbody>
</table>
<br>


<br>
<hr>
<a id="Structures"></a><h2>Structures</h2>



<br><a id="structs.GameStructure"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>Game</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameStructure.Version" class="abs"></a>Version
</td><td class="def-right">
 (6 &ndash; 8)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Arcomage" class="abs"></a><a href="#structs.Arcomage">Arcomage</a>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Races" class="abs"></a><a href="#structs.GameRaces">Races</a>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Classes" class="abs"></a><a href="#structs.GameClasses">Classes</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ClassKinds" class="abs"></a><a href="#structs.GameClassKinds">ClassKinds</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Party" class="abs"></a><a href="#structs.GameParty">Party</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Map" class="abs"></a><a href="#structs.GameMap">Map</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Mouse" class="abs"></a><a href="#structs.GameMouse">Mouse</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Weather" class="abs"></a><a href="#structs.Weather">Weather</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Screen" class="abs"></a><a href="#structs.GameScreen">Screen</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PatchOptions" class="abs"></a><a href="#structs.PatchOptions">PatchOptions</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CustomLods" class="abs"></a><a href="#structs.CustomLods">CustomLods</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.WindowHandle" class="abs"></a>WindowHandle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Windowed" class="abs"></a>Windowed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CurrentPlayer" class="abs"></a>CurrentPlayer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SkillRecoveryTimes" class="abs"></a>SkillRecoveryTimes[<a href="#const.Skills">skill</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MinMeleeRecoveryTime" class="abs"></a>MinMeleeRecoveryTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CurrentScreen" class="abs"></a>CurrentScreen
</td><td class="def-right">
 :const.Screens
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CurrentCharScreen" class="abs"></a>CurrentCharScreen
</td><td class="def-right">
 :const.CharScreens
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MainMenuCode" class="abs"></a>MainMenuCode
</td><td class="def-right">
 -1 = in game, 1 = show new game, 6 = in new game, 3 = load menu, 4 = exit, 2 = show credits, 8 = in credits, 9 = load game
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadingScreen" class="abs"></a>LoadingScreen
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.DialogNPC" class="abs"></a>DialogNPC
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCCommand" class="abs"></a>NPCCommand
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseScreen" class="abs"></a>HouseScreen
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseNPCSlot" class="abs"></a>HouseNPCSlot
</td><td class="def-right">
 If <a href="#structs.GameStructure.HouseOwnerPic">HouseOwnerPic</a> isn't <b class="def-param">0</b>, the value of <b class="def-param">1</b> refers to the shop keeper and higher value needs to be reduce by 1 before accessing .<br>If <a href="#structs.GameStructure.HouseExitMap">HouseExitMap</a> isn't <b class="def-param">0</b>, last slot is occupied by map enter icon.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseNPCSlotsCount" class="abs"></a>HouseNPCSlotsCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseCost" class="abs"></a>HouseCost
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseAllowAction" class="abs"></a>HouseAllowAction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseActionInfo" class="abs"></a>HouseActionInfo
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseTeachMastery" class="abs"></a>HouseTeachMastery
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HousePicType" class="abs"></a>HousePicType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseOwnerPic" class="abs"></a>HouseOwnerPic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseExitMap" class="abs"></a>HouseExitMap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseNPCs" class="abs"></a>HouseNPCs[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseItemsCount" class="abs"></a>HouseItemsCount
</td><td class="def-right">
 Number of interactive items of the dialog. Items count of the dialog object gets changed to this or 0 depending on selected player being concious.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CurrentNPCDialog" class="abs"></a><a href="#structs.Dlg">CurrentNPCDialog</a>
</td><td class="def-right">
 If <a href="#structs.GameStructure.HouseExitMap">HouseExitMap</a> isn't <b class="def-param">0</b>, last slot is occupied by map enter pseudo-NPC.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.InQuestionDialog" class="abs"></a>InQuestionDialog
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.InOODialog" class="abs"></a>InOODialog
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GuildJoinCost" class="abs"></a>GuildJoinCost[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StatsNames" class="abs"></a>StatsNames[<a href="#const.Stats">stat</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StatsDescriptions" class="abs"></a>StatsDescriptions[<a href="#const.Stats">stat</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SkillNames" class="abs"></a>SkillNames[<a href="#const.Skills">skill</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SkillDescriptions" class="abs"></a>SkillDescriptions[<a href="#const.Skills">skill</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ClassNames" class="abs"></a>ClassNames[<a href="#const.Class">class</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ClassDescriptions" class="abs"></a>ClassDescriptions[<a href="#const.Class">class</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Actions" class="abs"></a><a href="#structs.ActionItem">Actions</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ActionsNext" class="abs"></a><a href="#structs.ActionItem">ActionsNext</a>[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ExitMapAction" class="abs"></a>ExitMapAction
</td><td class="def-right">
 :const.ExitMapAction
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.FlashHistoryBook" class="abs"></a>FlashHistoryBook
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.FlashAutonotesBook" class="abs"></a>FlashAutonotesBook
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.FlashQuestBook" class="abs"></a>FlashQuestBook
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NeedRedraw" class="abs"></a>NeedRedraw
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StatusMessage" class="abs"></a>StatusMessage
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MouseOverStatusMessage" class="abs"></a>MouseOverStatusMessage
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StatusDisappearTime" class="abs"></a>StatusDisappearTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCMessage" class="abs"></a>NPCMessage
</td><td class="def-right">
 Current message displayed in a dialog with some NPC
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StreetMessage" class="abs"></a>StreetMessage
</td><td class="def-right">
 Message displayed by <a href="#Message">Message</a>, <a href="#Question">Question</a>, <a href="#evt.SimpleMessage">evt.SimpleMessage</a> and <a href="#evt.Question">evt.Question</a> when not talking to NPC.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.DelayedFaceAnimation.Delay" class="abs"></a>DelayedFaceAnimation.Delay
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.DelayedFaceAnimation.Animation" class="abs"></a>DelayedFaceAnimation.Animation
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.DelayedFaceAnimation.PlayerIndex" class="abs"></a>DelayedFaceAnimation.PlayerIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ItemsTxt" class="abs"></a><a href="#structs.ItemsTxtItem">ItemsTxt</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StdItemsTxt" class="abs"></a><a href="#structs.StdItemsTxtItem">StdItemsTxt</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpcItemsTxt" class="abs"></a><a href="#structs.SpcItemsTxtItem">SpcItemsTxt</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PotionTxt" class="abs"></a>PotionTxt[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonstersTxt" class="abs"></a><a href="#structs.MonstersTxtItem">MonstersTxt</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PlaceMonTxt" class="abs"></a>PlaceMonTxt[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MapStats" class="abs"></a><a href="#structs.MapStatsItem">MapStats</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MapDoorSound" class="abs"></a>MapDoorSound[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MapFogChances" class="abs"></a><a href="#structs.FogChances">MapFogChances</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.FlyCeiling" class="abs"></a>FlyCeiling
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  3000 in MM6, 4000 in MM7+, in MM8 it's configured per map (<span class="def-code">Map.OutdoorExtra.Ceiling</span>)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MoveToMap" class="abs"></a><a href="#structs.MoveToMap">MoveToMap</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ProgressBar" class="abs"></a><a href="#structs.ProgressBar">ProgressBar</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.DialogLogic" class="abs"></a><a href="#structs.DialogLogic">DialogLogic</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Lucida_fnt" class="abs"></a>Lucida_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Smallnum_fnt" class="abs"></a>Smallnum_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Arrus_fnt" class="abs"></a>Arrus_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Create_fnt" class="abs"></a>Create_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Comic_fnt" class="abs"></a>Comic_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Book_fnt" class="abs"></a>Book_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Book2_fnt" class="abs"></a>Book2_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Cchar_fnt" class="abs"></a>Cchar_fnt
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Autonote_fnt" class="abs"></a>Autonote_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Spell_fnt" class="abs"></a>Spell_fnt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TextBuffer" class="abs"></a>TextBuffer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TextBuffer2" class="abs"></a>TextBuffer2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.KeyCodes" class="abs"></a>KeyCodes[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.KeyTypes" class="abs"></a>KeyTypes[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Time" class="abs"></a>Time
</td><td class="def-right">
 Since 00 AM, January 1st, 1165/1168/1172
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Year" class="abs"></a>Year
</td><td class="def-right">
 Actual value, like 1172
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Month" class="abs"></a>Month
</td><td class="def-right">
 (0 &ndash; 11)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.WeekOfMonth" class="abs"></a>WeekOfMonth
</td><td class="def-right">
 (0 &ndash; 3)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.DayOfMonth" class="abs"></a>DayOfMonth
</td><td class="def-right">
 (0 &ndash; 27)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Hour" class="abs"></a>Hour
</td><td class="def-right">
 (0 &ndash; 23)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Minute" class="abs"></a>Minute
</td><td class="def-right">
 (0 &ndash; 59)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Second" class="abs"></a>Second
</td><td class="def-right">
 (0 &ndash; 59)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.BaseYear" class="abs"></a>BaseYear
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MaxBirthYear" class="abs"></a>MaxBirthYear
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NeedRender" class="abs"></a>NeedRender
</td><td class="def-right">
 Same as Party.NeedRender
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TurnBased" class="abs"></a>TurnBased
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TurnBasedPhase" class="abs"></a>TurnBasedPhase
</td><td class="def-right">
 1 = monsters move, 2 = combat, 3 = party walking
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TurnBasedDelays" class="abs"></a>TurnBasedDelays[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.RedbookHandle" class="abs"></a>RedbookHandle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MSSHandle" class="abs"></a>MSSHandle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.BinkVideo" class="abs"></a>BinkVideo
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.DialogTopicsLimit" class="abs"></a>DialogTopicsLimit
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SmackVideo" class="abs"></a>SmackVideo
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.EquipStat2ItemSlot" class="abs"></a>EquipStat2ItemSlot[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonsterClassSex" class="abs"></a>MonsterClassSex[]
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  <span class="def-code">MonClass <span class="lua5-note">=</span> (Id <span class="lua5-operator">+</span> <span class="lua5-literal">2</span>):div(<span class="lua5-literal">3</span>)</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonsterClassRace" class="abs"></a>MonsterClassRace[]
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  <span class="def-code">MonClass <span class="lua5-note">=</span> (Id <span class="lua5-operator">+</span> <span class="lua5-literal">2</span>):div(<span class="lua5-literal">3</span>)</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonsterSex" class="abs"></a>MonsterSex[]
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonsterClassInfoY" class="abs"></a>MonsterClassInfoY[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Paused" class="abs"></a>Paused
</td><td class="def-right">
 pauses game logic
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Paused2" class="abs"></a>Paused2
</td><td class="def-right">
 pauses updating view
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TimeDelta" class="abs"></a>TimeDelta
</td><td class="def-right">
 Time since last tick
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopItems" class="abs"></a><a href="#structs.Item">ShopItems</a>[house][slot]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopSpecialItems" class="abs"></a><a href="#structs.Item">ShopSpecialItems</a>[house][slot]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GuildItems" class="abs"></a><a href="#structs.Item">GuildItems</a>[house][school][slot]
</td><td class="def-right">
 In MM8 in each guild items for all 12 schools of magic are generated. In MM6 and MM7 <b class="def-param">school</b> can only be 0.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GuildAwards" class="abs"></a>GuildAwards[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GuildItemIconPtr" class="abs"></a>GuildItemIconPtr[slot]
</td><td class="def-right">
 Loaded icons for current guild's items.<br><span class="def-vspace">Example:<div class="def-codeblock"><span class="lua5-ctrl">function</span> events.GuildItemsGenerated(t)<br><span class="lua5-tab">&#9;</span><span class="lua5-note">local</span> a <span class="lua5-note">=</span> Game.GuildItems[t.House][<span class="lua5-literal">0</span>] <span> </span><span> </span><span class="lua5-comment">-- items array for this guild (for MM6 and MM7)</span><br><span class="lua5-tab">&#9;</span>a[<span class="lua5-literal">0</span>]:Randomize(<span class="lua5-literal">5</span>, const.ItemType.Book) <span> </span><span class="lua5-comment">-- put random powerful book into first slot</span><br><span class="lua5-tab">&#9;</span>a[<span class="lua5-literal">0</span>].Identified <span class="lua5-note">=</span> <span class="lua5-literal">true</span><br><span class="lua5-tab">&#9;</span>Game.GuildItemIconPtr[<span class="lua5-literal">0</span>] <span class="lua5-note">=</span> Game.IconsLod:LoadBitmapPtr(a[<span class="lua5-literal">0</span>]:T().Picture)<br><span class="lua5-ctrl">end</span></div><br></span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopNextRefill" class="abs"></a>ShopNextRefill[house]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GuildNextRefill" class="abs"></a>GuildNextRefill[house]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopWeaponKinds" class="abs"></a><a href="#structs.ShopItemKind">ShopWeaponKinds</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopWeaponKindsSpecial" class="abs"></a><a href="#structs.ShopItemKind">ShopWeaponKindsSpecial</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopArmorKinds" class="abs"></a><a href="#structs.ShopItemKind">ShopArmorKinds</a>[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopArmorKindsSpecial" class="abs"></a><a href="#structs.ShopItemKind">ShopArmorKindsSpecial</a>[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopMagicLevels" class="abs"></a>ShopMagicLevels[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopMagicLevelsSpecial" class="abs"></a>ShopMagicLevelsSpecial[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TrainingLevels" class="abs"></a>TrainingLevels[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GuildSpellLevels" class="abs"></a>GuildSpellLevels[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopAlchemistLevels" class="abs"></a>ShopAlchemistLevels[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopAlchemistLevelsSpecial" class="abs"></a>ShopAlchemistLevelsSpecial[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShopTheftExpireTime" class="abs"></a>ShopTheftExpireTime[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GeneralStoreItemKinds" class="abs"></a><a href="#structs.GeneralStoreItemKind">GeneralStoreItemKinds</a>[]
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GeneralStoreItemKindsSpecial" class="abs"></a><a href="#structs.GeneralStoreItemKind">GeneralStoreItemKindsSpecial</a>[]
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  Yes, MM6 generates special items in general stores, but doesn't support buying them.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ScanlineOffset" class="abs"></a>ScanlineOffset[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ObjectByPixel" class="abs"></a><a href="#structs.ObjectRef">ObjectByPixel</a>[y][x]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ArmageddonTimeLeft" class="abs"></a>ArmageddonTimeLeft
</td><td class="def-right">
 maximum is 417
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ArmageddonSkill" class="abs"></a>ArmageddonSkill
</td><td class="def-right">
 damage is 50 + skill
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.OutdoorViewMul" class="abs"></a>OutdoorViewMul
</td><td class="def-right">
 Acts as the opposite of FOV
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GlobalTxt" class="abs"></a>GlobalTxt[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Houses" class="abs"></a><a href="#structs.Events2DItem">Houses</a>[]
</td><td class="def-right">
 2DEvents.txt
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HouseMovies" class="abs"></a><a href="#structs.HouseMovie">HouseMovies</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TransTxt" class="abs"></a>TransTxt[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpecialEnterX" class="abs"></a>SpecialEnterX[]
</td><td class="def-right">
 Used for Free Haven Sewer entrances in MM6. Negative Questbit Restrictions field in <b class="def-param">2DEvents.txt</b> corresponds to array index
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpecialEnterY" class="abs"></a>SpecialEnterY[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpecialEnterZ" class="abs"></a>SpecialEnterZ[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpecialEnterDirection" class="abs"></a>SpecialEnterDirection[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCTopic" class="abs"></a>NPCTopic[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCText" class="abs"></a>NPCText[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCGreet" class="abs"></a>NPCGreet[][]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCGroup" class="abs"></a>NPCGroup[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCNews" class="abs"></a><a href="#structs.NPCNewsItem">NPCNews</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HistoryTxt" class="abs"></a><a href="#structs.HistoryTxtItem">HistoryTxt</a>[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCNewsCountByMap" class="abs"></a>NPCNewsCountByMap[]
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCDataTxt" class="abs"></a><a href="#structs.NPC">NPCDataTxt</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPC" class="abs"></a><a href="#structs.NPC">NPC</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCProfNames" class="abs"></a>NPCProfNames[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCProfTxt" class="abs"></a><a href="#structs.NPCProfTxtItem">NPCProfTxt</a>[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCNames" class="abs"></a>NPCNames[][]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NPCNamesCount" class="abs"></a>NPCNamesCount[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StreetNPC" class="abs"></a><a href="#structs.NPC">StreetNPC</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Spells" class="abs"></a><a href="#structs.SpellInfo">Spells</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpellsTxt" class="abs"></a><a href="#structs.SpellsTxtItem">SpellsTxt</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpellSounds" class="abs"></a>SpellSounds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpellObjId" class="abs"></a>SpellObjId[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TitleTrack" class="abs"></a>TitleTrack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TitleTrackOffset" class="abs"></a>TitleTrackOffset
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NarratorTrack" class="abs"></a>NarratorTrack
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MissileSetup" class="abs"></a><a href="#structs.MissileSetup">MissileSetup</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SummonElementalA" class="abs"></a>SummonElementalA
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SummonElementalB" class="abs"></a>SummonElementalB
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SummonElementalC" class="abs"></a>SummonElementalC
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.QuestsTxt" class="abs"></a>QuestsTxt[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.AwardsTxt" class="abs"></a>AwardsTxt[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.AwardsSort" class="abs"></a>AwardsSort[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.AutonoteTxt" class="abs"></a>AutonoteTxt[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.AutonoteCategory" class="abs"></a>AutonoteCategory[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  0 = potion<br>1 = stat<br>2 = obelisk<br>3 = seer<br>4 = misc<br>5 = teacher
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.AutonotesByCategory" class="abs"></a>AutonotesByCategory[][]
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MerchantTxt" class="abs"></a>MerchantTxt[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CtrlPressed" class="abs"></a>CtrlPressed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.RightButtonPressed" class="abs"></a>RightButtonPressed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TownPortalInfo" class="abs"></a><a href="#structs.TownPortalTownInfo">TownPortalInfo</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TownPortalX" class="abs"></a>TownPortalX[]
</td><td class="def-right">
 (Town portal picture: townport)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TownPortalY" class="abs"></a>TownPortalY[]
</td><td class="def-right">
 (Town portal icons <span class="def-ver">[MM7+]</span>: tpharmndy, tpelf, tpwarlock, tpisland, tpheaven, tphell)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TownPortalHeight" class="abs"></a>TownPortalHeight[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TownPortalWidth" class="abs"></a>TownPortalWidth[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TransportLocations" class="abs"></a><a href="#structs.TravelInfo">TransportLocations</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TransportIndex" class="abs"></a>TransportIndex[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.HostileTxt" class="abs"></a>HostileTxt[mon1][mon2]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  0 &ndash; 4. Attitude of <b class="def-param">mon1</b> towards <b class="def-param">mon2</b>. <b class="def-param">mon2</b> = 0 is party. <b class="def-param">mon1</b> and <b class="def-param">mon2</b> are monster classes: <span class="def-code">mon1 <span class="lua5-note">=</span> (Id1 <span class="lua5-operator">+</span> <span class="lua5-literal">2</span>):div(<span class="lua5-literal">3</span>)</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.NewGameMap" class="abs"></a>NewGameMap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.WinMapIndex" class="abs"></a>WinMapIndex
</td><td class="def-right">
 Number represented as a string.<br><span class="def-ver">[MM6]</span> Index in games.lod<br><span class="def-ver">[MM7+]</span> Index in mapstats.txt
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GlobalEvtLines" class="abs"></a><a href="#structs.EventLine">GlobalEvtLines</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MapEvtLines" class="abs"></a><a href="#structs.EventLine">MapEvtLines</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SFTBin" class="abs"></a><a href="#structs.SFT">SFTBin</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.DecListBin" class="abs"></a><a href="#structs.DecListItem">DecListBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PFTBin" class="abs"></a><a href="#structs.PFTItem">PFTBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.IFTBin" class="abs"></a><a href="#structs.IFTItem">IFTBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TFTBin" class="abs"></a><a href="#structs.TFTItem">TFTBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ChestBin" class="abs"></a><a href="#structs.DChestItem">ChestBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.OverlayBin" class="abs"></a><a href="#structs.OverlayItem">OverlayBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ObjListBin" class="abs"></a><a href="#structs.ObjListItem">ObjListBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonListBin" class="abs"></a><a href="#structs.MonListItem">MonListBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SoundsBin" class="abs"></a><a href="#structs.SoundsItem">SoundsBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.TileBin" class="abs"></a><a href="#structs.TileItem">TileBin</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Tile2Bin" class="abs"></a><a href="#structs.TileItem">Tile2Bin</a>[]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Tile3Bin" class="abs"></a><a href="#structs.TileItem">Tile3Bin</a>[]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CurrentTileBin" class="abs"></a><a href="#structs.CurrentTileBin">CurrentTileBin</a>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ExitLevelCode" class="abs"></a>ExitLevelCode
</td><td class="def-right">
 0 = in game, 2 = load other map, 8 = death
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SoundVolume" class="abs"></a>SoundVolume
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PlayerFaces" class="abs"></a>PlayerFaces[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StandardFaceAnimations" class="abs"></a><a href="#structs.FaceAnimationInfo">StandardFaceAnimations</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StandardPlayerSoundsCount" class="abs"></a>StandardPlayerSoundsCount[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GamesLod" class="abs"></a><a href="#structs.Lod">GamesLod</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.IconsLod" class="abs"></a><a href="#structs.BitmapsLod">IconsLod</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.BitmapsLod" class="abs"></a><a href="#structs.BitmapsLod">BitmapsLod</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SpritesLod" class="abs"></a><a href="#structs.SpritesLod">SpritesLod</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SaveGameLod" class="abs"></a><a href="#structs.Lod">SaveGameLod</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.EventsLod" class="abs"></a><a href="#structs.Lod">EventsLod</a>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.IsD3D" class="abs"></a>IsD3D
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.RendererD3D" class="abs"></a>RendererD3D
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.RandSeed" class="abs"></a>RandSeed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.IsMovieLooped" class="abs"></a>IsMovieLooped
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MovieKind" class="abs"></a>MovieKind
</td><td class="def-right">
 0 &ndash; No movie, 1 &ndash; Smack, 2 &ndash; Bink
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.MonsterKinds" class="abs"></a><a href="#structs.MonsterKind">MonsterKinds</a>[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameStructure.ExitHouseScreen" class="abs"></a>ExitHouseScreen<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.OODialogProcessKey" class="abs"></a>OODialogProcessKey<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ProcessActions" class="abs"></a>ProcessActions<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Rand" class="abs"></a>Rand<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SetInterfaceColor" class="abs"></a>SetInterfaceColor<b class="def-largs">(</b>Color, Unk = 1<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  0 = good, 1 = neutral, 2 = evil
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.DoShowMovie" class="abs"></a>DoShowMovie<b class="def-largs">(</b>Name, Y, DoubleSize, ExitCurrentScreen<b class="def-rargs">)</b>
</td><td class="def-right">
 Only call from <a href="#events.ShowMovie">events.ShowMovie</a>, use <a href="#evt.ShowMovie">evt.ShowMovie</a> otherwise.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.IsMoviePlaying" class="abs"></a>IsMoviePlaying<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadHouseMovie" class="abs"></a>LoadHouseMovie<b class="def-largs">(</b>Name, Loop = true<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.EndMovie" class="abs"></a>EndMovie<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.RestartHouseMovie" class="abs"></a>RestartHouseMovie<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PlayShopSound" class="abs"></a>PlayShopSound<b class="def-largs">(</b>House, SoundIndex<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GetNPCPtrFromIndex" class="abs"></a>GetNPCPtrFromIndex<b class="def-largs">(</b>Index<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GetCurrentNPCPtr" class="abs"></a>GetCurrentNPCPtr<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.CalcSpellDamage" class="abs"></a>CalcSpellDamage<b class="def-largs">(</b>Spell, Skill, Mastery, MonsterHP<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GetSpellDamageType" class="abs"></a>GetSpellDamageType<b class="def-largs">(</b>Spell<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GetStatisticEffect" class="abs"></a>GetStatisticEffect<b class="def-largs">(</b>Stat<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.EscMessage" class="abs"></a>EscMessage<b class="def-largs">(</b>Text, Unk = 0<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.SummonMonster" class="abs"></a>SummonMonster<b class="def-largs">(</b>Id, X, Y, Z<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GenerateChests" class="abs"></a>GenerateChests<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 You can add random items (Number = -1 to -6 for different power or -7 for artifact) to some chests and then call this function to generate them
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.IsMonsterOfKind" class="abs"></a>IsMonsterOfKind<b class="def-largs">(</b>Id, <a href="#const.MonsterKind">Kind</a><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Uncompress" class="abs"></a>Uncompress<b class="def-largs">(</b>pTarget, pTargetSize, pSrc, SrcSize<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">pTargetSize</b> must point to a 4-byte buffer specifying unpacked size.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.Compress" class="abs"></a>Compress<b class="def-largs">(</b>pTarget, pTargetSize, pSrc, SrcSize, Compression<span class="def-ver">[MM7+]</span> = -1<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">pTargetSize</b> must point to a 4-byte buffer specifying max size. The function sets it to actual size it has used up. If successful, returns <b class="def-param">0</b>.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PlayMapTrack" class="abs"></a>PlayMapTrack<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PlayTrack" class="abs"></a>PlayTrack<b class="def-largs">(</b>Index<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadSound" class="abs"></a>LoadSound<b class="def-largs">(</b>SoundId, Unk = 0, Unk2 = 0<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">Unk2</b> is present only in MM8
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.PlaySound" class="abs"></a>PlaySound<b class="def-largs">(</b>SoundId, Object = -1, Loops = 0, X = -1, Y = 0, Unk = 0, Volume = 0, PlaybackRate = 0<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.StopAllSounds" class="abs"></a>StopAllSounds<b class="def-largs">(</b>KeepMin = -1, KeepMax = -1<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadDecSprite" class="abs"></a>LoadDecSprite<b class="def-largs">(</b>Name<b class="def-rargs">)</b>
</td><td class="def-right">
 Loads a sprite and returns its ID.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadBitmap" class="abs"></a>LoadBitmap<b class="def-largs">(</b>Name<b class="def-rargs">)</b>
</td><td class="def-right">
 Loads a texture and returns its ID.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.UpdateDialogTopics" class="abs"></a>UpdateDialogTopics<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.ShowStatusText" class="abs"></a>ShowStatusText<b class="def-largs">(</b>Text, Seconds = 2<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadPalette" class="abs"></a>LoadPalette<b class="def-largs">(</b>PalNum<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadDataFileFromLod" class="abs"></a>LoadDataFileFromLod<b class="def-largs">(</b>Name, UseMalloc<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.LoadTextFileFromLod" class="abs"></a>LoadTextFileFromLod<b class="def-largs">(</b>Name<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GetCurrentHouse" class="abs"></a>GetCurrentHouse<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GetCurrentNoHouseNPC" class="abs"></a>GetCurrentNoHouseNPC<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GetNPCFromPtr" class="abs"></a>GetNPCFromPtr<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameStructure.GetNPCFromIndex" class="abs"></a>GetNPCFromIndex<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameParty"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>Party</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameParty.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Direction" class="abs"></a>Direction
</td><td class="def-right">
 0 &ndash; 2047. 0 is East, 512 is North and so on.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LookAngle" class="abs"></a>LookAngle
</td><td class="def-right">
 -512 &ndash; 512. Values allowed with mouse look: -240 &ndash; 300 (prior to patch 2.5: -200 &ndash; 200). Without mouse look: -128 &ndash; 128
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastX" class="abs"></a>LastX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastY" class="abs"></a>LastY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastZ" class="abs"></a>LastZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastDirection" class="abs"></a>LastDirection
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastLookAngle" class="abs"></a>LastLookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastEyeLevel" class="abs"></a>LastEyeLevel
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.SpeedX" class="abs"></a>SpeedX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.SpeedY" class="abs"></a>SpeedY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.SpeedZ" class="abs"></a>SpeedZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.StableZ" class="abs"></a>StableZ
</td><td class="def-right">
 <b class="def-param">Z</b> changes up and down while flying, <b class="def-param">StableZ</b> stays the same
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastStandFacet" class="abs"></a>LastStandFacet
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.FallStartZ" class="abs"></a>FallStartZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Flying" class="abs"></a>Flying
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.PlayersArray" class="abs"></a><a href="#structs.Player">PlayersArray</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.PlayersIndexes" class="abs"></a>PlayersIndexes[]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Players" class="abs"></a>Players[]
</td><td class="def-right">
<b class="def-default">(Default)</b> 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.HiredNPC" class="abs"></a><a href="#structs.NPC">HiredNPC</a>[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.LastRegenerationTime" class="abs"></a>LastRegenerationTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.SpellBuffs" class="abs"></a><a href="#structs.SpellBuff">SpellBuffs</a>[<a href="#const.PartyBuff">buff</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Gold" class="abs"></a>Gold
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.BankGold" class="abs"></a>BankGold
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Food" class="abs"></a>Food
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Deaths" class="abs"></a>Deaths
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.PrisonTerms" class="abs"></a>PrisonTerms
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.BountiesCollected" class="abs"></a>BountiesCollected
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Fine" class="abs"></a>Fine
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.BountyHuntTarget" class="abs"></a>BountyHuntTarget[]
</td><td class="def-right">
 Only index 0 is normally used in MM8
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.MonsHuntTarget" class="abs"></a>MonsHuntTarget[]
</td><td class="def-right">
 (deprecated old name)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.BountyHuntKilled" class="abs"></a>BountyHuntKilled[]
</td><td class="def-right">
 Only index 0 is normally used in MM8
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.MonsHuntKilled" class="abs"></a>MonsHuntKilled[]
</td><td class="def-right">
 (deprecated old name, integer in MM7+ instead of boolean)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.NextBountyHunt" class="abs"></a>NextBountyHunt[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.MonsHuntReset" class="abs"></a>MonsHuntReset[]
</td><td class="def-right">
 (deprecated old name)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.QBits" class="abs"></a>QBits[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.AutonotesBits" class="abs"></a>AutonotesBits[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.InArenaQuest" class="abs"></a>InArenaQuest
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.ArenaWinsPage" class="abs"></a>ArenaWinsPage
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.ArenaWinsSquire" class="abs"></a>ArenaWinsSquire
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.ArenaWinsKnight" class="abs"></a>ArenaWinsKnight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.ArenaWinsLord" class="abs"></a>ArenaWinsLord
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.ArtifactsFound" class="abs"></a>ArtifactsFound[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Alignment" class="abs"></a>Alignment
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  0 = good, 1 = neutral, 2 = evil
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Reputation" class="abs"></a>Reputation
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.History" class="abs"></a>History[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.SpecialDates" class="abs"></a>SpecialDates[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  E.g. set date 1:<div class="def-codeblock">evt.Add(<span class="lua5-str">"SpecialDate1"</span>, <span class="lua5-literal">0</span>)</div><br>Use date 1: "%51" in any NPC message
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.ArcomageWins" class="abs"></a>ArcomageWins[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.CurrentPlayer" class="abs"></a>CurrentPlayer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.StateBits" class="abs"></a>StateBits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.NeedRender" class="abs"></a>NeedRender
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Drowning" class="abs"></a>Drowning
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.InAir" class="abs"></a>InAir
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.EnemyDetectorRed" class="abs"></a>EnemyDetectorRed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.EnemyDetectorYellow" class="abs"></a>EnemyDetectorYellow
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.FlyingBit" class="abs"></a>FlyingBit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.WaterWalkingBit" class="abs"></a>WaterWalkingBit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.InJumpSpell" class="abs"></a>InJumpSpell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.InLava" class="abs"></a>InLava
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameParty.RestAndHeal" class="abs"></a>RestAndHeal<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.Wait" class="abs"></a>Wait<b class="def-largs">(</b>Minutes<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.FindActivePlayer" class="abs"></a>FindActivePlayer<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.GetFame" class="abs"></a>GetFame<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.GetReputation" class="abs"></a>GetReputation<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.AddGold" class="abs"></a>AddGold<b class="def-largs">(</b>Gold, Kind = 0<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">Kind</b> values:<br>0 = increase by Banker, give some part to followers<br>1 = take exect amount, ignore followers<br>2 = <span class="def-ver">[MM7+]</span> take all and don't show message, just clear status message<br>3 = <span class="def-ver">[MM7+]</span> take all and don't change status message
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.AddKillExp" class="abs"></a>AddKillExp<b class="def-largs">(</b>Experience<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">Experience</b> is shared among conscious players and effected by Learning skill
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.HasNPCProfession" class="abs"></a>HasNPCProfession<b class="def-largs">(</b>arg1<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.CountItems" class="abs"></a>CountItems<b class="def-largs">(</b>{item1, item2, ...}<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameParty.GetCurrentPlayer" class="abs"></a>GetCurrentPlayer<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameParty.ResetStartingPlayer" class="abs"></a>ResetStartingPlayer<b class="def-largs">(</b>arg1 = false, arg2 = false<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameMap"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>Map</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameMap.Refilled" class="abs"></a>Refilled
</td><td class="def-right">
 If the map has been refilled this visit, contains the last <a href="#mapvars">mapvars</a> table.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorOrOutdoor" class="abs"></a>IndoorOrOutdoor
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Monsters" class="abs"></a><a href="#structs.MapMonster">Monsters</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Vars" class="abs"></a>Vars[]
</td><td class="def-right">
 Variables for barrels/contests/etc events start at 75
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Objects" class="abs"></a><a href="#structs.MapObject">Objects</a>[]
</td><td class="def-right">
 Items, spells effects
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Sprites" class="abs"></a><a href="#structs.MapSprite">Sprites</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.SoundSprites" class="abs"></a>SoundSprites[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Chests" class="abs"></a><a href="#structs.MapChest">Chests</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.MapStatsIndex" class="abs"></a>MapStatsIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.NoNPC" class="abs"></a>NoNPC
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorHeader" class="abs"></a><a href="#structs.OdmHeader">OutdoorHeader</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Tilesets" class="abs"></a><a href="#structs.TilesetDef">Tilesets</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.HeightMap" class="abs"></a>HeightMap[y][x]
</td><td class="def-right">
 <span class="def-code">[(<span class="lua5-literal">64</span> <span class="lua5-operator">-</span> Party.Y <span class="lua5-operator">/</span> <span class="lua5-literal">0x200</span>):round()] [(<span class="lua5-literal">64</span> <span class="lua5-operator">+</span> Party.X <span class="lua5-operator">/</span> <span class="lua5-literal">0x200</span>):round()] <span class="lua5-note">=</span> (Party.Z <span class="lua5-operator">/</span> <span class="lua5-literal">32</span>):<span class="lua5-std">floor</span>()</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.TileMap" class="abs"></a>TileMap[y][x]
</td><td class="def-right">
 <span class="def-code">[(<span class="lua5-literal">64</span> <span class="lua5-operator">-</span> Party.Y <span class="lua5-operator">/</span> <span class="lua5-literal">0x200</span>):<span class="lua5-std">floor</span>()] [(<span class="lua5-literal">64</span> <span class="lua5-operator">+</span> Party.X <span class="lua5-operator">/</span> <span class="lua5-literal">0x200</span>):<span class="lua5-std">floor</span>()]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.UnknownMap" class="abs"></a>UnknownMap[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Models" class="abs"></a><a href="#structs.MapModel">Models</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IDList" class="abs"></a><a href="#structs.ObjectRef">IDList</a>[]
</td><td class="def-right">
 IDs of sprites on map (in <a href="#structs.ObjectRef">ObjectRef</a> form)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IDOffsets" class="abs"></a>IDOffsets[y][x]
</td><td class="def-right">
 OMAP &ndash; offsets in IDList
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.LoadedSkyBitmap" class="abs"></a>LoadedSkyBitmap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorSpawns" class="abs"></a><a href="#structs.SpawnPoint">OutdoorSpawns</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorRefillCount" class="abs"></a>OutdoorRefillCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorLastRefillDay" class="abs"></a>OutdoorLastRefillDay
</td><td class="def-right">
 First visit day
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorExtra" class="abs"></a><a href="#structs.MapExtra">OutdoorExtra</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorLastVisitTime" class="abs"></a>OutdoorLastVisitTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.VisibleMap1" class="abs"></a>VisibleMap1[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.VisibleMap2" class="abs"></a>VisibleMap2[][]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.OutdoorReputation" class="abs"></a>OutdoorReputation
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.TilesetsFile" class="abs"></a>TilesetsFile
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  0 = dtile.bin, 1 = dtile2.bin, 2 = dtile3.bin
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.UnknownMap2" class="abs"></a>UnknownMap2[][]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Notes" class="abs"></a><a href="#structs.MapNote">Notes</a>[]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.TerNormDist" class="abs"></a>TerNormDist[][][]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.TerNormId" class="abs"></a>TerNormId[][][]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.TerNorm" class="abs"></a><a href="#structs.FloatVector">TerNorm</a>[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorHeader" class="abs"></a><a href="#structs.BlvHeader">IndoorHeader</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Vertexes" class="abs"></a><a href="#structs.MapVertex">Vertexes</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Facets" class="abs"></a><a href="#structs.MapFacet">Facets</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.FacetData" class="abs"></a><a href="#structs.FacetData">FacetData</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Rooms" class="abs"></a><a href="#structs.MapRoom">Rooms</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Lights" class="abs"></a><a href="#structs.MapLight">Lights</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Doors" class="abs"></a><a href="#structs.MapDoor">Doors</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.BSPNodes" class="abs"></a><a href="#structs.BSPNode">BSPNodes</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Outlines" class="abs"></a><a href="#structs.MapOutlines">Outlines</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorSpawns" class="abs"></a><a href="#structs.SpawnPoint">IndoorSpawns</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorRefillCount" class="abs"></a>IndoorRefillCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorLastRefillDay" class="abs"></a>IndoorLastRefillDay
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorExtra" class="abs"></a><a href="#structs.MapExtra">IndoorExtra</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorLastVisitTime" class="abs"></a>IndoorLastVisitTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.VisibileOutlines" class="abs"></a>VisibileOutlines[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IndoorReputation" class="abs"></a>IndoorReputation
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Spawns" class="abs"></a>Spawns
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.RefillCount" class="abs"></a>RefillCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.LastRefillDay" class="abs"></a>LastRefillDay
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.LastVisitTime" class="abs"></a>LastVisitTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Reputation" class="abs"></a>Reputation
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.SpriteLights" class="abs"></a><a href="#structs.BaseLight">SpriteLights</a>[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameMap.RemoveObject" class="abs"></a>RemoveObject<b class="def-largs">(</b>Index<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.Render" class="abs"></a>Render<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IsIndoor" class="abs"></a>IsIndoor<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.IsOutdoor" class="abs"></a>IsOutdoor<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.LoadTileset" class="abs"></a>LoadTileset<b class="def-largs">(</b>Id<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.RoomFromPoint" class="abs"></a>RoomFromPoint<b class="def-largs">(</b>x, y, z<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.GetFloorLevel" class="abs"></a>GetFloorLevel<b class="def-largs">(</b>x, y, z, room<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">FloorZ</b>, <b class="def-param">FacetId</b>.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.GetGroundLevel" class="abs"></a>GetGroundLevel<b class="def-largs">(</b>x, y<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMap.GetFacet" class="abs"></a>GetFacet<b class="def-largs">(</b>Id<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameMouse"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>Mouse</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameMouse.Target" class="abs"></a><a href="#structs.ObjectRef">Target</a>
</td><td class="def-right">
 Use <a href="#structs.GameMouse.GetTarget">Mouse.GetTarget</a> instead.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.Item" class="abs"></a><a href="#structs.Item">Item</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameMouse.GetTarget" class="abs"></a>GetTarget<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <a href="#structs.ObjectRef">ObjectRef</a> of current mouse target
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.GetPos" class="abs"></a>GetPos<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns floating-point mouse position that includes sub-pixel difference caused by upscaling.<br>In UILayout mode this is the only way to find mouse coordinates when it's over 3D view. <a href="#structs.GameMouse.X">Mouse.X</a> and <a href="#structs.GameMouse.Y">Mouse.Y</a> would just return the middle of the view. When mouse is over interface items, both this function and <a href="#structs.GameMouse.X">Mouse.X</a>, <a href="#structs.GameMouse.Y">Mouse.Y</a> get coordinates within traditional interface to which UI layout is mapped.
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameMouse.SetIcon" class="abs"></a>SetIcon<b class="def-largs">(</b>Icon = "MICON1"<b class="def-rargs">)</b>
</td><td class="def-right">
 There are 3 special values:<br>"MICON1" = arrow cursor<br>"MICON2" = crosshair cursor for spells<br>"MICON3" = this cursor doesn't exist, don't use it<br>Other values change the picture of item carried by mouse.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.RemoveItem" class="abs"></a>RemoveItem<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Deletes item carried by the mouse and restores arrow cursor.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.AddItem" class="abs"></a>AddItem<b class="def-largs">(</b><a href="#structs.Item">Item</a><b class="def-rargs">)</b>
</td><td class="def-right">
 If there already was an item carried by the mouse, it will be taken into inventory or dropped.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameMouse.ReleaseItem" class="abs"></a>ReleaseItem<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 If there is an item carried by the mouse, it will be taken into inventory or dropped.
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameScreen"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>Screen</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameScreen.IsD3D" class="abs"></a>IsD3D
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.Width" class="abs"></a>Width
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.Pitch" class="abs"></a>Pitch
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.cx1" class="abs"></a>cx1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.cy1" class="abs"></a>cy1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.cx2" class="abs"></a>cx2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.cy2" class="abs"></a>cy2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.Buffer" class="abs"></a>Buffer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.ObjectByPixel" class="abs"></a>ObjectByPixel
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.RedBits" class="abs"></a>RedBits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.BlueBits" class="abs"></a>BlueBits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.GreenBits" class="abs"></a>GreenBits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.RedMask" class="abs"></a>RedMask
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.GreenMask" class="abs"></a>GreenMask
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.BlueMask" class="abs"></a>BlueMask
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameScreen.SaveToPcx" class="abs"></a>SaveToPcx<b class="def-largs">(</b>name, x = 0, y = 0, width = 640, height = 480<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">x</b>, <b class="def-param">y</b>, <b class="def-param">width</b>, <b class="def-param">height</b> can only be specified in MM6. MM7 and MM8 save a shot of whole screen area.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.SaveBufferToPcx" class="abs"></a>SaveBufferToPcx<b class="def-largs">(</b>name, buf, width = 640, height = 480<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.Draw" class="abs"></a>Draw<b class="def-largs">(</b>x, y, pic, style, rotate, EnglishD<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">style</b>:<br><span class="def-nbsp">  </span>"transparent", <b class="def-param">false</b> &ndash; draw treating color index 0 as transparent (default)<br><span class="def-nbsp">  </span>"opaque", <b class="def-param">true</b> &ndash; draw without transparency<br><span class="def-nbsp">  </span>"red" &ndash; draw broken item<br><span class="def-nbsp">  </span>"green" &ndash; draw unidentified item<br>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.DrawItemEffect" class="abs"></a>DrawItemEffect<b class="def-largs">(</b>x, y, shapePic, effectPic, palShift, palAnimateFrom, palAnimateTo, rotate, EnglishD, effectEnglishD<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameScreen.DrawToObjectByPixel" class="abs"></a>DrawToObjectByPixel<b class="def-largs">(</b>x, y, pic, index, rotate, EnglishD<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ActionItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ActionItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ActionItem.Action" class="abs"></a>Action
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ActionItem.Param" class="abs"></a>Param
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ActionItem.Param2" class="abs"></a>Param2
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.Arcomage"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.Arcomage</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Arcomage.StartingTower" class="abs"></a>StartingTower
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Arcomage.StartingWall" class="abs"></a>StartingWall
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Arcomage.StartingIncome" class="abs"></a>StartingIncome[3]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Arcomage.CardsCount" class="abs"></a>CardsCount
</td><td class="def-right">
 Internally up to 10 cards are supported.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Arcomage.MinIncome" class="abs"></a>MinIncome[3]
</td><td class="def-right">
 If you change these values, <a href="#structs.Arcomage.StartingIncome">StartingIncome</a> and <a href="#structs.ArcomagePlayer.Income">player income</a> would also change.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Arcomage.TowerToWin" class="abs"></a>TowerToWin
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Arcomage.ResToWin" class="abs"></a>ResToWin
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Arcomage.StartingRes" class="abs"></a>StartingRes[3]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Arcomage.AI" class="abs"></a>AI
</td><td class="def-right">
 0 &ndash; 2
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Arcomage.Players" class="abs"></a><a href="#structs.ArcomagePlayer">Players</a>[2]
</td><td class="def-right">
<b class="def-default">(Default)</b> Player 0 is the human, player 1 is AI
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ArcomagePlayer"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ArcomagePlayer</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ArcomagePlayer.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ArcomagePlayer.Human" class="abs"></a>Human
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ArcomagePlayer.Tower" class="abs"></a>Tower
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ArcomagePlayer.Wall" class="abs"></a>Wall
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ArcomagePlayer.Income" class="abs"></a>Income[3]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ArcomagePlayer.Res" class="abs"></a>Res[3]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ArcomagePlayer.Cards" class="abs"></a>Cards[10]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ArcomagePlayer.unk" class="abs"></a>unk[10][2]
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.BSPNode"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.BSPNode</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.BSPNode.FrontNode" class="abs"></a>FrontNode
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BSPNode.BackNode" class="abs"></a>BackNode
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BSPNode.CoplanarOffset" class="abs"></a>CoplanarOffset
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BSPNode.CoplanarSize" class="abs"></a>CoplanarSize
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.BaseBonus"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.BaseBonus</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.BaseBonus.Base" class="abs"></a>Base
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseBonus.Bonus" class="abs"></a>Bonus
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.BaseLight"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.BaseLight</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.BaseLight.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.Radius" class="abs"></a>Radius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.R" class="abs"></a>R
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.G" class="abs"></a>G
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.B" class="abs"></a>B
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BaseLight.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.BitmapsLod"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.BitmapsLod</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.BitmapsLod.File" class="abs"></a>File
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.FileName" class="abs"></a>FileName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.Loaded" class="abs"></a>Loaded
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.IOBuffer" class="abs"></a>IOBuffer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.IOBufferSize" class="abs"></a>IOBufferSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.LodHeaderSignature" class="abs"></a>LodHeaderSignature
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.Description" class="abs"></a>Description
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.ArchivesCount" class="abs"></a>ArchivesCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.ArchivesCArray" class="abs"></a>ArchivesCArray
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.ChapterHandle" class="abs"></a>ChapterHandle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.ChapterSize" class="abs"></a>ChapterSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.Files" class="abs"></a><a href="#structs.LodFile">Files</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.FilesOffset" class="abs"></a>FilesOffset
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.Bitmaps" class="abs"></a><a href="#structs.LodBitmap">Bitmaps</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.KeepCompressed" class="abs"></a>KeepCompressed
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.IsHardware" class="abs"></a>IsHardware
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.D3D_Surfaces" class="abs"></a>D3D_Surfaces[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.D3D_Textures" class="abs"></a>D3D_Textures[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.BitmapsLod.HasFile" class="abs"></a>HasFile<b class="def-largs">(</b>arg1 = ""<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.LoadBitmap" class="abs"></a>LoadBitmap<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.LoadBitmapPtr" class="abs"></a>LoadBitmapPtr<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BitmapsLod.LoadTFTBitmap" class="abs"></a>LoadTFTBitmap<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.BlvHeader"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.BlvHeader</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.BlvHeader.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BlvHeader.FacetDataSize" class="abs"></a>FacetDataSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BlvHeader.RoomDataSize" class="abs"></a>RoomDataSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BlvHeader.RoomLightDataSize" class="abs"></a>RoomLightDataSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.BlvHeader.DoorDataSize" class="abs"></a>DoorDataSize
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.CurrentTileBin"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.CurrentTileBin</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.CurrentTileBin.Items" class="abs"></a><a href="#structs.TileItem">Items</a>[]
</td><td class="def-right">
<b class="def-default">(Default)</b> 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.CustomLods"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.CustomLods</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.CustomLods.RecordIndex" class="abs"></a>RecordIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.CustomLods.Records" class="abs"></a><a href="#structs.LodRecord">Records</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.CustomLods.Load" class="abs"></a>Load<b class="def-largs">(</b>StdLod, Name<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.CustomLods.Free" class="abs"></a>Free<b class="def-largs">(</b>Ptr<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.DChestItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.DChestItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.DChestItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DChestItem.Width" class="abs"></a>Width
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DChestItem.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DChestItem.ImageIndex" class="abs"></a>ImageIndex
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.DecListItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.DecListItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.DecListItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.GameName" class="abs"></a>GameName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Radius" class="abs"></a>Radius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.LightRadius" class="abs"></a>LightRadius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.SFTIndex" class="abs"></a>SFTIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.SFTGroup" class="abs"></a>SFTGroup
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.NoBlockMovement" class="abs"></a>NoBlockMovement
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.NoDraw" class="abs"></a>NoDraw
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.FlickerSlow" class="abs"></a>FlickerSlow
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.FlickerMedium" class="abs"></a>FlickerMedium
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.FlickerFast" class="abs"></a>FlickerFast
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Marker" class="abs"></a>Marker
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.SlowLoop" class="abs"></a>SlowLoop
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.EmitFire" class="abs"></a>EmitFire
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.SoundOnDawn" class="abs"></a>SoundOnDawn
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.SoundOnDusk" class="abs"></a>SoundOnDusk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.EmitSmoke" class="abs"></a>EmitSmoke
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.SoundId" class="abs"></a>SoundId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Red" class="abs"></a>Red
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Green" class="abs"></a>Green
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DecListItem.Blue" class="abs"></a>Blue
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.DialogLogic"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.DialogLogic</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.DialogLogic.List" class="abs"></a>List[]
</td><td class="def-right">
 List of indexes to be displayed
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.ScrollPage" class="abs"></a>ScrollPage
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.CountOnScreen" class="abs"></a>CountOnScreen
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.ListCount" class="abs"></a>ListCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.ScrollPos" class="abs"></a>ScrollPos
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.AutonoteTab6Clicked" class="abs"></a>AutonoteTab6Clicked
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.AutonoteTab5Clicked" class="abs"></a>AutonoteTab5Clicked
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.MapMoveRightClicked" class="abs"></a>MapMoveRightClicked
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.AutonoteTab4Clicked" class="abs"></a>AutonoteTab4Clicked
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.MapMoveLeftClicked" class="abs"></a>MapMoveLeftClicked
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.AutonoteTab3Clicked" class="abs"></a>AutonoteTab3Clicked
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.MapMoveDownClicked" class="abs"></a>MapMoveDownClicked
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.AutonoteTab2Clicked" class="abs"></a>AutonoteTab2Clicked
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.MapMoveUpClicked" class="abs"></a>MapMoveUpClicked
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.AutonoteTab1Clicked" class="abs"></a>AutonoteTab1Clicked
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.ScrollDownClicked" class="abs"></a>ScrollDownClicked
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.ScrollUpClicked" class="abs"></a>ScrollUpClicked
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.SpellBookSelection" class="abs"></a>SpellBookSelection
</td><td class="def-right">
 Selected spell index within current page (1..11)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.SpellBookSelectedNewSpell" class="abs"></a>SpellBookSelectedNewSpell
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.AutonotesCategory" class="abs"></a>AutonotesCategory
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.ArmorSkills" class="abs"></a>ArmorSkills[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.WeaponSkills" class="abs"></a>WeaponSkills[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.MiscSkills" class="abs"></a>MiscSkills[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.MagicSkills" class="abs"></a>MagicSkills[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.DialogLogic.MonsterInfoMonster" class="abs"></a><a href="#structs.MapMonster">MonsterInfoMonster</a>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.Dlg"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.Dlg</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Dlg.Left" class="abs"></a>Left
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.Top" class="abs"></a>Top
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.Width" class="abs"></a>Width
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.Right_" class="abs"></a>Right_
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.Bottom_" class="abs"></a>Bottom_
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.DlgID" class="abs"></a>DlgID
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.Param" class="abs"></a>Param
</td><td class="def-right">
 2D Events Id / Chest Id / ...
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.ItemsCount" class="abs"></a>ItemsCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.KeyboardItemsCount" class="abs"></a>KeyboardItemsCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.KeyboardItem" class="abs"></a>KeyboardItem
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.KeyboardNavigationTrackMouse" class="abs"></a>KeyboardNavigationTrackMouse
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.KeyboardLeftRightStep" class="abs"></a>KeyboardLeftRightStep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.KeyboardItemsStart" class="abs"></a>KeyboardItemsStart
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.Index" class="abs"></a>Index
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.UseKeyboadNavigation" class="abs"></a>UseKeyboadNavigation
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.FirstItemPtr" class="abs"></a>FirstItemPtr
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.LastItemPtr" class="abs"></a>LastItemPtr
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Dlg.AddButton" class="abs"></a>AddButton<b class="def-largs">(</b>X, Y, Width, Height, Shape = 1, HintAction, ActionType, ActionInfo, Key, Hint, Sprites..., 0<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.SetKeyboardNavigation" class="abs"></a>SetKeyboardNavigation<b class="def-largs">(</b>KeyboardItemsCount, KeyboardNavigationTrackMouse, KeyboardLeftRightStep, KeyboardItemsStart<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.GetItemPtrByIndex" class="abs"></a>GetItemPtrByIndex<b class="def-largs">(</b>Index<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Dlg.Destroy" class="abs"></a>Destroy<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.EventLine"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.EventLine</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.EventLine.Event" class="abs"></a>Event
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.EventLine.Line" class="abs"></a>Line
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.EventLine.Offset" class="abs"></a>Offset
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.EventLine.RemoveEvent" class="abs"></a>RemoveEvent<b class="def-largs">(</b>id<b class="def-rargs">)</b>
</td><td class="def-right">
 It's a method of arrays of EventLine rather than EventLine itself.<br>E.g. <span class="def-code">Game.MapEvtLines:RemoveEvent(<span class="lua5-literal">100</span>)</span> would remove standard map event number <b class="def-param">100</b>, while <span class="def-code">Game.GlobalEvtLines:RemoveEvent(<span class="lua5-literal">100</span>)</span> would remove standard global event number <b class="def-param">100</b>.<br>To know exactly what would be disabled by <b class="def-param">RemoveEvent</b> method, you can look into text representations of decompiled events. For example, if you disable event <b class="def-param">226</b> in <b class="def-param">OUTE3</b> in MM6, it will disable both standard <b class="def-param">evt.map[226]</b> handler and <b class="def-param">events.LoadMap</b> event handler you see after it in the decompiled Lua script. When you see an event handler not associated with a script number in decompiled scripts, it usually belongs to the event right before it.<br>
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.Events2DItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.Events2DItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Events2DItem.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.Picture" class="abs"></a>Picture
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.OwnerName" class="abs"></a>OwnerName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.EnterText" class="abs"></a>EnterText
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.OwnerTitle" class="abs"></a>OwnerTitle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.PictureUnk" class="abs"></a>PictureUnk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.State" class="abs"></a>State
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.Rep" class="abs"></a>Rep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.Per" class="abs"></a>Per
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.C" class="abs"></a>C
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.Val" class="abs"></a>Val
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.A" class="abs"></a>A
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.OpenHour" class="abs"></a>OpenHour
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.CloseHour" class="abs"></a>CloseHour
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.ExitPic" class="abs"></a>ExitPic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.ExitMap" class="abs"></a>ExitMap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.QBit" class="abs"></a>QBit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Events2DItem.QuestBitRestriction" class="abs"></a>QuestBitRestriction
</td><td class="def-right">
 (old name)
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.FaceAnimationInfo"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.FaceAnimationInfo</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.FaceAnimationInfo.Sounds" class="abs"></a>Sounds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FaceAnimationInfo.Sound1" class="abs"></a>Sound1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FaceAnimationInfo.Sound2" class="abs"></a>Sound2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FaceAnimationInfo.Expressions" class="abs"></a>Expressions[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FaceAnimationInfo.Expression1" class="abs"></a>Expression1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FaceAnimationInfo.Expression2" class="abs"></a>Expression2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FaceAnimationInfo.Expression3" class="abs"></a>Expression3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FaceAnimationInfo.Expression4" class="abs"></a>Expression4
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FaceAnimationInfo.Expression5" class="abs"></a>Expression5
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.FacetData"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.FacetData</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.FacetData.FacetIndex" class="abs"></a>FacetIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FacetData.BitmapIndex" class="abs"></a>BitmapIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FacetData.TFTIndex" class="abs"></a>TFTIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FacetData.BitmapU" class="abs"></a>BitmapU
</td><td class="def-right">
 Bitmap U Offset
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FacetData.BitmapV" class="abs"></a>BitmapV
</td><td class="def-right">
 Bitmap V Offset
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FacetData.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FacetData.Event" class="abs"></a>Event
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.FloatVector"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.FloatVector</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.FloatVector.1" class="abs"></a>1
</td><td class="def-right">
 same as <b class="def-param">X</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FloatVector.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FloatVector.2" class="abs"></a>2
</td><td class="def-right">
 same as <b class="def-param">Y</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FloatVector.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FloatVector.3" class="abs"></a>3
</td><td class="def-right">
 same as <b class="def-param">Z</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FloatVector.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.FogChances"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.FogChances</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.FogChances.Thick" class="abs"></a>Thick
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FogChances.Medium" class="abs"></a>Medium
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.FogChances.Light" class="abs"></a>Light
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameClassKinds"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.GameClassKinds</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameClassKinds.HPBase" class="abs"></a>HPBase[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClassKinds.SPBase" class="abs"></a>SPBase[]
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClassKinds.StartingStats" class="abs"></a>StartingStats[][<a href="#const.Stats">stat</a>]
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClassKinds.StartingSkills" class="abs"></a>StartingSkills[][<a href="#const.Skills">skill</a>]
</td><td class="def-right">
 <span class="def-ver">[MM6]</span> <span class="def-nbsp"> </span>0 = not available, <span class="def-nbsp"> </span>1 = given on start, <span class="def-nbsp"> </span>2 = can choose on start, <span class="def-nbsp"> </span>3 = can learn<br><span class="def-ver">[MM7+]</span> <span class="def-nbsp"> </span>0 = can't choose, <span class="def-nbsp"> </span>1 = can choose on start, <span class="def-nbsp"> </span>2 = given on start
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameClasses"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.GameClasses</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameClasses.HPFactor" class="abs"></a>HPFactor[<a href="#const.Class">class</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClasses.SPFactor" class="abs"></a>SPFactor[<a href="#const.Class">class</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClasses.HPBase" class="abs"></a>HPBase[<a href="#const.Class">class</a>]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClasses.SPBase" class="abs"></a>SPBase[<a href="#const.Class">class</a>]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClasses.Skills" class="abs"></a>Skills[<a href="#const.Class">class</a>][<a href="#const.Skills">skill</a>]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  0 = not available, <span class="def-nbsp"> </span>1 = Basic, <span class="def-nbsp"> </span>2 = Expert, <span class="def-nbsp"> </span>3 = Master, <span class="def-nbsp"> </span>4 = GM
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClasses.StartingStats" class="abs"></a><a href="#structs.StartStat">StartingStats</a>[<a href="#const.Class">class</a>]
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GameClasses.SPStats" class="abs"></a>SPStats[<a href="#const.Class">class</a>]
</td><td class="def-right">
 0 = no SP, 1 = Intellect, 2 = Personality, 3 = both
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GameRaces"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.GameRaces</h3>
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GameRaces.StartingStats" class="abs"></a><a href="#structs.StartStat">StartingStats</a>[<a href="#const.Race">race</a>][<a href="#const.Stats">stat</a>]
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.GeneralStoreItemKind"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.GeneralStoreItemKind</h3>
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.GeneralStoreItemKind.Level" class="abs"></a>Level
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.GeneralStoreItemKind.Items" class="abs"></a>Items[1..6]
</td><td class="def-right">
<b class="def-default">(Default)</b> If it's zero, random Boots or Gountlets are generated.
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.HistoryTxtItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.HistoryTxtItem</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.HistoryTxtItem.Text" class="abs"></a>Text
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.HistoryTxtItem.Title" class="abs"></a>Title
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.HistoryTxtItem.Time" class="abs"></a>Time
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.HouseMovie"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.HouseMovie</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.HouseMovie.FileName" class="abs"></a>FileName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.HouseMovie.Background" class="abs"></a>Background
</td><td class="def-right">
 EVTPAR* index, used only in MM6
</td>
</tr><tr>
<td class="def-left">
<a id="structs.HouseMovie.NPCPic" class="abs"></a>NPCPic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.HouseMovie.HouseType" class="abs"></a>HouseType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.HouseMovie.Sounds" class="abs"></a>Sounds
</td><td class="def-right">
 30000 + Sounds*100 is the Id in Sounds.txt
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.IFTItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.IFTItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.IFTItem.GroupName" class="abs"></a>GroupName
</td><td class="def-right">
 animation name
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.IconName" class="abs"></a>IconName
</td><td class="def-right">
 image name in icons.lod
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.Time" class="abs"></a>Time
</td><td class="def-right">
 time for this frame, units in 1/16 of a second
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.TotalTime" class="abs"></a>TotalTime
</td><td class="def-right">
 total time for this group
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.NotGroupEnd" class="abs"></a>NotGroupEnd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.GroupStart" class="abs"></a>GroupStart
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.IFTItem.IconIndex" class="abs"></a>IconIndex
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.Item"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.Item</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Item.Number" class="abs"></a>Number
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Bonus" class="abs"></a>Bonus
</td><td class="def-right">
 From STDITEMS.TXT. You can use <a href="#const.Stats">const.Stats</a>, just add 1 to a supported value from it.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.BonusStrength" class="abs"></a>BonusStrength
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Bonus2" class="abs"></a>Bonus2
</td><td class="def-right">
 From SPCITEMS.TXT. Value in case of gold.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Charges" class="abs"></a>Charges
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Identified" class="abs"></a>Identified
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Broken" class="abs"></a>Broken
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.TemporaryBonus" class="abs"></a>TemporaryBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Stolen" class="abs"></a>Stolen
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Hardened" class="abs"></a>Hardened
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Refundable" class="abs"></a>Refundable
</td><td class="def-right">
 Added in patch v2.5.4. Used internally to remove artifacts generated in unopened chests from <a href="#structs.GameParty.ArtifactsFound">ArtifactsFound</a> upon map refill.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Condition" class="abs"></a>Condition
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.BodyLocation" class="abs"></a>BodyLocation
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.MaxCharges" class="abs"></a>MaxCharges
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Owner" class="abs"></a>Owner
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.BonusExpireTime" class="abs"></a>BonusExpireTime
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Item.GetValue" class="abs"></a>GetValue<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.GetName" class="abs"></a>GetName<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.GetIdentifiedName" class="abs"></a>GetIdentifiedName<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.GenerateArtifact" class="abs"></a>GenerateArtifact<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.Randomize" class="abs"></a>Randomize<b class="def-largs">(</b>Strength, <a href="#const.ItemType">Type</a><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.T" class="abs"></a>T<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns ItemsTxt entry.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Item.InitSpecial" class="abs"></a>InitSpecial<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span> Sets up enchantments if the item is "Special" as marked by "material" column of items.txt
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ItemsTxtItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ItemsTxtItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Picture" class="abs"></a>Picture
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.NotIdentifiedName" class="abs"></a>NotIdentifiedName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Notes" class="abs"></a>Notes
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Value" class="abs"></a>Value
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.EquipStat" class="abs"></a>EquipStat
</td><td class="def-right">
 Subtract 1 from <a href="#const.ItemType">const.ItemType</a> value
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Skill" class="abs"></a><a href="#const.Skill">Skill</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Mod1DiceCount" class="abs"></a>Mod1DiceCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Mod1DiceSides" class="abs"></a>Mod1DiceSides
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Mod2" class="abs"></a>Mod2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Material" class="abs"></a>Material
</td><td class="def-right">
 0 = normal, <span class="def-nbsp"> </span>1 = artifact, <span class="def-nbsp"> </span>2 = relic, <span class="def-nbsp"> </span>3 = special
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.ChanceByLevel" class="abs"></a>ChanceByLevel[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.IdRepSt" class="abs"></a>IdRepSt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.SpriteIndex" class="abs"></a>SpriteIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.EquipX" class="abs"></a>EquipX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.EquipY" class="abs"></a>EquipY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Bonus2" class="abs"></a>Bonus2
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  VarA
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.Bonus" class="abs"></a>Bonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  VarA
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ItemsTxtItem.BonusStrength" class="abs"></a>BonusStrength
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  VarB
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LloydBeaconSlot"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LloydBeaconSlot</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.ExpireTime" class="abs"></a>ExpireTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.Direction" class="abs"></a>Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.LookAngle" class="abs"></a>LookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.Active" class="abs"></a>Active
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.MapIndex" class="abs"></a>MapIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LloydBeaconSlot.Map" class="abs"></a>Map
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.Lod"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.Lod</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Lod.File" class="abs"></a>File
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.FileName" class="abs"></a>FileName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.Loaded" class="abs"></a>Loaded
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.IOBuffer" class="abs"></a>IOBuffer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.IOBufferSize" class="abs"></a>IOBufferSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.LodHeaderSignature" class="abs"></a>LodHeaderSignature
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.Description" class="abs"></a>Description
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.ArchivesCount" class="abs"></a>ArchivesCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.ArchivesCArray" class="abs"></a>ArchivesCArray
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.ChapterHandle" class="abs"></a>ChapterHandle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.ChapterSize" class="abs"></a>ChapterSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.Files" class="abs"></a><a href="#structs.LodFile">Files</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Lod.FilesOffset" class="abs"></a>FilesOffset
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Lod.HasFile" class="abs"></a>HasFile<b class="def-largs">(</b>arg1 = ""<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LodBitmap"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LodBitmap</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodBitmap.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.BmpSize" class="abs"></a>BmpSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.DataSize" class="abs"></a>DataSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Width" class="abs"></a>Width
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.WidthLn2" class="abs"></a>WidthLn2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.HeightLn2" class="abs"></a>HeightLn2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.WidthMinus1" class="abs"></a>WidthMinus1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.HeightMinus1" class="abs"></a>HeightMinus1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Palette" class="abs"></a>Palette
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.LoadedPalette" class="abs"></a>LoadedPalette
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.UnpackedSize" class="abs"></a>UnpackedSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Image" class="abs"></a>Image
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.ImageDiv2" class="abs"></a>ImageDiv2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.ImageDiv4" class="abs"></a>ImageDiv4
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.ImageDiv8" class="abs"></a>ImageDiv8
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Palette16" class="abs"></a>Palette16
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodBitmap.Palette24" class="abs"></a>Palette24
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodBitmap.LoadBitmapPalette" class="abs"></a>LoadBitmapPalette<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LodFile"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LodFile</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodFile.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodFile.Offset" class="abs"></a>Offset
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodFile.Size" class="abs"></a>Size
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LodRecord"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LodRecord</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodRecord.LodPtr" class="abs"></a>LodPtr
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodRecord.NamePtr" class="abs"></a>NamePtr
</td><td class="def-right">
 Pointer passed to Load* function
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodRecord.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LodSprite"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LodSprite</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodSprite.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.DataSize" class="abs"></a>DataSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.Width" class="abs"></a>Width
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.Palette" class="abs"></a>Palette
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.YSkip" class="abs"></a>YSkip
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.UnpackedSize" class="abs"></a>UnpackedSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.Lines" class="abs"></a><a href="#structs.LodSpriteLine">Lines</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSprite.Buffer" class="abs"></a>Buffer
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LodSpriteD3D"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LodSpriteD3D</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.Palette" class="abs"></a>Palette
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.Surface" class="abs"></a>Surface
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.Texture" class="abs"></a>Texture
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.AreaX" class="abs"></a>AreaX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.AreaY" class="abs"></a>AreaY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.BufferWidth" class="abs"></a>BufferWidth
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.BufferHeight" class="abs"></a>BufferHeight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.AreaWidth" class="abs"></a>AreaWidth
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteD3D.AreaHeight" class="abs"></a>AreaHeight
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.LodSpriteLine"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.LodSpriteLine</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.LodSpriteLine.L" class="abs"></a>L
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteLine.R" class="abs"></a>R
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.LodSpriteLine.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapChest"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapChest</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapChest.ChestPicture" class="abs"></a>ChestPicture
</td><td class="def-right">
 0..7 <span class="def-nbsp"> </span>chest id
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapChest.Trapped" class="abs"></a>Trapped
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapChest.ItemsPlaced" class="abs"></a>ItemsPlaced
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapChest.Identified" class="abs"></a>Identified
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapChest.Bits" class="abs"></a><a href="#const.ChestBits">Bits</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapChest.Items" class="abs"></a><a href="#structs.Item">Items</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapChest.Inventory" class="abs"></a>Inventory[]
</td><td class="def-right">
 (<b class="def-param">Items</b> index) for main item cell, <span class="def-nbsp"> </span>-(1 + main <b class="def-param">Inventory</b> cell index) for other cells
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapChest.RefundArtifacts" class="abs"></a>RefundArtifacts<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapDoor"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapDoor</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapDoor.StartState2" class="abs"></a>StartState2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.SilentMove" class="abs"></a>SilentMove
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.NoSound" class="abs"></a>NoSound
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.Stopped" class="abs"></a>Stopped
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.TimeStep" class="abs"></a>TimeStep
</td><td class="def-right">
 time since triggered
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.Direction" class="abs"></a>Direction[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.DirectionX" class="abs"></a>DirectionX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.DirectionY" class="abs"></a>DirectionY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.DirectionZ" class="abs"></a>DirectionZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.MoveLength" class="abs"></a>MoveLength
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.Speed2" class="abs"></a>Speed2
</td><td class="def-right">
 State 3 velocity (speed*time/128 = position)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.OpenSpeed" class="abs"></a>OpenSpeed
</td><td class="def-right">
 State 3 velocity (speed*time/128 = position)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.Speed1" class="abs"></a>Speed1
</td><td class="def-right">
 State 1 velocity (speed*time/128 = position)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.CloseSpeed" class="abs"></a>CloseSpeed
</td><td class="def-right">
 State 1 velocity
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.VertexIds" class="abs"></a>VertexIds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.FacetIds" class="abs"></a>FacetIds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.RoomIds" class="abs"></a>RoomIds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.FacetStartU" class="abs"></a>FacetStartU[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.FacetStartV" class="abs"></a>FacetStartV[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.VertexStartX" class="abs"></a>VertexStartX[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.VertexStartY" class="abs"></a>VertexStartY[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.VertexStartZ" class="abs"></a>VertexStartZ[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapDoor.State" class="abs"></a>State
</td><td class="def-right">
 <b class="def-param">State</b> compared with evt.SetDoorState:<br>0 = state (0)<br>1 = move to (1)<br>2 = state (1)<br>3 = move to (0)
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapExtra"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapExtra</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapExtra.LastVisitTime" class="abs"></a>LastVisitTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.SkyBitmap" class="abs"></a>SkyBitmap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.Foggy" class="abs"></a>Foggy
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.DayBits" class="abs"></a>DayBits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.FogRange1" class="abs"></a>FogRange1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.FogRange2" class="abs"></a>FogRange2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.Raining" class="abs"></a>Raining
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.Snowing" class="abs"></a>Snowing
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.Underwater" class="abs"></a>Underwater
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  elemw.odm
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.NoTerrain" class="abs"></a>NoTerrain
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  elema.odm
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.AlwaysDark" class="abs"></a>AlwaysDark
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.AlwaysLight" class="abs"></a>AlwaysLight
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  elema.odm
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.AlwaysFoggy" class="abs"></a>AlwaysFoggy
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  elemf.odm, elemw.odm
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.RedFog" class="abs"></a>RedFog
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  elemf.odm
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.Bits" class="abs"></a>Bits
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.Ceiling" class="abs"></a>Ceiling
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.LastWeeklyTimer" class="abs"></a>LastWeeklyTimer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.LastMonthlyTimer" class="abs"></a>LastMonthlyTimer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.LastYearlyTimer" class="abs"></a>LastYearlyTimer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapExtra.LastDailyTimer" class="abs"></a>LastDailyTimer
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapFacet"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapFacet</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapFacet.NormalF" class="abs"></a>NormalF[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  normal float
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalFX" class="abs"></a>NormalFX
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  normal X float
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalFY" class="abs"></a>NormalFY
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  normal Y float
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalFZ" class="abs"></a>NormalFZ
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  normal Z float
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalFDistance" class="abs"></a>NormalFDistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  normal distance float
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.Normal" class="abs"></a>Normal[]
</td><td class="def-right">
 normal fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalX" class="abs"></a>NormalX
</td><td class="def-right">
 normal X fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalY" class="abs"></a>NormalY
</td><td class="def-right">
 normal Y fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalZ" class="abs"></a>NormalZ
</td><td class="def-right">
 normal Z fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.NormalDistance" class="abs"></a>NormalDistance
</td><td class="def-right">
 normal distance fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ZCalc1" class="abs"></a>ZCalc1
</td><td class="def-right">
  <span class="def-nbsp"> </span><span class="def-code"><span class="lua5-note">=</span> <span class="lua5-operator">-</span>(NormalX <span class="lua5-operator">*</span> <span class="lua5-literal">2</span><span class="lua5-operator">^</span><span class="lua5-literal">16</span>) <span class="lua5-operator">/</span> NormalZ <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span></span>(or 0 if <b class="def-param">NormalZ</b> is 0)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ZCalc2" class="abs"></a>ZCalc2
</td><td class="def-right">
  <span class="def-nbsp"> </span><span class="def-code"><span class="lua5-note">=</span> <span class="lua5-operator">-</span>(NormalY <span class="lua5-operator">*</span> <span class="lua5-literal">2</span><span class="lua5-operator">^</span><span class="lua5-literal">16</span>) <span class="lua5-operator">/</span> NormalZ <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span></span>(or 0 if <b class="def-param">NormalZ</b> is 0)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ZCalc3" class="abs"></a>ZCalc3
</td><td class="def-right">
  <span class="def-nbsp"> </span><span class="def-code"><span class="lua5-note">=</span> <span class="lua5-operator">-</span>(NormalDistance <span class="lua5-operator">*</span> <span class="lua5-literal">2</span><span class="lua5-operator">^</span><span class="lua5-literal">16</span>) <span class="lua5-operator">/</span> NormalZ <span> </span></span>(or 0 if <b class="def-param">NormalZ</b> is 0)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.EventDisabledByCtrlClick" class="abs"></a>EventDisabledByCtrlClick
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ScrollDown" class="abs"></a>ScrollDown
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ScrollUp" class="abs"></a>ScrollUp
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.TriggerByObject" class="abs"></a>TriggerByObject
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  happens even if there's no event assigned
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.IsLava" class="abs"></a>IsLava
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ScrollLeft" class="abs"></a>ScrollLeft
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.HasData" class="abs"></a>HasData
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.FlipV" class="abs"></a>FlipV
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.AnimatedTFT" class="abs"></a>AnimatedTFT
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.Invisible" class="abs"></a>Invisible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.TriggerByStep" class="abs"></a>TriggerByStep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.IsSecret" class="abs"></a>IsSecret
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  show in red with Perception
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.AlignLeft" class="abs"></a>AlignLeft
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.TriggerByClick" class="abs"></a>TriggerByClick
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.DisableEventByCtrlClick" class="abs"></a>DisableEventByCtrlClick
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  indoor only: click event gets disabled by Ctrl+Click
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.AlternativeSound" class="abs"></a>AlternativeSound
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.TriggerByMonster" class="abs"></a>TriggerByMonster
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  happens even if there's no event assigned
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MoveByDoor" class="abs"></a>MoveByDoor
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.AlignRight" class="abs"></a>AlignRight
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.AlignTop" class="abs"></a>AlignTop
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.IsPortal" class="abs"></a>IsPortal
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.IsWater" class="abs"></a>IsWater
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.IsEventJustHint" class="abs"></a>IsEventJustHint
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ScrollRight" class="abs"></a>ScrollRight
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.IsSky" class="abs"></a>IsSky
</td><td class="def-right">
 outdoor in software mode: horizontal flow
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.Untouchable" class="abs"></a>Untouchable
</td><td class="def-right">
 great for vertical facets of stairs. <span class="def-ver">[MM7+]</span> Shouldn't be used for sloped floor, like it's used in MM6.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.FlipU" class="abs"></a>FlipU
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.AlignBottom" class="abs"></a>AlignBottom
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ProjectToXY" class="abs"></a>ProjectToXY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ProjectToYZ" class="abs"></a>ProjectToYZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ProjectToXZ" class="abs"></a>ProjectToXZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.Bits" class="abs"></a><a href="#const.FacetBits">Bits</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.VertexIds" class="abs"></a>VertexIds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.XInterceptDisplacement" class="abs"></a>XInterceptDisplacement[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.YInterceptDisplacement" class="abs"></a>YInterceptDisplacement[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.ZInterceptDisplacement" class="abs"></a>ZInterceptDisplacement[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.UList" class="abs"></a>UList[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.VList" class="abs"></a>VList[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.DataIndex" class="abs"></a>DataIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.BitmapId" class="abs"></a>BitmapId
</td><td class="def-right">
 Bitmap Index
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.Room" class="abs"></a>Room
</td><td class="def-right">
 Room #
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.RoomBehind" class="abs"></a>RoomBehind
</td><td class="def-right">
 Room # Behind facet
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MinX" class="abs"></a>MinX
</td><td class="def-right">
 Bounding Box Min X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MaxX" class="abs"></a>MaxX
</td><td class="def-right">
 Bounding Box Max X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MinY" class="abs"></a>MinY
</td><td class="def-right">
 Bounding Box Min Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MaxY" class="abs"></a>MaxY
</td><td class="def-right">
 Bounding Box Max Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MinZ" class="abs"></a>MinZ
</td><td class="def-right">
 Bounding Box Min Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.MaxZ" class="abs"></a>MaxZ
</td><td class="def-right">
 Bounding Box Max Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.PolygonType" class="abs"></a>PolygonType
</td><td class="def-right">
 Polygon type:<br>0 = empty<br>1 = wall<br>2 = unused<br>3 = horizontal floor<br>4 = irregular floor (non-horizontal)<br>5 = horizontal ceiling<br>6 = irregular ceiling (non-horizontal)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapFacet.VertexesCount" class="abs"></a>VertexesCount
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapLight"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapLight</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapLight.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Off" class="abs"></a>Off
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Radius" class="abs"></a>Radius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.R" class="abs"></a>R
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.G" class="abs"></a>G
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.B" class="abs"></a>B
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Type" class="abs"></a>Type
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Brightness" class="abs"></a>Brightness
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapLight.Id" class="abs"></a>Id
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapModel"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapModel</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapModel.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Name2" class="abs"></a>Name2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.ShowOnMap" class="abs"></a>ShowOnMap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Vertexes" class="abs"></a><a href="#structs.ModelVertex">Vertexes</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.ConvexFacetsCount" class="abs"></a>ConvexFacetsCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Facets" class="abs"></a><a href="#structs.ModelFacet">Facets</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Ordering" class="abs"></a>Ordering[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BSPNodes" class="abs"></a><a href="#structs.BSPNode">BSPNodes</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.GridX" class="abs"></a>GridX
</td><td class="def-right">
 center X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.GridY" class="abs"></a>GridY
</td><td class="def-right">
 center Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.MinX" class="abs"></a>MinX
</td><td class="def-right">
 Bounding MIN X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.MinY" class="abs"></a>MinY
</td><td class="def-right">
 Bounding MIN Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.MinZ" class="abs"></a>MinZ
</td><td class="def-right">
 Bounding MIN Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.MaxX" class="abs"></a>MaxX
</td><td class="def-right">
 Bounding MAX X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.MaxY" class="abs"></a>MaxY
</td><td class="def-right">
 Bounding MAX Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.MaxZ" class="abs"></a>MaxZ
</td><td class="def-right">
 Bounding MAX Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BFMinX" class="abs"></a>BFMinX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BFMinY" class="abs"></a>BFMinY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BFMinZ" class="abs"></a>BFMinZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BFMaxX" class="abs"></a>BFMaxX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BFMaxY" class="abs"></a>BFMaxY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BFMaxZ" class="abs"></a>BFMaxZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BoxCenterX" class="abs"></a>BoxCenterX
</td><td class="def-right">
 Bounding center X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BoxCenterY" class="abs"></a>BoxCenterY
</td><td class="def-right">
 Bounding center Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BoxCenterZ" class="abs"></a>BoxCenterZ
</td><td class="def-right">
 Bounding center Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapModel.BoundingRadius" class="abs"></a>BoundingRadius
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapMonster"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapMonster</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapMonster.Name" class="abs"></a>Name
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.NPC_ID" class="abs"></a>NPC_ID
</td><td class="def-right">
 <span class="def-ver">[MM6]</span> Index in <a href="#structs.GameStructure.StreetNPC">Game.StreetNPC</a> + 1<br><span class="def-ver">[MM7+]</span> Index in <a href="#structs.GameStructure.NPC">Game.NPC</a> or index in <a href="#structs.GameStructure.StreetNPC">Game.StreetNPC</a> + 5000
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ShowOnMap" class="abs"></a>ShowOnMap
</td><td class="def-right">
 monster was once seen by party
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.OnAlertMap" class="abs"></a>OnAlertMap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Active" class="abs"></a>Active
</td><td class="def-right">
 inside the active radius
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ShowAsHostile" class="abs"></a>ShowAsHostile
</td><td class="def-right">
 show as hostile on map
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Hostile" class="abs"></a>Hostile
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.TreasureGenerated" class="abs"></a>TreasureGenerated
</td><td class="def-right">
 treasure is in <b class="def-param">Items</b>[0] and <b class="def-param">Items</b>[1], gold is in <b class="def-param">Items</b>[3]
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Invisible" class="abs"></a>Invisible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.IsObeliskChest" class="abs"></a>IsObeliskChest
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.NoFlee" class="abs"></a>NoFlee
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Bits" class="abs"></a><a href="#const.MonsterBits">Bits</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.HP" class="abs"></a>HP
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.HitPoints" class="abs"></a>HitPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Id" class="abs"></a>Id
</td><td class="def-right">
 Changing may cause random crashes after loading the game! Be careful.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Level" class="abs"></a>Level
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.TreasureItemPercent" class="abs"></a>TreasureItemPercent
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.TreasureDiceCount" class="abs"></a>TreasureDiceCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.TreasureDiceSides" class="abs"></a>TreasureDiceSides
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.TreasureItemLevel" class="abs"></a>TreasureItemLevel
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.TreasureItemType" class="abs"></a>TreasureItemType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Fly" class="abs"></a>Fly
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.MoveType" class="abs"></a>MoveType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.AIType" class="abs"></a>AIType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.HostileType" class="abs"></a>HostileType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Vampire" class="abs"></a>Prefers.Vampire
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Troll" class="abs"></a>Prefers.Troll
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Monk" class="abs"></a>Prefers.Monk
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Thief" class="abs"></a>Prefers.Thief
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Cleric" class="abs"></a>Prefers.Cleric
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Male" class="abs"></a>Prefers.Male
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Sorcerer" class="abs"></a>Prefers.Sorcerer
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Female" class="abs"></a>Prefers.Female
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Dragon" class="abs"></a>Prefers.Dragon
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Minotaur" class="abs"></a>Prefers.Minotaur
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.DarkElf" class="abs"></a>Prefers.DarkElf
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Necro" class="abs"></a>Prefers.Necro
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Goblin" class="abs"></a>Prefers.Goblin
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Archer" class="abs"></a>Prefers.Archer
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Paladin" class="abs"></a>Prefers.Paladin
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Druid" class="abs"></a>Prefers.Druid
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Dwarf" class="abs"></a>Prefers.Dwarf
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Ranger" class="abs"></a>Prefers.Ranger
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Elf" class="abs"></a>Prefers.Elf
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Human" class="abs"></a>Prefers.Human
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Prefers.Knight" class="abs"></a>Prefers.Knight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.PrefClass" class="abs"></a>PrefClass
</td><td class="def-right">
 Preferred target
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Bonus" class="abs"></a>Bonus
</td><td class="def-right">
 (steal, curse, ...)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.BonusMul" class="abs"></a>BonusMul
</td><td class="def-right">
 Disease1x5 etc. The chance that a monster would use the bonus is <b class="def-param">Level</b>*<b class="def-param">BonusMul</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Attack1" class="abs"></a><a href="#structs.MonsterAttackInfo">Attack1</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Attack2Chance" class="abs"></a>Attack2Chance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Attack2" class="abs"></a><a href="#structs.MonsterAttackInfo">Attack2</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpellChance" class="abs"></a>SpellChance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Spell" class="abs"></a>Spell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Spell2Chance" class="abs"></a>Spell2Chance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Spell2" class="abs"></a>Spell2
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpellSkill" class="abs"></a>SpellSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Resistances" class="abs"></a>Resistances[<a href="#const.Damage">kind</a>]
</td><td class="def-right">
 For immunity use <a href="#const.MonsterImmune">const.MonsterImmune</a>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FireResistance" class="abs"></a>FireResistance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.AirResistance" class="abs"></a>AirResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.WaterResistance" class="abs"></a>WaterResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.EarthResistance" class="abs"></a>EarthResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.MindResistance" class="abs"></a>MindResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpiritResistance" class="abs"></a>SpiritResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.BodyResistance" class="abs"></a>BodyResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.LightResistance" class="abs"></a>LightResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.DarkResistance" class="abs"></a>DarkResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ElecResistance" class="abs"></a>ElecResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ColdResistance" class="abs"></a>ColdResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.PoisonResistance" class="abs"></a>PoisonResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.PhysResistance" class="abs"></a>PhysResistance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Special" class="abs"></a>Special
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  1 = shot, 2 = summon, 3 = explode
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpecialA" class="abs"></a>SpecialA
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  shot: C = count<br>summon: A = {RandomLevel = 0, fixed = 1} &ndash; monster level (0 means A, B or C is chosen randomly, monster index should be that of A variation. Values of 2 and 3 are the same as 1, but in MM7 before GrayFace Patch v2.1 it was causing a bug), B = {ground = 0, air = 1}, C = already summoned count (up to 3), D = monster index<br>explode: AdB + C, D = attack type
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpecialB" class="abs"></a>SpecialB
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpecialC" class="abs"></a>SpecialC
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.MagicResistance" class="abs"></a>MagicResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.PrefNum" class="abs"></a>PrefNum
</td><td class="def-right">
 Number of party members to hit using Attack1 &amp; Attack2
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.BloodSplat" class="abs"></a>BloodSplat
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Spell2Skill" class="abs"></a>Spell2Skill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpecialD" class="abs"></a>SpecialD
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  (summoned monster or damage type in case of explosive attack)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.QuestItem" class="abs"></a>QuestItem
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FullHP" class="abs"></a>FullHP
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FullHitPoints" class="abs"></a>FullHitPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ArmorClass" class="abs"></a>ArmorClass
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Exp" class="abs"></a>Exp
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Experience" class="abs"></a>Experience
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.MoveSpeed" class="abs"></a>MoveSpeed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.AttackRecovery" class="abs"></a>AttackRecovery
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.RangeAttack" class="abs"></a>RangeAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Id2" class="abs"></a>Id2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.BodyRadius" class="abs"></a>BodyRadius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.BodyHeight" class="abs"></a>BodyHeight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Velocity" class="abs"></a>Velocity
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.VelocityX" class="abs"></a>VelocityX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.VelocityY" class="abs"></a>VelocityY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.VelocityZ" class="abs"></a>VelocityZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Direction" class="abs"></a>Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.LookAngle" class="abs"></a>LookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Room" class="abs"></a>Room
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.CurrentActionLength" class="abs"></a>CurrentActionLength
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.StartX" class="abs"></a>StartX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.StartY" class="abs"></a>StartY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.StartZ" class="abs"></a>StartZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GuardX" class="abs"></a>GuardX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GuardY" class="abs"></a>GuardY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GuardZ" class="abs"></a>GuardZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GuardRadius" class="abs"></a>GuardRadius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.AIState" class="abs"></a><a href="#const.AIState">AIState</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GraphicState" class="abs"></a>GraphicState
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Item" class="abs"></a>Item
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.CurrentActionStep" class="abs"></a>CurrentActionStep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Frames" class="abs"></a>Frames[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesStand" class="abs"></a>FramesStand
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesWalk" class="abs"></a>FramesWalk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesAttack" class="abs"></a>FramesAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesShoot" class="abs"></a>FramesShoot
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesStun" class="abs"></a>FramesStun
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesGotHit" class="abs"></a><a href="#Same%20as%20FramesStun">FramesGotHit</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesDie" class="abs"></a>FramesDie
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesDead" class="abs"></a>FramesDead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.FramesFidget" class="abs"></a>FramesFidget
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Sounds" class="abs"></a>Sounds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SoundAttack" class="abs"></a>SoundAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SoundDie" class="abs"></a>SoundDie
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SoundGetHit" class="abs"></a>SoundGetHit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SoundGotHit" class="abs"></a><a href="#Same%20as%20SoundGetHit">SoundGotHit</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SoundFidget" class="abs"></a>SoundFidget
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SpellBuffs" class="abs"></a><a href="#structs.SpellBuff">SpellBuffs</a>[<a href="#const.MonsterBuff">buff</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Items" class="abs"></a><a href="#structs.Item">Items</a>[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  Indexes 0 and 1 are used for stolen items, indexes 2 and 3 are used if TreasureGenerated bit is set: index 2 holds the item and index 3 holds the gold.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Group" class="abs"></a>Group
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Ally" class="abs"></a>Ally
</td><td class="def-right">
 Monster class that guards or is guraded by this one. That is, <span class="def-code">(Id <span class="lua5-operator">+</span> <span class="lua5-literal">2</span>):div(<span class="lua5-literal">3</span>)</span>, like in Hostile.txt.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Schedules" class="abs"></a><a href="#structs.MonsterSchedule">Schedules</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.Summoner" class="abs"></a>Summoner
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.LastAttacker" class="abs"></a>LastAttacker
</td><td class="def-right">
 Last one who hit the monster
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.NameId" class="abs"></a>NameId
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  From PlaceMon.txt
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapMonster.IsAgainst" class="abs"></a>IsAgainst<b class="def-largs">(</b><a href="#structs.MapMonster">Mon2</a><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  If <b class="def-param">Mon2</b> isn't specified, attitude towards party is checked
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.LoadFrames" class="abs"></a>LoadFrames<b class="def-largs">(</b>SoundLoaded = false<b class="def-rargs">)</b>
</td><td class="def-right">
 If <b class="def-param">SoundLoaded</b> = <b class="def-param">false</b>, sound indexes would be loaded for the monster as well.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ChooseTargetPlayer" class="abs"></a>ChooseTargetPlayer<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns player slot index
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.CalcTakenDamage" class="abs"></a>CalcTakenDamage<b class="def-largs">(</b>DamageKind, Damage<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns the amount of damage the monster has to actually receive
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.CalcHitByEffect" class="abs"></a>CalcHitByEffect<b class="def-largs">(</b>DamageKind<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">true</b> if the monster couldn't dodge the effect
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.CalcHitOrMiss" class="abs"></a>CalcHitOrMiss<b class="def-largs">(</b><a href="#structs.Player">Player</a><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.UpdateGraphicState" class="abs"></a>UpdateGraphicState<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Updates <a href="#structs.MapMonster.GraphicState">GraphicState</a> in accordance with <a href="#structs.MapMonster.AIState">AIState</a>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ShowSpellEffect" class="abs"></a>ShowSpellEffect<b class="def-largs">(</b>Color24 = 0<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  Shows effect from a spell (as a cylinder of colored dots around the monster)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GotHit" class="abs"></a>GotHit<b class="def-largs">(</b>By = 4, ResetAnimation = false<b class="def-rargs">)</b>
</td><td class="def-right">
 Shows monster's getting hit animation, produces sound and boosts aggression level. <b class="def-param">By</b> is the attacker <a href="#structs.ObjectRef.Value">object reference value</a>.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.PlaySound" class="abs"></a>PlaySound<b class="def-largs">(</b>SoundIndex<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <b class="def-param">SoundIndex</b> is from 0 to 3 or any of these corresponding strings: "Attack", "Die", "GotHit", "Fidget"
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.LoadFramesAndSounds" class="abs"></a>LoadFramesAndSounds<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.ChangeLook" class="abs"></a>ChangeLook<b class="def-largs">(</b>id<b class="def-rargs">)</b>
</td><td class="def-right">
 Takes on the look of another monster kind
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GetPropertiesFromId" class="abs"></a>GetPropertiesFromId<b class="def-largs">(</b>id<b class="def-rargs">)</b>
</td><td class="def-right">
 Takes all properties, except appearance and sounds from another monster kind
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SetId" class="abs"></a>SetId<b class="def-largs">(</b>id<b class="def-rargs">)</b>
</td><td class="def-right">
 Changes <b class="def-param">Id</b> and, if it's not 0, <b class="def-param">Id2</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.SetCustomFrames" class="abs"></a>SetCustomFrames<b class="def-largs">(</b>Stand, Walk, Attack, Shoot, Stun, GotHit, Die, Dead, Fidget<b class="def-rargs">)</b>
</td><td class="def-right">
 Any argument can be <b class="def-param">nil</b>. Also loads the frames.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapMonster.GetIndex" class="abs"></a>GetIndex<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapNote"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapNote</h3>
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapNote.Active" class="abs"></a>Active
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapNote.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapNote.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapNote.Text" class="abs"></a>Text
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapNote.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapObject"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapObject</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapObject.Type" class="abs"></a>Type
</td><td class="def-right">
 look type <span class="def-nbsp"> </span>(see Id in dobjlist.bin)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.TypeIndex" class="abs"></a>TypeIndex
</td><td class="def-right">
 line in dobjlist.bin
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Velocity" class="abs"></a>Velocity[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.VelocityX" class="abs"></a>VelocityX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.VelocityY" class="abs"></a>VelocityY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.VelocityZ" class="abs"></a>VelocityZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Direction" class="abs"></a>Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.LookAngle" class="abs"></a>LookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Visible" class="abs"></a>Visible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Temporary" class="abs"></a>Temporary
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.HaltTurnBased" class="abs"></a>HaltTurnBased
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.DroppedByPlayer" class="abs"></a>DroppedByPlayer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.IgnoreRange" class="abs"></a>IgnoreRange
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.NoZBuffer" class="abs"></a>NoZBuffer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.SkipAFrame" class="abs"></a>SkipAFrame
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.AttachToHead" class="abs"></a>AttachToHead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Missile" class="abs"></a>Missile
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Removed" class="abs"></a>Removed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Room" class="abs"></a>Room
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Age" class="abs"></a>Age
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.MaxAge" class="abs"></a>MaxAge
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.LightMultiplier" class="abs"></a>LightMultiplier
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Item" class="abs"></a><a href="#structs.Item">Item</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.SpellType" class="abs"></a>SpellType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Spell" class="abs"></a>Spell
</td><td class="def-right">
 same as <b class="def-param">SpellType</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.SpellSkill" class="abs"></a>SpellSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.SpellLevel" class="abs"></a>SpellLevel
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.SpellMastery" class="abs"></a>SpellMastery
</td><td class="def-right">
 same as <b class="def-param">SpellLevel</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.SpellEffect" class="abs"></a><a href="#structs.SpellEffect">SpellEffect</a>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Owner" class="abs"></a>Owner
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Target" class="abs"></a>Target
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.Range" class="abs"></a>Range
</td><td class="def-right">
 Distance to target: 0 &ndash; less than 307.2, 1 &ndash; less than 1024, 2 &ndash; less then 2560, 3 &ndash; 2560 or more
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.AttackType" class="abs"></a>AttackType
</td><td class="def-right">
 0 &ndash; Attack1, 1 &ndash; Attack2, 2 &ndash; Spell, 3 &ndash; Spell2, 4 &ndash; Explode
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.StartPos" class="abs"></a>StartPos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.StartX" class="abs"></a>StartX
</td><td class="def-right">
 starting x
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.StartY" class="abs"></a>StartY
</td><td class="def-right">
 starting y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapObject.StartZ" class="abs"></a>StartZ
</td><td class="def-right">
 starting z
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapOutline"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapOutline</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapOutline.Vertex1" class="abs"></a>Vertex1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapOutline.Vertex2" class="abs"></a>Vertex2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapOutline.Facet1" class="abs"></a>Facet1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapOutline.Facet2" class="abs"></a>Facet2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapOutline.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapOutline.Visible" class="abs"></a>Visible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapOutline.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapOutlines"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapOutlines</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapOutlines.Items" class="abs"></a><a href="#structs.MapOutline">Items</a>[]
</td><td class="def-right">
<b class="def-default">(Default)</b> 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapRoom"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapRoom</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapRoom.HasNonVerticalPortals" class="abs"></a>HasNonVerticalPortals
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.HasBSP" class="abs"></a>HasBSP
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.EaxEnvironment" class="abs"></a>EaxEnvironment
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Floors" class="abs"></a>Floors[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Walls" class="abs"></a>Walls[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Ceils" class="abs"></a>Ceils[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Fluids" class="abs"></a>Fluids[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Portals" class="abs"></a>Portals[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.NonBSPDrawFacetsCount" class="abs"></a>NonBSPDrawFacetsCount
</td><td class="def-right">
 # of non-BSP Node facets to draw
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.DrawFacets" class="abs"></a>DrawFacets[]
</td><td class="def-right">
 drawing order
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Cogs" class="abs"></a>Cogs[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Sprites" class="abs"></a>Sprites[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Markers" class="abs"></a>Markers[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Lights" class="abs"></a>Lights[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.Darkness" class="abs"></a>Darkness
</td><td class="def-right">
 Min Ambient Light Level
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.FirstBSPNode" class="abs"></a>FirstBSPNode
</td><td class="def-right">
 First BSP Node Index
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.ExitTag" class="abs"></a>ExitTag
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.MinX" class="abs"></a>MinX
</td><td class="def-right">
 Bounding Box Min X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.MaxX" class="abs"></a>MaxX
</td><td class="def-right">
 Bounding Box Max X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.MinY" class="abs"></a>MinY
</td><td class="def-right">
 Bounding Box Min Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.MaxY" class="abs"></a>MaxY
</td><td class="def-right">
 Bounding Box Max Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.MinZ" class="abs"></a>MinZ
</td><td class="def-right">
 Bounding Box Min Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapRoom.MaxZ" class="abs"></a>MaxZ
</td><td class="def-right">
 Bounding Box Max Z
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapSprite"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapSprite</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapSprite.DecListId" class="abs"></a>DecListId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.DecName" class="abs"></a>DecName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.ShowOnMap" class="abs"></a>ShowOnMap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.TriggerByMonster" class="abs"></a>TriggerByMonster
</td><td class="def-right">
 only for "Event Trigger" sprites &ndash; triggered when a monster comes into <b class="def-param">TriggerRadius</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Invisible" class="abs"></a>Invisible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.IsObeliskChest" class="abs"></a>IsObeliskChest
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.TriggerByObject" class="abs"></a>TriggerByObject
</td><td class="def-right">
 only for "Event Trigger" sprites &ndash; triggered when an object gets into <b class="def-param">TriggerRadius</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.TriggerByTouch" class="abs"></a>TriggerByTouch
</td><td class="def-right">
 only for "Event Trigger" sprites &ndash; triggered when a player comes into <b class="def-param">TriggerRadius</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.IsShip" class="abs"></a>IsShip
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.IsChest" class="abs"></a>IsChest
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Bits" class="abs"></a><a href="#const.SpriteBits">Bits</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Direction" class="abs"></a>Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Id" class="abs"></a>Id
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.EventVariable" class="abs"></a>EventVariable
</td><td class="def-right">
 event variable for barrels etc.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.Event" class="abs"></a>Event
</td><td class="def-right">
 normal event
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapSprite.TriggerRadius" class="abs"></a>TriggerRadius
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapStatsItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapStatsItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapStatsItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.FileName" class="abs"></a>FileName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Monster1Pic" class="abs"></a>Monster1Pic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Monster2Pic" class="abs"></a>Monster2Pic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Monster3Pic" class="abs"></a>Monster3Pic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.ResetCount" class="abs"></a>ResetCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.FirstVisitDay" class="abs"></a>FirstVisitDay
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.RefillDays" class="abs"></a>RefillDays
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.AlertDays" class="abs"></a>AlertDays
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.StealPerm" class="abs"></a>StealPerm
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Per" class="abs"></a>Per
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Lock" class="abs"></a>Lock
</td><td class="def-right">
 x5Lock
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Trap" class="abs"></a>Trap
</td><td class="def-right">
 D20sTrap
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Tres" class="abs"></a>Tres
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.EncounterChance" class="abs"></a>EncounterChance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.EncounterChanceM1" class="abs"></a>EncounterChanceM1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.EncounterChanceM2" class="abs"></a>EncounterChanceM2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.EncounterChanceM3" class="abs"></a>EncounterChanceM3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon1Dif" class="abs"></a>Mon1Dif
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon1Low" class="abs"></a>Mon1Low
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon1Hi" class="abs"></a>Mon1Hi
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon2Dif" class="abs"></a>Mon2Dif
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon2Low" class="abs"></a>Mon2Low
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon2Hi" class="abs"></a>Mon2Hi
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon3Dif" class="abs"></a>Mon3Dif
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon3Low" class="abs"></a>Mon3Low
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.Mon3Hi" class="abs"></a>Mon3Hi
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.RedbookTrack" class="abs"></a>RedbookTrack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapStatsItem.EaxEnvironments" class="abs"></a>EaxEnvironments
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MapVertex"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MapVertex</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MapVertex.1" class="abs"></a>1
</td><td class="def-right">
 same as <b class="def-param">X</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapVertex.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapVertex.2" class="abs"></a>2
</td><td class="def-right">
 same as <b class="def-param">Y</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapVertex.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapVertex.3" class="abs"></a>3
</td><td class="def-right">
 same as <b class="def-param">Z</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MapVertex.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MissileSetup"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MissileSetup</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MissileSetup.AlwaysShowSprite" class="abs"></a>AlwaysShowSprite
</td><td class="def-right">
 When there's a special way to display the object, still show the sprite as well
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MissileSetup.HideSpecialDisplay" class="abs"></a>HideSpecialDisplay
</td><td class="def-right">
 Don't display the object in a special way
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MissileSetup.AutoCollision" class="abs"></a>AutoCollision
</td><td class="def-right">
 When the object hits anything, show an explosion, play explosion sound of the spell and call <a href="#events.MonsterAttacked">MonsterAttacked</a> or <a href="#events.PlayerAttacked">PlayerAttacked</a> appropriately
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ModelFacet"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ModelFacet</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ModelFacet.Normal" class="abs"></a>Normal[]
</td><td class="def-right">
 normal fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.NormalX" class="abs"></a>NormalX
</td><td class="def-right">
 normal X fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.NormalY" class="abs"></a>NormalY
</td><td class="def-right">
 normal Y fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.NormalZ" class="abs"></a>NormalZ
</td><td class="def-right">
 normal Z fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.NormalDistance" class="abs"></a>NormalDistance
</td><td class="def-right">
 normal distance fixed pt (0..0x10000)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ZCalc1" class="abs"></a>ZCalc1
</td><td class="def-right">
  <span class="def-nbsp"> </span><span class="def-code"><span class="lua5-note">=</span> <span class="lua5-operator">-</span>(NormalX <span class="lua5-operator">*</span> <span class="lua5-literal">2</span><span class="lua5-operator">^</span><span class="lua5-literal">16</span>) <span class="lua5-operator">/</span> NormalZ <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span></span>(or 0 if <b class="def-param">NormalZ</b> is 0)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ZCalc2" class="abs"></a>ZCalc2
</td><td class="def-right">
  <span class="def-nbsp"> </span><span class="def-code"><span class="lua5-note">=</span> <span class="lua5-operator">-</span>(NormalY <span class="lua5-operator">*</span> <span class="lua5-literal">2</span><span class="lua5-operator">^</span><span class="lua5-literal">16</span>) <span class="lua5-operator">/</span> NormalZ <span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span></span>(or 0 if <b class="def-param">NormalZ</b> is 0)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ZCalc3" class="abs"></a>ZCalc3
</td><td class="def-right">
  <span class="def-nbsp"> </span><span class="def-code"><span class="lua5-note">=</span> <span class="lua5-operator">-</span>(NormalDistance <span class="lua5-operator">*</span> <span class="lua5-literal">2</span><span class="lua5-operator">^</span><span class="lua5-literal">16</span>) <span class="lua5-operator">/</span> NormalZ <span> </span></span>(or 0 if <b class="def-param">NormalZ</b> is 0)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.EventDisabledByCtrlClick" class="abs"></a>EventDisabledByCtrlClick
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ScrollDown" class="abs"></a>ScrollDown
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ScrollUp" class="abs"></a>ScrollUp
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.TriggerByObject" class="abs"></a>TriggerByObject
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  happens even if there's no event assigned
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.IsLava" class="abs"></a>IsLava
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ScrollLeft" class="abs"></a>ScrollLeft
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.HasData" class="abs"></a>HasData
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.FlipV" class="abs"></a>FlipV
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.AnimatedTFT" class="abs"></a>AnimatedTFT
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.Invisible" class="abs"></a>Invisible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.TriggerByStep" class="abs"></a>TriggerByStep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.IsSecret" class="abs"></a>IsSecret
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  show in red with Perception
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.AlignLeft" class="abs"></a>AlignLeft
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.TriggerByClick" class="abs"></a>TriggerByClick
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.DisableEventByCtrlClick" class="abs"></a>DisableEventByCtrlClick
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  indoor only: click event gets disabled by Ctrl+Click
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.AlternativeSound" class="abs"></a>AlternativeSound
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.TriggerByMonster" class="abs"></a>TriggerByMonster
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  happens even if there's no event assigned
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MoveByDoor" class="abs"></a>MoveByDoor
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.AlignRight" class="abs"></a>AlignRight
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.AlignTop" class="abs"></a>AlignTop
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.IsPortal" class="abs"></a>IsPortal
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.IsWater" class="abs"></a>IsWater
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.IsEventJustHint" class="abs"></a>IsEventJustHint
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ScrollRight" class="abs"></a>ScrollRight
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.IsSky" class="abs"></a>IsSky
</td><td class="def-right">
 outdoor in software mode: horizontal flow
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.Untouchable" class="abs"></a>Untouchable
</td><td class="def-right">
 great for vertical facets of stairs. <span class="def-ver">[MM7+]</span> Shouldn't be used for sloped floor, like it's used in MM6.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.FlipU" class="abs"></a>FlipU
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.AlignBottom" class="abs"></a>AlignBottom
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ProjectToXY" class="abs"></a>ProjectToXY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ProjectToYZ" class="abs"></a>ProjectToYZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ProjectToXZ" class="abs"></a>ProjectToXZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.Bits" class="abs"></a><a href="#const.FacetBits">Bits</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.VertexIds" class="abs"></a>VertexIds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.UList" class="abs"></a>UList[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.VList" class="abs"></a>VList[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.XInterceptDisplacement" class="abs"></a>XInterceptDisplacement[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.YInterceptDisplacement" class="abs"></a>YInterceptDisplacement[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.ZInterceptDisplacement" class="abs"></a>ZInterceptDisplacement[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.BitmapId" class="abs"></a>BitmapId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.BitmapU" class="abs"></a>BitmapU
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.BitmapV" class="abs"></a>BitmapV
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MinX" class="abs"></a>MinX
</td><td class="def-right">
 Bounding Box Min X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MaxX" class="abs"></a>MaxX
</td><td class="def-right">
 Bounding Box Max X
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MinY" class="abs"></a>MinY
</td><td class="def-right">
 Bounding Box Min Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MaxY" class="abs"></a>MaxY
</td><td class="def-right">
 Bounding Box Max Y
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MinZ" class="abs"></a>MinZ
</td><td class="def-right">
 Bounding Box Min Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.MaxZ" class="abs"></a>MaxZ
</td><td class="def-right">
 Bounding Box Max Z
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.Event" class="abs"></a>Event
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.GradientVertexes" class="abs"></a>GradientVertexes[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.VertexesCount" class="abs"></a>VertexesCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelFacet.PolygonType" class="abs"></a>PolygonType
</td><td class="def-right">
 Polygon type:<br>0 = empty<br>1 = wall<br>2 = unused<br>3 = horizontal floor<br>4 = irregular floor (non-horizontal)<br>5 = horizontal ceiling<br>6 = irregular ceiling (non-horizontal)
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ModelVertex"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ModelVertex</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ModelVertex.1" class="abs"></a>1
</td><td class="def-right">
 same as <b class="def-param">X</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelVertex.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelVertex.2" class="abs"></a>2
</td><td class="def-right">
 same as <b class="def-param">Y</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelVertex.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelVertex.3" class="abs"></a>3
</td><td class="def-right">
 same as <b class="def-param">Z</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ModelVertex.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MonListItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MonListItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MonListItem.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.Radius" class="abs"></a>Radius
</td><td class="def-right">
 overall monster radius
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.Velocity" class="abs"></a>Velocity
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.Radius2" class="abs"></a>Radius2
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  monster radius for "to-hit" purposes
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.Tint" class="abs"></a>Tint
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  tint color for graphic
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.TintB" class="abs"></a>TintB
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.TintG" class="abs"></a>TintG
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.TintR" class="abs"></a>TintR
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.TintA" class="abs"></a>TintA
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.Sounds" class="abs"></a>Sounds[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.SoundAttack" class="abs"></a>SoundAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.SoundDie" class="abs"></a>SoundDie
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.SoundGetHit" class="abs"></a>SoundGetHit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.SoundFidget" class="abs"></a>SoundFidget
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FrameNames" class="abs"></a>FrameNames[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesStand" class="abs"></a>FramesStand
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesWalk" class="abs"></a>FramesWalk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesAttack" class="abs"></a>FramesAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesShoot" class="abs"></a>FramesShoot
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesStun" class="abs"></a>FramesStun
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesDie" class="abs"></a>FramesDie
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesDead" class="abs"></a>FramesDead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonListItem.FramesFidget" class="abs"></a>FramesFidget
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MonsterAttackInfo"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MonsterAttackInfo</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MonsterAttackInfo.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterAttackInfo.DamageDiceCount" class="abs"></a>DamageDiceCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterAttackInfo.DamageDiceSides" class="abs"></a>DamageDiceSides
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterAttackInfo.DamageAdd" class="abs"></a>DamageAdd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterAttackInfo.Missile" class="abs"></a>Missile
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MonsterKind"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MonsterKind</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MonsterKind.Undead" class="abs"></a>Undead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Demon" class="abs"></a>Demon
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Dragon" class="abs"></a>Dragon
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Elf" class="abs"></a>Elf
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Swimmer" class="abs"></a>Swimmer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Immobile" class="abs"></a>Immobile
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Peasant" class="abs"></a>Peasant
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Titan" class="abs"></a>Titan
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.NoArena" class="abs"></a>NoArena
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Ogre" class="abs"></a>Ogre
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterKind.Elemental" class="abs"></a>Elemental
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MonsterSchedule"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MonsterSchedule</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Bits" class="abs"></a>Bits
</td><td class="def-right">
 (1 &ndash; on)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Action" class="abs"></a>Action
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Hour" class="abs"></a>Hour
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Day" class="abs"></a>Day
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonsterSchedule.Month" class="abs"></a>Month
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MonstersTxtItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MonstersTxtItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Picture" class="abs"></a>Picture
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Id" class="abs"></a>Id
</td><td class="def-right">
 Changing may cause random crashes after loading the game! Be careful.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Level" class="abs"></a>Level
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.TreasureItemPercent" class="abs"></a>TreasureItemPercent
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.TreasureDiceCount" class="abs"></a>TreasureDiceCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.TreasureDiceSides" class="abs"></a>TreasureDiceSides
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.TreasureItemLevel" class="abs"></a>TreasureItemLevel
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.TreasureItemType" class="abs"></a>TreasureItemType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Fly" class="abs"></a>Fly
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.MoveType" class="abs"></a>MoveType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.AIType" class="abs"></a>AIType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.HostileType" class="abs"></a>HostileType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Vampire" class="abs"></a>Prefers.Vampire
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Troll" class="abs"></a>Prefers.Troll
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Monk" class="abs"></a>Prefers.Monk
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Thief" class="abs"></a>Prefers.Thief
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Cleric" class="abs"></a>Prefers.Cleric
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Male" class="abs"></a>Prefers.Male
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Sorcerer" class="abs"></a>Prefers.Sorcerer
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Female" class="abs"></a>Prefers.Female
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Dragon" class="abs"></a>Prefers.Dragon
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Minotaur" class="abs"></a>Prefers.Minotaur
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.DarkElf" class="abs"></a>Prefers.DarkElf
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Necro" class="abs"></a>Prefers.Necro
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Goblin" class="abs"></a>Prefers.Goblin
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Archer" class="abs"></a>Prefers.Archer
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Paladin" class="abs"></a>Prefers.Paladin
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Druid" class="abs"></a>Prefers.Druid
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Dwarf" class="abs"></a>Prefers.Dwarf
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Ranger" class="abs"></a>Prefers.Ranger
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Elf" class="abs"></a>Prefers.Elf
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Human" class="abs"></a>Prefers.Human
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Prefers.Knight" class="abs"></a>Prefers.Knight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.PrefClass" class="abs"></a>PrefClass
</td><td class="def-right">
 Preferred target
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Bonus" class="abs"></a>Bonus
</td><td class="def-right">
 (steal, curse, ...)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.BonusMul" class="abs"></a>BonusMul
</td><td class="def-right">
 Disease1x5 etc. The chance that a monster would use the bonus is <b class="def-param">Level</b>*<b class="def-param">BonusMul</b>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Attack1" class="abs"></a><a href="#structs.MonsterAttackInfo">Attack1</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Attack2Chance" class="abs"></a>Attack2Chance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Attack2" class="abs"></a><a href="#structs.MonsterAttackInfo">Attack2</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpellChance" class="abs"></a>SpellChance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Spell" class="abs"></a>Spell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Spell2Chance" class="abs"></a>Spell2Chance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Spell2" class="abs"></a>Spell2
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpellSkill" class="abs"></a>SpellSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Resistances" class="abs"></a>Resistances[<a href="#const.Damage">kind</a>]
</td><td class="def-right">
 For immunity use <a href="#const.MonsterImmune">const.MonsterImmune</a>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.FireResistance" class="abs"></a>FireResistance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.AirResistance" class="abs"></a>AirResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.WaterResistance" class="abs"></a>WaterResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.EarthResistance" class="abs"></a>EarthResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.MindResistance" class="abs"></a>MindResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpiritResistance" class="abs"></a>SpiritResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.BodyResistance" class="abs"></a>BodyResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.LightResistance" class="abs"></a>LightResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.DarkResistance" class="abs"></a>DarkResistance
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.ElecResistance" class="abs"></a>ElecResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.ColdResistance" class="abs"></a>ColdResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.PoisonResistance" class="abs"></a>PoisonResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.PhysResistance" class="abs"></a>PhysResistance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Special" class="abs"></a>Special
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  1 = shot, 2 = summon, 3 = explode
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpecialA" class="abs"></a>SpecialA
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  shot: C = count<br>summon: A = {RandomLevel = 0, fixed = 1} &ndash; monster level (0 means A, B or C is chosen randomly, monster index should be that of A variation. Values of 2 and 3 are the same as 1, but in MM7 before GrayFace Patch v2.1 it was causing a bug), B = {ground = 0, air = 1}, C = already summoned count (up to 3), D = monster index<br>explode: AdB + C, D = attack type
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpecialB" class="abs"></a>SpecialB
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpecialC" class="abs"></a>SpecialC
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.MagicResistance" class="abs"></a>MagicResistance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.PrefNum" class="abs"></a>PrefNum
</td><td class="def-right">
 Number of party members to hit using Attack1 &amp; Attack2
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.BloodSplat" class="abs"></a>BloodSplat
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Spell2Skill" class="abs"></a>Spell2Skill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.SpecialD" class="abs"></a>SpecialD
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  (summoned monster or damage type in case of explosive attack)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.QuestItem" class="abs"></a>QuestItem
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.FullHP" class="abs"></a>FullHP
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.FullHitPoints" class="abs"></a>FullHitPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.ArmorClass" class="abs"></a>ArmorClass
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Exp" class="abs"></a>Exp
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.Experience" class="abs"></a>Experience
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.MoveSpeed" class="abs"></a>MoveSpeed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MonstersTxtItem.AttackRecovery" class="abs"></a>AttackRecovery
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.MoveToMap"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.MoveToMap</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MoveToMap.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MoveToMap.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MoveToMap.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MoveToMap.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MoveToMap.Direction" class="abs"></a>Direction
</td><td class="def-right">
 0 &ndash; 2047. 0 is East.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MoveToMap.LookAngle" class="abs"></a>LookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MoveToMap.SpeedZ" class="abs"></a>SpeedZ
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.MoveToMap.Defined" class="abs"></a>Defined
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.MoveToMap.Set" class="abs"></a>Set<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.NPC"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.NPC</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.NPC.Exist" class="abs"></a>Exist
</td><td class="def-right">
 Use to check if a slot is empty in Party.HiredNPC array
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Pic" class="abs"></a>Pic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.BribedBefore" class="abs"></a>BribedBefore
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.TalkedBefore" class="abs"></a>TalkedBefore
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.BeggedBefore" class="abs"></a>BeggedBefore
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.ThreatenedBefore" class="abs"></a>ThreatenedBefore
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Hired" class="abs"></a>Hired
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Fame" class="abs"></a>Fame
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Rep" class="abs"></a>Rep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.House" class="abs"></a>House
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Profession" class="abs"></a>Profession
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Greet" class="abs"></a>Greet
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Joins" class="abs"></a>Joins
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.TellsNews" class="abs"></a>TellsNews
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Events" class="abs"></a>Events[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.EventA" class="abs"></a>EventA
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.EventB" class="abs"></a>EventB
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.EventC" class="abs"></a>EventC
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.EventD" class="abs"></a>EventD
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.EventE" class="abs"></a>EventE
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.EventF" class="abs"></a>EventF
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.Sex" class="abs"></a>Sex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.UsedSpell" class="abs"></a>UsedSpell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPC.NewsTopic" class="abs"></a>NewsTopic
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.NPCNewsItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.NPCNewsItem</h3>
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.NPCNewsItem.Topic" class="abs"></a>Topic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPCNewsItem.Text" class="abs"></a>Text
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPCNewsItem.Map" class="abs"></a>Map
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.NPCProfTxtItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.NPCProfTxtItem</h3>
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.NPCProfTxtItem.Chance" class="abs"></a>Chance
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPCProfTxtItem.Cost" class="abs"></a>Cost
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPCProfTxtItem.Personality" class="abs"></a>Personality
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPCProfTxtItem.Benefit" class="abs"></a>Benefit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPCProfTxtItem.ActionText" class="abs"></a>ActionText
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPCProfTxtItem.JoinText" class="abs"></a>JoinText
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPCProfTxtItem.DismissText" class="abs"></a>DismissText
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPCProfTxtItem.ProfNewsTopic" class="abs"></a>ProfNewsTopic[]
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.NPCProfTxtItem.ProfNewsText" class="abs"></a>ProfNewsText[]
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ObjListItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ObjListItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ObjListItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Radius" class="abs"></a>Radius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Height" class="abs"></a>Height
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Invisible" class="abs"></a>Invisible
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Untouchable" class="abs"></a>Untouchable
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Temporary" class="abs"></a>Temporary
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.LifetimeInSFT" class="abs"></a>LifetimeInSFT
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.NoPickup" class="abs"></a>NoPickup
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.NoGravity" class="abs"></a>NoGravity
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.InterceptAction" class="abs"></a>InterceptAction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Bounce" class="abs"></a>Bounce
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.TrailParticles" class="abs"></a>TrailParticles
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.TrailFire" class="abs"></a>TrailFire
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.TrailLine" class="abs"></a>TrailLine
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.SFTIndex" class="abs"></a>SFTIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.SFTGroup" class="abs"></a>SFTGroup
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.LifeTime" class="abs"></a>LifeTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.LoadedParticlesColor" class="abs"></a>LoadedParticlesColor
</td><td class="def-right">
 munged 16-bit color
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.Speed" class="abs"></a>Speed
</td><td class="def-right">
 default speed of object
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.ParticlesColor" class="abs"></a>ParticlesColor[]
</td><td class="def-right">
 color for particles
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.ParticleR" class="abs"></a>ParticleR
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.ParticleG" class="abs"></a>ParticleG
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.ParticleB" class="abs"></a>ParticleB
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjListItem.ParticleA" class="abs"></a>ParticleA
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ObjectRef"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ObjectRef</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ObjectRef.ZBuf" class="abs"></a>ZBuf
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjectRef.Value" class="abs"></a>Value
</td><td class="def-right">
 Raw value. In inventory screen this is item index, in other screens it equals <span class="def-code">Kind <span class="lua5-operator">+</span> Index<span class="lua5-operator">*</span><span class="lua5-literal">8</span></span>.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjectRef.Kind" class="abs"></a><a href="#const.ObjectRefKind">Kind</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ObjectRef.Index" class="abs"></a>Index
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ObjectRef.Get" class="abs"></a>Get<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.OdmHeader"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.OdmHeader</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.OdmHeader.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OdmHeader.FileName" class="abs"></a>FileName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OdmHeader.VersionStr" class="abs"></a>VersionStr
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OdmHeader.TilesetsFile" class="abs"></a>TilesetsFile
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  0 = dtile.bin, 1 = dtile2.bin, 2 = dtile3.bin
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OdmHeader.Tilesets" class="abs"></a><a href="#structs.TilesetDef">Tilesets</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OdmHeader.Bits" class="abs"></a>Bits
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.OverlayItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.OverlayItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.OverlayItem.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OverlayItem.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OverlayItem.SFTIndex" class="abs"></a>SFTIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.OverlayItem.SFTGroup" class="abs"></a>SFTGroup
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.PFTItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.PFTItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.PFTItem.GroupId" class="abs"></a>GroupId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PFTItem.FrameIndex" class="abs"></a>FrameIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PFTItem.Time" class="abs"></a>Time
</td><td class="def-right">
 time for this frame in 1/32 of a second
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PFTItem.TotalTime" class="abs"></a>TotalTime
</td><td class="def-right">
 total time for this group
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PFTItem.NotGroupEnd" class="abs"></a>NotGroupEnd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PFTItem.GroupStart" class="abs"></a>GroupStart
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PFTItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.PatchOptions"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.PatchOptions</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.PatchOptions.Size" class="abs"></a>Size
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MaxMLookAngle" class="abs"></a>MaxMLookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseLook" class="abs"></a>MouseLook
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseLookUseAltMode" class="abs"></a>MouseLookUseAltMode
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.CapsLockToggleMouseLook" class="abs"></a>CapsLockToggleMouseLook
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseFly" class="abs"></a>MouseFly
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseWheelFly" class="abs"></a>MouseWheelFly
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseLookTempKey" class="abs"></a>MouseLookTempKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseLookChangeKey" class="abs"></a>MouseLookChangeKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.InventoryKey" class="abs"></a>InventoryKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.CharScreenKey" class="abs"></a>CharScreenKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.DoubleSpeedKey" class="abs"></a>DoubleSpeedKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.QuickLoadKey" class="abs"></a>QuickLoadKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.AutorunKey" class="abs"></a>AutorunKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.HDWTRCount" class="abs"></a>HDWTRCount
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.HDWTRDelay" class="abs"></a>HDWTRDelay
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.HorsemanSpeakTime" class="abs"></a>HorsemanSpeakTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.BoatmanSpeakTime" class="abs"></a>BoatmanSpeakTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.PaletteSMul" class="abs"></a>PaletteSMul
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.PaletteVMul" class="abs"></a>PaletteVMul
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.NoBitmapsHwl" class="abs"></a>NoBitmapsHwl
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.PlayMP3" class="abs"></a>PlayMP3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MusicLoopsCount" class="abs"></a>MusicLoopsCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.HardenArtifacts" class="abs"></a>HardenArtifacts
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.ProgressiveDaggerTrippleDamage" class="abs"></a>ProgressiveDaggerTrippleDamage
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixChests" class="abs"></a>FixChests
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.DataFiles" class="abs"></a>DataFiles
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixDualWeaponsRecovery" class="abs"></a>FixDualWeaponsRecovery
</td><td class="def-right">
 <span class="def-ver">[MM6]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.IncreaseRecoveryRateStrength" class="abs"></a>IncreaseRecoveryRateStrength
</td><td class="def-right">
 <span class="def-ver">[MM6]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.BlasterRecovery" class="abs"></a>BlasterRecovery
</td><td class="def-right">
 <span class="def-ver">[MM6, MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixSkyBitmap" class="abs"></a>FixSkyBitmap
</td><td class="def-right">
 <span class="def-ver">[MM8]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.NoCD" class="abs"></a>NoCD
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixChestsByReorder" class="abs"></a>FixChestsByReorder
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.LastLoadedFileSize" class="abs"></a>LastLoadedFileSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixTimers" class="abs"></a>FixTimers
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixMovement" class="abs"></a>FixMovement
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MonsterJumpDownLimit" class="abs"></a>MonsterJumpDownLimit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixHeroismPedestal" class="abs"></a>FixHeroismPedestal
</td><td class="def-right">
 <span class="def-ver">[MM8]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.SkipUnsellableItemCheck" class="abs"></a>SkipUnsellableItemCheck
</td><td class="def-right">
 <span class="def-ver">[MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixGMStaff" class="abs"></a>FixGMStaff
</td><td class="def-right">
 <span class="def-ver">[MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixObelisks" class="abs"></a>FixObelisks
</td><td class="def-right">
 <span class="def-ver">[MM8]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.BorderlessWindowed" class="abs"></a>BorderlessWindowed
</td><td class="def-right">
 Actually, it should be read as "not borderless fulscreen". It's set to false only when the game is in Borderless Fullscreen mode
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.CompatibleMovieRender" class="abs"></a>CompatibleMovieRender
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.SmoothMovieScaling" class="abs"></a>SmoothMovieScaling
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.SupportTrueColor" class="abs"></a>SupportTrueColor
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.RenderRectLeft" class="abs"></a>RenderRectLeft
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.RenderRectTop" class="abs"></a>RenderRectTop
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.RenderRectRight" class="abs"></a>RenderRectRight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.RenderRectBottom" class="abs"></a>RenderRectBottom
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixUnimplementedSpells" class="abs"></a>FixUnimplementedSpells
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.IndoorMinimapZoomMul" class="abs"></a>IndoorMinimapZoomMul
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.IndoorMinimapZoomPower" class="abs"></a>IndoorMinimapZoomPower
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixMonsterSummon" class="abs"></a>FixMonsterSummon
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixInterfaceBugs" class="abs"></a>FixInterfaceBugs
</td><td class="def-right">
 <span class="def-ver">[MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.UILayout" class="abs"></a>UILayout
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.PaperDollInChests" class="abs"></a>PaperDollInChests
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.HigherCloseRingsButton" class="abs"></a>HigherCloseRingsButton
</td><td class="def-right">
 <span class="def-ver">[MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.RenderBottomPixel" class="abs"></a>RenderBottomPixel
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.TrueColorTextures" class="abs"></a>TrueColorTextures
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.ResetPalettes" class="abs"></a>ResetPalettes
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixSFT" class="abs"></a>FixSFT
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.AxeGMFullProbabilityAt" class="abs"></a>AxeGMFullProbabilityAt
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseDX" class="abs"></a>MouseDX
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseDY" class="abs"></a>MouseDY
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.TrueColorSprites" class="abs"></a>TrueColorSprites
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixMonstersBlockingShots" class="abs"></a>FixMonstersBlockingShots
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixParalyze" class="abs"></a>FixParalyze
</td><td class="def-right">
 <span class="def-ver">[MM6]</span> May come to MM7 and MM8 in the future.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.EnableAttackSpell" class="abs"></a>EnableAttackSpell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.ShooterMode" class="abs"></a>ShooterMode
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MaxMLookUpAngle" class="abs"></a>MaxMLookUpAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixIceBoltBlast" class="abs"></a>FixIceBoltBlast
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MonSpritesSizeMul" class="abs"></a>MonSpritesSizeMul
</td><td class="def-right">
 Default is 0 &ndash; disabled. 0x10000 stands for 1.0.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixMonsterAttackTypes" class="abs"></a>FixMonsterAttackTypes
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixMonsterSpells" class="abs"></a>FixMonsterSpells
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixSouldrinker" class="abs"></a>FixSouldrinker
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.MouseLookPermKey" class="abs"></a>MouseLookPermKey
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.LastSoundSample" class="abs"></a>LastSoundSample
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.WaterWalkDamage" class="abs"></a>WaterWalkDamage
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixUnmarkedArtifacts" class="abs"></a>FixUnmarkedArtifacts
</td><td class="def-right">
 <span class="def-ver">[MM6, MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixClubsDelay" class="abs"></a>FixClubsDelay
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixDarkTrainers" class="abs"></a>FixDarkTrainers
</td><td class="def-right">
 <span class="def-ver">[MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixLightBolt" class="abs"></a>FixLightBolt
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.ArmageddonElement" class="abs"></a>ArmageddonElement
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixKelebrim" class="abs"></a>FixKelebrim
</td><td class="def-right">
 <span class="def-ver">[MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixBarrels" class="abs"></a>FixBarrels
</td><td class="def-right">
 <span class="def-ver">[MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.ClimbBetter" class="abs"></a>ClimbBetter
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixWaterWalkManaDrain" class="abs"></a>FixWaterWalkManaDrain
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.KeepEmptyWands" class="abs"></a>KeepEmptyWands
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.DontSkipSimpleMessage" class="abs"></a>DontSkipSimpleMessage
</td><td class="def-right">
 <span class="def-ver">[MM6, MM7]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixItemDuplicates" class="abs"></a>FixItemDuplicates
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixClubsGeneration" class="abs"></a>FixClubsGeneration
</td><td class="def-right">
 <span class="def-ver">[MM8]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.FixAcidBurst" class="abs"></a>FixAcidBurst
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.PatchOptions.Present" class="abs"></a>Present<b class="def-largs">(</b>name<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">true</b> if the option is supported by patch version being used
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.Ptr" class="abs"></a>Ptr<b class="def-largs">(</b>name<b class="def-rargs">)</b>
</td><td class="def-right">
 Returns address of an option if it's supported by patch version being used
</td>
</tr><tr>
<td class="def-left">
<a id="structs.PatchOptions.UILayoutActive" class="abs"></a>UILayoutActive<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns <b class="def-param">true</b> if UILayout mode is currently active
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.Player"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.Player</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Player.Biography" class="abs"></a>Biography
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Sex" class="abs"></a>Sex
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Paralyzed" class="abs"></a>Paralyzed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Unconscious" class="abs"></a>Unconscious
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Insane" class="abs"></a>Insane
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Zombie" class="abs"></a>Zombie
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Drunk" class="abs"></a>Drunk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Poison1" class="abs"></a>Poison1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Cursed" class="abs"></a>Cursed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Disease1" class="abs"></a>Disease1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Stoned" class="abs"></a>Stoned
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Afraid" class="abs"></a>Afraid
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Dead" class="abs"></a>Dead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Poison2" class="abs"></a>Poison2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Eradicated" class="abs"></a>Eradicated
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Weak" class="abs"></a>Weak
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Good" class="abs"></a>Good
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Poison3" class="abs"></a>Poison3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Disease3" class="abs"></a>Disease3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Disease2" class="abs"></a>Disease2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Asleep" class="abs"></a>Asleep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Conditions" class="abs"></a>Conditions[<a href="#const.Condition">cond</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Exp" class="abs"></a>Exp
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Experience" class="abs"></a>Experience
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Class" class="abs"></a>Class
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Face" class="abs"></a>Face
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Stats" class="abs"></a><a href="#structs.BaseBonus">Stats</a>[<a href="#const.Stats">stat</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MightBase" class="abs"></a>MightBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MightBonus" class="abs"></a>MightBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.IntellectBase" class="abs"></a>IntellectBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.IntellectBonus" class="abs"></a>IntellectBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.PersonalityBase" class="abs"></a>PersonalityBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.PersonalityBonus" class="abs"></a>PersonalityBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.EnduranceBase" class="abs"></a>EnduranceBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.EnduranceBonus" class="abs"></a>EnduranceBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpeedBase" class="abs"></a>SpeedBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpeedBonus" class="abs"></a>SpeedBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AccuracyBase" class="abs"></a>AccuracyBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AccuracyBonus" class="abs"></a>AccuracyBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.LuckBase" class="abs"></a>LuckBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.LuckBonus" class="abs"></a>LuckBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ArmorClassBonus" class="abs"></a>ArmorClassBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.LevelBase" class="abs"></a>LevelBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.LevelBonus" class="abs"></a>LevelBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AgeBonus" class="abs"></a>AgeBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Skills" class="abs"></a>Skills[<a href="#const.Skills">skill</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Awards" class="abs"></a>Awards[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Spells" class="abs"></a>Spells[<a href="#const.Spells">spell</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.UsedBlackPotions" class="abs"></a>UsedBlackPotions[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Items" class="abs"></a><a href="#structs.Item">Items</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Inventory" class="abs"></a>Inventory[]
</td><td class="def-right">
 (<b class="def-param">Items</b> index) for main item cell, <span class="def-nbsp"> </span>-(1 + main <b class="def-param">Inventory</b> cell index) for other cells
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Resistances" class="abs"></a><a href="#structs.BaseBonus">Resistances</a>[<a href="#const.Damage">kind</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FireResistanceBase" class="abs"></a>FireResistanceBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AirResistanceBase" class="abs"></a>AirResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.WaterResistanceBase" class="abs"></a>WaterResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.EarthResistanceBase" class="abs"></a>EarthResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpiritResistanceBase" class="abs"></a>SpiritResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MindResistanceBase" class="abs"></a>MindResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.BodyResistanceBase" class="abs"></a>BodyResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FireResistanceBonus" class="abs"></a>FireResistanceBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AirResistanceBonus" class="abs"></a>AirResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.WaterResistanceBonus" class="abs"></a>WaterResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.EarthResistanceBonus" class="abs"></a>EarthResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpiritResistanceBonus" class="abs"></a>SpiritResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MindResistanceBonus" class="abs"></a>MindResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.BodyResistanceBonus" class="abs"></a>BodyResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Voice" class="abs"></a>Voice
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ColdResistanceBase" class="abs"></a>ColdResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ColdResistanceBonus" class="abs"></a>ColdResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ElecResistanceBase" class="abs"></a>ElecResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ElecResistanceBonus" class="abs"></a>ElecResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.PoisonResistanceBase" class="abs"></a>PoisonResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.PoisonResistanceBonus" class="abs"></a>PoisonResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MagicResistanceBase" class="abs"></a>MagicResistanceBase
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MagicResistanceBonus" class="abs"></a>MagicResistanceBonus
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpellBuffs" class="abs"></a><a href="#structs.SpellBuff">SpellBuffs</a>[<a href="#const.PlayerBuff">buff</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.RecoveryDelay" class="abs"></a>RecoveryDelay
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SkillPoints" class="abs"></a>SkillPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.HP" class="abs"></a>HP
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.HitPoints" class="abs"></a>HitPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SP" class="abs"></a>SP
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpellPoints" class="abs"></a>SpellPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.BirthYear" class="abs"></a>BirthYear
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.EquippedItems" class="abs"></a>EquippedItems[<a href="#const.ItemSlot">slot</a>]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemExtraHand" class="abs"></a>ItemExtraHand
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemMainHand" class="abs"></a>ItemMainHand
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemBow" class="abs"></a>ItemBow
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemArmor" class="abs"></a>ItemArmor
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemHelm" class="abs"></a>ItemHelm
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemBelt" class="abs"></a>ItemBelt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemCloak" class="abs"></a>ItemCloak
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemGountlets" class="abs"></a>ItemGountlets
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemBoots" class="abs"></a>ItemBoots
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemAmulet" class="abs"></a>ItemAmulet
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemRing1" class="abs"></a>ItemRing1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemRing2" class="abs"></a>ItemRing2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemRing3" class="abs"></a>ItemRing3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemRing4" class="abs"></a>ItemRing4
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemRing5" class="abs"></a>ItemRing5
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ItemRing6" class="abs"></a>ItemRing6
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SpellBookPage" class="abs"></a>SpellBookPage
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.QuickSpell" class="abs"></a>QuickSpell
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.PlayerBits" class="abs"></a>PlayerBits[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.RosterBitIndex" class="abs"></a>RosterBitIndex
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MeleeAttackBonus" class="abs"></a>MeleeAttackBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.MeleeDamageBonus" class="abs"></a>MeleeDamageBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.RangedAttackBonus" class="abs"></a>RangedAttackBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.RangedDamageBonus" class="abs"></a>RangedDamageBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FullHPBonus" class="abs"></a>FullHPBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FullHitPointsBonus" class="abs"></a>FullHitPointsBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FullSPBonus" class="abs"></a>FullSPBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FullSpellPointsBonus" class="abs"></a>FullSpellPointsBonus
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Expression" class="abs"></a>Expression
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ExpressionTimePassed" class="abs"></a>ExpressionTimePassed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ExpressionLength" class="abs"></a>ExpressionLength
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Beacons" class="abs"></a><a href="#structs.LloydBeaconSlot">Beacons</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.DevineInterventionCasts" class="abs"></a>DevineInterventionCasts
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ArmageddonCasts" class="abs"></a>ArmageddonCasts
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FireSpikeCasts" class="abs"></a>FireSpikeCasts
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.FaceBeforeZombie" class="abs"></a>FaceBeforeZombie
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.VoiceBeforeZombie" class="abs"></a>VoiceBeforeZombie
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Player.GetSex" class="abs"></a>GetSex<b class="def-largs">(</b>BasedOnVoice<span class="def-ver">[MM8]</span> = false<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  Determines sex based on Face or Voice
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseMight" class="abs"></a>GetBaseMight<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseIntellect" class="abs"></a>GetBaseIntellect<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBasePersonality" class="abs"></a>GetBasePersonality<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseEndurance" class="abs"></a>GetBaseEndurance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseAccuracy" class="abs"></a>GetBaseAccuracy<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseSpeed" class="abs"></a>GetBaseSpeed<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseLuck" class="abs"></a>GetBaseLuck<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseLevel" class="abs"></a>GetBaseLevel<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetLevel" class="abs"></a>GetLevel<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMight" class="abs"></a>GetMight<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetIntellect" class="abs"></a>GetIntellect<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetPersonality" class="abs"></a>GetPersonality<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetEndurance" class="abs"></a>GetEndurance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetAccuracy" class="abs"></a>GetAccuracy<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetSpeed" class="abs"></a>GetSpeed<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetLuck" class="abs"></a>GetLuck<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMeleeAttack" class="abs"></a>GetMeleeAttack<b class="def-largs">(</b>IgnoreExtraHand <span class="def-ver">[MM7+]</span> = false<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CalcMeleeDamage" class="abs"></a>CalcMeleeDamage<b class="def-largs">(</b>JustWeaponDamage = false, IgnoreExtraHand = false, MonsterId = -1<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetRangedAttack" class="abs"></a>GetRangedAttack<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CalcRangedDamage" class="abs"></a>CalcRangedDamage<b class="def-largs">(</b>MonsterId = -1<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CalcHitOrMiss" class="abs"></a>CalcHitOrMiss<b class="def-largs">(</b><a href="#structs.MapMonster">Monster</a>, Range = 0, Bonus = 0<b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">AttackType</b>: 0 &ndash; melee, 1 &ndash; less than 1024, 2 &ndash; less then 2560, 3 &ndash; 2560 or more. See the Mechanics page on my site for more info on the formula.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMeleeDamageRangeText" class="abs"></a>GetMeleeDamageRangeText<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetRangedDamageRangeText" class="abs"></a>GetRangedDamageRangeText<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CanTrain" class="abs"></a>CanTrain<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AddHP" class="abs"></a>AddHP<b class="def-largs">(</b>Amount<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.DoDamage" class="abs"></a>DoDamage<b class="def-largs">(</b>Damage, <a href="#const.Damage">DamageKind</a> = const.Damage.Phys<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.DoBadThing" class="abs"></a>DoBadThing<b class="def-largs">(</b><a href="#const.MonsterBonus">Thing</a>, <a href="#structs.MapMonster">Monster</a><span class="def-ver">[MM7+]</span><b class="def-rargs">)</b>
</td><td class="def-right">
 <b class="def-param">Monster</b> must be specified for stealing in MM7+
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetAttackDelay" class="abs"></a>GetAttackDelay<b class="def-largs">(</b>Shoot = false<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetFullHP" class="abs"></a>GetFullHP<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetFullSP" class="abs"></a>GetFullSP<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMeleeDamageMin" class="abs"></a>GetMeleeDamageMin<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMeleeDamageMax" class="abs"></a>GetMeleeDamageMax<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetRangedDamageMin" class="abs"></a>GetRangedDamageMin<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetRangedDamageMax" class="abs"></a>GetRangedDamageMax<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.HasItemBonus" class="abs"></a>HasItemBonus<b class="def-largs">(</b>Bonus2<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  Checks whether the player is wearing an item with specified <a href="#structs.Item.Bonus2.">Bonus2</a> of items See SPCITEMS.TXT for 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseFireResistance" class="abs"></a>GetBaseFireResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseElectricityResistance" class="abs"></a>GetBaseElectricityResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseColdResistance" class="abs"></a>GetBaseColdResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBasePoisonResistance" class="abs"></a>GetBasePoisonResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseMagicResistance" class="abs"></a>GetBaseMagicResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetFireResistance" class="abs"></a>GetFireResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetElectricityResistance" class="abs"></a>GetElectricityResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetColdResistance" class="abs"></a>GetColdResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetPoisonResistance" class="abs"></a>GetPoisonResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMagicResistance" class="abs"></a>GetMagicResistance<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.WearsItem" class="abs"></a>WearsItem<b class="def-largs">(</b>ItemNum, <a href="#const.ItemSlot">Slot</a> = 16<b class="def-rargs">)</b>
</td><td class="def-right">
 If <b class="def-param">Slot</b> isn't specified, searches all slots for the item
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseResistance" class="abs"></a>GetBaseResistance<b class="def-largs">(</b><a href="#const.Damage">Res</a><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetResistance" class="abs"></a>GetResistance<b class="def-largs">(</b><a href="#const.Damage">Res</a><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetStartingClass" class="abs"></a>GetStartingClass<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetRace" class="abs"></a>GetRace<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetDiplomacyTotalSkill" class="abs"></a>GetDiplomacyTotalSkill<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseArmorClass" class="abs"></a>GetBaseArmorClass<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetArmorClass" class="abs"></a>GetArmorClass<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetBaseAge" class="abs"></a>GetBaseAge<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetAge" class="abs"></a>GetAge<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.Recover" class="abs"></a>Recover<b class="def-largs">(</b>ByAmount<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SetRecoveryDelayRaw" class="abs"></a>SetRecoveryDelayRaw<b class="def-largs">(</b>Delay<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CalcStatBonusByItems" class="abs"></a>CalcStatBonusByItems<b class="def-largs">(</b><a href="#const.Stats">Stat</a>, IgnoreExtraHand <span class="def-ver">[MM7+]</span> = false<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CalcStatBonusByMagic" class="abs"></a>CalcStatBonusByMagic<b class="def-largs">(</b><a href="#const.Stats">Stat</a><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CalcStatBonusBySkills" class="abs"></a>CalcStatBonusBySkills<b class="def-largs">(</b><a href="#const.Stats">Stat</a><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMerchantTotalSkill" class="abs"></a>GetMerchantTotalSkill<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetDisarmTrapTotalSkill" class="abs"></a>GetDisarmTrapTotalSkill<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ShowFaceExpression" class="abs"></a>ShowFaceExpression<b class="def-largs">(</b>Expression, Time = 0<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ShowFaceAnimation" class="abs"></a>ShowFaceAnimation<b class="def-largs">(</b><a href="#const.FaceAnimation">Animation</a><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.IsConscious" class="abs"></a>IsConscious<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetSkill" class="abs"></a>GetSkill<b class="def-largs">(</b><a href="#const.Skills">Skill</a><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetPerceptionTotalSkill" class="abs"></a>GetPerceptionTotalSkill<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetLearningTotalSkill" class="abs"></a>GetLearningTotalSkill<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.AddCondition" class="abs"></a>AddCondition<b class="def-largs">(</b><a href="#const.Condition">Condition</a>, CanResist = false<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  Passing <b class="def-param">const.Condition.Good</b> isn't supported.<br><b class="def-param">CanResist</b> only affects application of Protection from Magic spell. If it's <b class="def-param">true</b> and the spell protects the player, spell strength is decreased instead of condition being applied.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetMainCondition" class="abs"></a><a href="#const.Condition">GetMainCondition</a><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  Returns the condition that affects character stats. Also see <a href="#structs.Player.GetDisplayedCondition">GetDisplayedCondition</a>.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.ResetToClass" class="abs"></a>ResetToClass<b class="def-largs">(</b>arg1<b class="def-rargs">)</b>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetDisplayedCondition" class="abs"></a><a href="#const.Condition">GetDisplayedCondition</a><b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 Returns the condition displayed on character face and in character properties. Since pacth 2.5 it can differ from <a href="#structs.Player.GetMainCondition">GetMainCondition</a>.
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.EnumActiveItems" class="abs"></a>EnumActiveItems<b class="def-largs">(</b>includeBroken<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetActiveItem" class="abs"></a>GetActiveItem<b class="def-largs">(</b>slot, includeBroken<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.CountItems" class="abs"></a>CountItems<b class="def-largs">(</b>{item1, item2, ...}<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.SetRecoveryDelay" class="abs"></a>SetRecoveryDelay<b class="def-largs">(</b>Delay<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Player.GetIndex" class="abs"></a>GetIndex<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ProgressBar"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ProgressBar</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ProgressBar.Max" class="abs"></a>Max
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ProgressBar.Current" class="abs"></a>Current
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ProgressBar.Kind" class="abs"></a>Kind
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ProgressBar.Show" class="abs"></a>Show<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ProgressBar.Hide" class="abs"></a>Hide<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ProgressBar.Draw" class="abs"></a>Draw<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ProgressBar.Increment" class="abs"></a>Increment<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ProgressBar.SetMax" class="abs"></a>SetMax<b class="def-largs">(</b>arg1<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SFT"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SFT</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SFT.MatchIndex" class="abs"></a>MatchIndex
</td><td class="def-right">
 used when searching for a group by name
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFT.Frames" class="abs"></a><a href="#structs.SFTItem">Frames</a>[]
</td><td class="def-right">
<b class="def-default">(Default)</b> 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFT.Groups" class="abs"></a><a href="#structs.SFTItem">Groups</a>[][]
</td><td class="def-right">
 sorted by name
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFT.GroupIndex" class="abs"></a>GroupIndex[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SFT.FindGroup" class="abs"></a>FindGroup<b class="def-largs">(</b>arg1 = ""<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFT.LoadGroup" class="abs"></a>LoadGroup<b class="def-largs">(</b>arg1<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SFTItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SFTItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SFTItem.GroupName" class="abs"></a>GroupName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.SpriteName" class="abs"></a>SpriteName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.SpriteIndex" class="abs"></a>SpriteIndex[]
</td><td class="def-right">
 loaded from sprite list at runtime, chosen based on sprite orientation
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Scale" class="abs"></a>Scale
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.NotGroupEnd" class="abs"></a>NotGroupEnd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Luminous" class="abs"></a>Luminous
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.GroupStart" class="abs"></a>GroupStart
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Image1" class="abs"></a>Image1
</td><td class="def-right">
 has 1 image (not 8 for different angles)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Center" class="abs"></a>Center
</td><td class="def-right">
 center sprite
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Fidget" class="abs"></a>Fidget
</td><td class="def-right">
 part of monster figet sequence
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Loaded" class="abs"></a>Loaded
</td><td class="def-right">
 group is loaded
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror0" class="abs"></a>Mirror0
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror1" class="abs"></a>Mirror1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror2" class="abs"></a>Mirror2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror3" class="abs"></a>Mirror3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror4" class="abs"></a>Mirror4
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror5" class="abs"></a>Mirror5
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror6" class="abs"></a>Mirror6
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Mirror7" class="abs"></a>Mirror7
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Images3" class="abs"></a>Images3
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  only views 0,2,4 exist (mirrored)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Glow" class="abs"></a>Glow
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Transparent" class="abs"></a>Transparent
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.LightRadius" class="abs"></a>LightRadius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.PaletteId" class="abs"></a>PaletteId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.PaletteIndex" class="abs"></a>PaletteIndex
</td><td class="def-right">
 palette index (0 if not loaded)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.Time" class="abs"></a>Time
</td><td class="def-right">
 time for this frame in 1/32 of a second
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SFTItem.TotalTime" class="abs"></a>TotalTime
</td><td class="def-right">
 total time for this group
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.ShopItemKind"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.ShopItemKind</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.ShopItemKind.Level" class="abs"></a>Level
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.ShopItemKind.Types" class="abs"></a><a href="#const.ItemType">Types</a>[1..4]
</td><td class="def-right">
<b class="def-default">(Default)</b> 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SoundsItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SoundsItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SoundsItem.Name" class="abs"></a>Name
</td><td class="def-right">
 name of sound file
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Type" class="abs"></a>Type
</td><td class="def-right">
 type of sound<br>0 = (0) <span class="def-nbsp">     </span>level specific sound, load during level initialization<br>1 = (system) system sound, always loaded<br>2 = (swap) <span class="def-nbsp">  </span>level specific sound, that gets loaded and flushed<br>3 = (?)<br>4 = (lock) <span class="def-nbsp">  </span>delete sound only when game ends
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Locked" class="abs"></a>Locked
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Is3D" class="abs"></a>Is3D
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Data" class="abs"></a>Data[]
</td><td class="def-right">
 data pointer
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Data3D" class="abs"></a>Data3D
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  3d data pointer
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SoundsItem.Decompressed" class="abs"></a>Decompressed
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  true if decompressed and needs to be freed separately
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SpawnPoint"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpawnPoint</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpawnPoint.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Radius" class="abs"></a>Radius
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Kind" class="abs"></a><a href="#const.ObjectRefKind">Kind</a>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Index" class="abs"></a>Index
</td><td class="def-right">
 Index: monster (1-3: M1-M3, <span class="def-nbsp"> </span>4-6: M1a-M3a, <span class="def-nbsp"> </span>7-9: M1b-M3b, <span class="def-nbsp"> </span>10-12: M1c-M3c) or item (1-6 for regular items, 7 for artifact)
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.OnAlertMap" class="abs"></a>OnAlertMap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpawnPoint.Group" class="abs"></a>Group
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SpcItemsTxtItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpcItemsTxtItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.NameAdd" class="abs"></a>NameAdd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.BonusStat" class="abs"></a>BonusStat
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.ChanceForSlot" class="abs"></a>ChanceForSlot[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.W1" class="abs"></a>W1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.W2" class="abs"></a>W2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Miss" class="abs"></a>Miss
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Arm" class="abs"></a>Arm
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Shld" class="abs"></a>Shld
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Helm" class="abs"></a>Helm
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Belt" class="abs"></a>Belt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Cape" class="abs"></a>Cape
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Gaunt" class="abs"></a>Gaunt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Boot" class="abs"></a>Boot
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Ring" class="abs"></a>Ring
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Amul" class="abs"></a>Amul
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Value" class="abs"></a>Value
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpcItemsTxtItem.Lvl" class="abs"></a>Lvl
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SpellBuff"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpellBuff</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpellBuff.ExpireTime" class="abs"></a>ExpireTime
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellBuff.Power" class="abs"></a>Power
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellBuff.Skill" class="abs"></a>Skill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellBuff.OverlayId" class="abs"></a>OverlayId
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellBuff.Caster" class="abs"></a>Caster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellBuff.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpellBuff.Set" class="abs"></a>Set<b class="def-largs">(</b>ExpireTime, Skill, Power, OverlayId, Caster<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SpellEffect"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpellEffect</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
</tbody>
</table>
<br>

<br><a id="structs.SpellInfo"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpellInfo</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpellInfo.SpellPoints" class="abs"></a>SpellPoints[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.SpellPointsNormal" class="abs"></a>SpellPointsNormal
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.SpellPointsExpert" class="abs"></a>SpellPointsExpert
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.SpellPointsMaster" class="abs"></a>SpellPointsMaster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.SpellPointsGM" class="abs"></a>SpellPointsGM
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.Delay" class="abs"></a>Delay[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.DelayNormal" class="abs"></a>DelayNormal
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.DelayExpert" class="abs"></a>DelayExpert
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.DelayMaster" class="abs"></a>DelayMaster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.DelayGM" class="abs"></a>DelayGM
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.DamageAdd" class="abs"></a>DamageAdd
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.DamageDiceSides" class="abs"></a>DamageDiceSides
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.CastByMonster" class="abs"></a>CastByMonster
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  "M" in "Stats" from spells.txt
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.CastByEvent" class="abs"></a>CastByEvent
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  "E" in "Stats" from spells.txt
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.CauseDamage" class="abs"></a>CauseDamage
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  "C" in "Stats" from spells.txt
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.SpecialDamage" class="abs"></a>SpecialDamage
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  "X" in "Stats" from spells.txt
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellInfo.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SpellsTxtItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpellsTxtItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.ShortName" class="abs"></a>ShortName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.Description" class="abs"></a>Description
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.Normal" class="abs"></a>Normal
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.Expert" class="abs"></a>Expert
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.Master" class="abs"></a>Master
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.GM" class="abs"></a>GM
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.GrandMaster" class="abs"></a>GrandMaster
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.DamageType" class="abs"></a>DamageType
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.SpellPoints" class="abs"></a>SpellPoints[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.SpellPointsNormal" class="abs"></a>SpellPointsNormal
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.SpellPointsExpert" class="abs"></a>SpellPointsExpert
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.SpellPointsMaster" class="abs"></a>SpellPointsMaster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpellsTxtItem.SpellPointsGM" class="abs"></a>SpellPointsGM
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.SpritesLod"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.SpritesLod</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpritesLod.File" class="abs"></a>File
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.FileName" class="abs"></a>FileName
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.Loaded" class="abs"></a>Loaded
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.IOBuffer" class="abs"></a>IOBuffer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.IOBufferSize" class="abs"></a>IOBufferSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.LodHeaderSignature" class="abs"></a>LodHeaderSignature
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.Description" class="abs"></a>Description
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.ArchivesCount" class="abs"></a>ArchivesCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.ArchivesCArray" class="abs"></a>ArchivesCArray
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.Type" class="abs"></a>Type
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.ChapterHandle" class="abs"></a>ChapterHandle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.ChapterSize" class="abs"></a>ChapterSize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.Files" class="abs"></a><a href="#structs.LodFile">Files</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.FilesOffset" class="abs"></a>FilesOffset
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.SpritesSW" class="abs"></a><a href="#structs.LodSprite">SpritesSW</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.IsHardware" class="abs"></a>IsHardware
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.SpritesD3D" class="abs"></a><a href="#structs.LodSpriteD3D">SpritesD3D</a>[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Методы:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.SpritesLod.HasFile" class="abs"></a>HasFile<b class="def-largs">(</b>arg1 = ""<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.SpritesLod.LoadSprite" class="abs"></a>LoadSprite<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.StartStat"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.StartStat</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.StartStat.Base" class="abs"></a>Base
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StartStat.Max" class="abs"></a>Max
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StartStat.Spend" class="abs"></a>Spend
</td><td class="def-right">
 how much you spend on it to add a point
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StartStat.Add" class="abs"></a>Add
</td><td class="def-right">
 how much is added when you spend a point
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.StdItemsTxtItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.StdItemsTxtItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.NameAdd" class="abs"></a>NameAdd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.BonusStat" class="abs"></a>BonusStat
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.ChanceForSlot" class="abs"></a>ChanceForSlot[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Arm" class="abs"></a>Arm
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Shld" class="abs"></a>Shld
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Helm" class="abs"></a>Helm
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Belt" class="abs"></a>Belt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Cape" class="abs"></a>Cape
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Gaunt" class="abs"></a>Gaunt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Boot" class="abs"></a>Boot
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Ring" class="abs"></a>Ring
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.StdItemsTxtItem.Amul" class="abs"></a>Amul
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.TFTItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.TFTItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.TFTItem.Name" class="abs"></a>Name
</td><td class="def-right">
 texture name
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TFTItem.Index" class="abs"></a>Index
</td><td class="def-right">
 index in bitmaps.lod
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TFTItem.Time" class="abs"></a>Time
</td><td class="def-right">
 time for this frame in 1/32 of a second
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TFTItem.TotalTime" class="abs"></a>TotalTime
</td><td class="def-right">
 total time for this group
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TFTItem.NotGroupEnd" class="abs"></a>NotGroupEnd
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TFTItem.GroupStart" class="abs"></a>GroupStart
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TFTItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.TileItem"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.TileItem</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.TileItem.Name" class="abs"></a>Name
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Id" class="abs"></a>Id
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Bitmap" class="abs"></a>Bitmap
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.TileSet" class="abs"></a>TileSet
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Section" class="abs"></a>Section
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Burn" class="abs"></a>Burn
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Water" class="abs"></a>Water
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Block" class="abs"></a>Block
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Repulse" class="abs"></a>Repulse
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Flat" class="abs"></a>Flat
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Wave" class="abs"></a>Wave
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.NoDraw" class="abs"></a>NoDraw
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.WaterTransition" class="abs"></a>WaterTransition
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Transition" class="abs"></a>Transition
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.ScrollDown" class="abs"></a>ScrollDown
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.ScrollUp" class="abs"></a>ScrollUp
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.ScrollLeft" class="abs"></a>ScrollLeft
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.ScrollRight" class="abs"></a>ScrollRight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TileItem.Bits" class="abs"></a>Bits
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.TilesetDef"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.TilesetDef</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.TilesetDef.Group" class="abs"></a>Group
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TilesetDef.Offset" class="abs"></a>Offset
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.TownPortalTownInfo"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.TownPortalTownInfo</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.Direction" class="abs"></a>Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.LookAngle" class="abs"></a>LookAngle
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.MapStatsIndex" class="abs"></a>MapStatsIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.MapIndex" class="abs"></a>MapIndex
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TownPortalTownInfo.Map" class="abs"></a>Map
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.TravelInfo"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.TravelInfo</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.TravelInfo.MapIndex" class="abs"></a>MapIndex
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.DaysAvailable" class="abs"></a>DaysAvailable[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Monday" class="abs"></a>Monday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Tuesday" class="abs"></a>Tuesday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Wednesday" class="abs"></a>Wednesday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Thursday" class="abs"></a>Thursday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Friday" class="abs"></a>Friday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Saturday" class="abs"></a>Saturday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Sunday" class="abs"></a>Sunday
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.DaysCount" class="abs"></a>DaysCount
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Pos" class="abs"></a>Pos[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.X" class="abs"></a>X
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Y" class="abs"></a>Y
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Z" class="abs"></a>Z
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Direction" class="abs"></a>Direction
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.QBit" class="abs"></a>QBit
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.TravelInfo.Map" class="abs"></a>Map
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="structs.Weather"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>structs.Weather</h3>
 
&nbsp;<i class="def-ib">Свойства:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Weather.Shade" class="abs"></a>Shade
</td><td class="def-right">
 0 = sunny, 1 = dark, 2 = misty
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.Rain" class="abs"></a>Rain
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.Snow" class="abs"></a>Snow
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.Fog" class="abs"></a>Fog
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.FogRange1" class="abs"></a>FogRange1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.FogRange2" class="abs"></a>FogRange2
</td><td class="def-right">
 
</td>
</tr><tr>
<td colspan="2" class="def-functions"><br>
  &nbsp;<i class="def-ib">Функции:</i>
</td>
</tr>
<tr>
<td class="def-left">
<a id="structs.Weather.SetFog" class="abs"></a>SetFog<b class="def-largs">(</b>Range1, Range2<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.RandomFog" class="abs"></a>RandomFog<b class="def-largs">(</b>LightChance, MiddleChance, ThickChance<b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="structs.Weather.New" class="abs"></a>New<b class="def-largs">(</b><b class="def-rargs">)</b>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>


<br>
<hr>
<a id="Constants"></a><h2>Constants</h2>


<br><a id="const"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.*</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.SkillClub" class="abs"></a>SkillClub
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Novice" class="abs"></a>Novice <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Expert" class="abs"></a>Expert <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Master" class="abs"></a>Master <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.GM" class="abs"></a>GM <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.SkillMisc" class="abs"></a>SkillMisc
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Minute" class="abs"></a>Minute <i class="def-const">= 256</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Hour" class="abs"></a>Hour <i class="def-const">= 15360</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Day" class="abs"></a>Day <i class="def-const">= 368640</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Week" class="abs"></a>Week <i class="def-const">= 2580480</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Month" class="abs"></a>Month <i class="def-const">= 10321920</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Year" class="abs"></a>Year <i class="def-const">= 123863040</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterImmune" class="abs"></a>MonsterImmune
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MapLimit" class="abs"></a>MapLimit <i class="def-const">= 22528</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.AIState"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.AIState</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.AIState.Stand" class="abs"></a>Stand <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Active" class="abs"></a>Active <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.MeleeAttack" class="abs"></a>MeleeAttack <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.RangedAttack" class="abs"></a>RangedAttack <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Dying" class="abs"></a>Dying <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Dead" class="abs"></a>Dead <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Pursue" class="abs"></a>Pursue <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Flee" class="abs"></a>Flee <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Stunned" class="abs"></a>Stunned <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Fidget" class="abs"></a>Fidget <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Interact" class="abs"></a>Interact <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Removed" class="abs"></a>Removed <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.RangedAttack2" class="abs"></a>RangedAttack2 <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.CastSpell" class="abs"></a>CastSpell <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Stoned" class="abs"></a>Stoned <i class="def-const">= 14</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Paralyzed" class="abs"></a>Paralyzed <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Resurrect" class="abs"></a>Resurrect <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Summoned" class="abs"></a>Summoned <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.RangedAttack4" class="abs"></a>RangedAttack4 <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.AIState.Invisible" class="abs"></a>Invisible <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.CharScreens"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.CharScreens</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.CharScreens.Stats" class="abs"></a>Stats <i class="def-const">= 100</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.CharScreens.Skills" class="abs"></a>Skills <i class="def-const">= 101</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.CharScreens.Awards" class="abs"></a>Awards <i class="def-const">= 102</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.CharScreens.Inventory" class="abs"></a>Inventory <i class="def-const">= 103</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.ChestBits"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.ChestBits</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.ChestBits.Trapped" class="abs"></a>Trapped <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ChestBits.ItemsPlaced" class="abs"></a>ItemsPlaced <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ChestBits.Identified" class="abs"></a>Identified <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Class"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Class</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Class.Necromancer" class="abs"></a>Necromancer <i class="def-const">= 0</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Knight" class="abs"></a>Knight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Cavalier" class="abs"></a>Cavalier <i class="def-const">= 1</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Champion" class="abs"></a>Champion
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.BlackKnight" class="abs"></a>BlackKnight <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Thief" class="abs"></a>Thief <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Rogue" class="abs"></a>Rogue <i class="def-const">= 5</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Spy" class="abs"></a>Spy <i class="def-const">= 6</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Assassin" class="abs"></a>Assassin <i class="def-const">= 7</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Monk" class="abs"></a>Monk <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Initiate" class="abs"></a>Initiate <i class="def-const">= 9</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Master" class="abs"></a>Master <i class="def-const">= 10</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Ninja" class="abs"></a>Ninja <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Cleric" class="abs"></a>Cleric
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Priest" class="abs"></a>Priest
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.HighPriest" class="abs"></a>HighPriest <i class="def-const">= 5</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Sorcerer" class="abs"></a>Sorcerer
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Wizard" class="abs"></a>Wizard
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.ArchMage" class="abs"></a>ArchMage
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Paladin" class="abs"></a>Paladin
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Crusader" class="abs"></a>Crusader
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Hero" class="abs"></a>Hero
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Villain" class="abs"></a>Villain <i class="def-const">= 15</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Archer" class="abs"></a>Archer
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.BattleMage" class="abs"></a>BattleMage <i class="def-const">= 13</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.WarriorMage" class="abs"></a>WarriorMage
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.MasterArcher" class="abs"></a>MasterArcher <i class="def-const">= 18</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Sniper" class="abs"></a>Sniper <i class="def-const">= 19</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Ranger" class="abs"></a>Ranger <i class="def-const">= 20</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Hunter" class="abs"></a>Hunter <i class="def-const">= 21</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.RangerLord" class="abs"></a>RangerLord <i class="def-const">= 22</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.BountyHunter" class="abs"></a>BountyHunter <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.PriestLight" class="abs"></a>PriestLight
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.PriestDark" class="abs"></a>PriestDark <i class="def-const">= 27</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Druid" class="abs"></a>Druid
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.GreatDruid" class="abs"></a>GreatDruid
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.ArchDruid" class="abs"></a>ArchDruid
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Warlock" class="abs"></a>Warlock <i class="def-const">= 31</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Lich" class="abs"></a>Lich
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Troll" class="abs"></a>Troll <i class="def-const">= 6</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.WarTroll" class="abs"></a>WarTroll <i class="def-const">= 7</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Minotaur" class="abs"></a>Minotaur <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.MinotaurLord" class="abs"></a>MinotaurLord <i class="def-const">= 9</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.DarkElf" class="abs"></a>DarkElf <i class="def-const">= 10</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Patriarch" class="abs"></a>Patriarch <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Vampire" class="abs"></a>Vampire <i class="def-const">= 12</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Nosferatu" class="abs"></a>Nosferatu <i class="def-const">= 13</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.Dragon" class="abs"></a>Dragon <i class="def-const">= 14</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Class.GreatWyrm" class="abs"></a>GreatWyrm <i class="def-const">= 15</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Condition"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Condition</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Condition.Cursed" class="abs"></a>Cursed <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Weak" class="abs"></a>Weak <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Asleep" class="abs"></a>Asleep <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Afraid" class="abs"></a>Afraid <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Drunk" class="abs"></a>Drunk <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Insane" class="abs"></a>Insane <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Poison1" class="abs"></a>Poison1 <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Disease1" class="abs"></a>Disease1 <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Poison2" class="abs"></a>Poison2 <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Disease2" class="abs"></a>Disease2 <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Poison3" class="abs"></a>Poison3 <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Disease3" class="abs"></a>Disease3 <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Paralyzed" class="abs"></a>Paralyzed <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Unconscious" class="abs"></a>Unconscious <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Dead" class="abs"></a>Dead <i class="def-const">= 14</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Stoned" class="abs"></a>Stoned <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Eradicated" class="abs"></a>Eradicated <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Zombie" class="abs"></a>Zombie <i class="def-const">= 17</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Condition.Good" class="abs"></a>Good
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Damage"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Damage</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Damage.Phys" class="abs"></a>Phys
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Magic" class="abs"></a>Magic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Fire" class="abs"></a>Fire
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Air" class="abs"></a>Air <i class="def-const">= 1</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Water" class="abs"></a>Water <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Earth" class="abs"></a>Earth <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Spirit" class="abs"></a>Spirit <i class="def-const">= 6</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Mind" class="abs"></a>Mind <i class="def-const">= 7</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Body" class="abs"></a>Body <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Light" class="abs"></a>Light <i class="def-const">= 9</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Dark" class="abs"></a>Dark <i class="def-const">= 10</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Elec" class="abs"></a>Elec <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Cold" class="abs"></a>Cold <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Poison" class="abs"></a>Poison <i class="def-const">= 5</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Energy" class="abs"></a>Energy
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Damage.Dragon" class="abs"></a>Dragon <i class="def-const">= 50</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.ExitMapAction"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.ExitMapAction</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.ExitMapAction.None" class="abs"></a>None <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ExitMapAction.Exit" class="abs"></a>Exit <i class="def-const">= 1</i>
</td><td class="def-right">
 used in main menu
</td>
</tr><tr>
<td class="def-left">
<a id="const.ExitMapAction.LoadMap" class="abs"></a>LoadMap <i class="def-const">= 2</i>
</td><td class="def-right">
 when you exit a map and enter another one
</td>
</tr><tr>
<td class="def-left">
<a id="const.ExitMapAction.LoadGame" class="abs"></a>LoadGame <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ExitMapAction.NewGame" class="abs"></a>NewGame <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ExitMapAction.MainMenu" class="abs"></a>MainMenu <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ExitMapAction.Death" class="abs"></a>Death <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ExitMapAction.WinScreen" class="abs"></a>WinScreen <i class="def-const">= 9</i>
</td><td class="def-right">
 draw the Win message
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.FaceAnimation"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.FaceAnimation</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.FaceAnimation.KillSmallEnemy" class="abs"></a>KillSmallEnemy <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.KillBigEnemy" class="abs"></a>KillBigEnemy <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.StoreClosed" class="abs"></a>StoreClosed <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.DisarmTrap" class="abs"></a>DisarmTrap <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.TrapExploaded" class="abs"></a>TrapExploaded <i class="def-const">= 5</i>
</td><td class="def-right">
 sorry about that / it's gonna blow!
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.AvoidDamage" class="abs"></a>AvoidDamage <i class="def-const">= 6</i>
</td><td class="def-right">
 sits down. Avoids either trap damage with Perception or attack damage with Dodging
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.IdentifyUseless" class="abs"></a>IdentifyUseless <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.IdentifyGreat" class="abs"></a>IdentifyGreat <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.IdentifyFail" class="abs"></a>IdentifyFail <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.RepairItem" class="abs"></a>RepairItem <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.RepairFail" class="abs"></a>RepairFail <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.SetQuickSpell" class="abs"></a>SetQuickSpell <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.CantRestHere" class="abs"></a>CantRestHere <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.SkillIncreased" class="abs"></a>SkillIncreased <i class="def-const">= 14</i>
</td><td class="def-right">
 in Skills screen
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.CantCarry" class="abs"></a>CantCarry <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.MixPotion" class="abs"></a>MixPotion <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.PotionExplode" class="abs"></a>PotionExplode <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.DoorLocked" class="abs"></a>DoorLocked <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.WontBudge" class="abs"></a>WontBudge <i class="def-const">= 19</i>
</td><td class="def-right">
 like pulling sword out of stone in MM6
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.CantLearnSpell" class="abs"></a>CantLearnSpell <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.LearnSpell" class="abs"></a>LearnSpell <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Hello" class="abs"></a>Hello <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.HelloNight" class="abs"></a>HelloNight <i class="def-const">= 23</i>
</td><td class="def-right">
 10PM &lt;= time &lt; 5AM
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Damaged" class="abs"></a>Damaged <i class="def-const">= 24</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Weak" class="abs"></a>Weak <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Afraid" class="abs"></a>Afraid <i class="def-const">= 26</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Poisoned" class="abs"></a>Poisoned <i class="def-const">= 27</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Deseased" class="abs"></a>Deseased <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Insane" class="abs"></a>Insane <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Cursed" class="abs"></a>Cursed <i class="def-const">= 30</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Drunk" class="abs"></a>Drunk <i class="def-const">= 31</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Unconsious" class="abs"></a>Unconsious <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Death" class="abs"></a>Death <i class="def-const">= 33</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Stoned" class="abs"></a>Stoned <i class="def-const">= 34</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Eradicated" class="abs"></a>Eradicated <i class="def-const">= 35</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.DinkPotion" class="abs"></a>DinkPotion <i class="def-const">= 36</i>
</td><td class="def-right">
 or eat reagent
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ReadScoll" class="abs"></a>ReadScoll <i class="def-const">= 37</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.NotEnoughGold" class="abs"></a>NotEnoughGold <i class="def-const">= 38</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.CantEquip" class="abs"></a>CantEquip <i class="def-const">= 39</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ItemBrokenStolen" class="abs"></a>ItemBrokenStolen <i class="def-const">= 40</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.SPDrained" class="abs"></a>SPDrained <i class="def-const">= 41</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Aged" class="abs"></a>Aged <i class="def-const">= 42</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.SpellFailed" class="abs"></a>SpellFailed <i class="def-const">= 43</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.DamagedParty" class="abs"></a>DamagedParty <i class="def-const">= 44</i>
</td><td class="def-right">
 with explosive impact
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Tired" class="abs"></a>Tired <i class="def-const">= 45</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.EnterDungeon" class="abs"></a>EnterDungeon <i class="def-const">= 46</i>
</td><td class="def-right">
 come on let's go in
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.LeaveDungeon" class="abs"></a>LeaveDungeon <i class="def-const">= 47</i>
</td><td class="def-right">
 let's get out of here
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.AlmostDead" class="abs"></a>AlmostDead <i class="def-const">= 48</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.CastSpell" class="abs"></a>CastSpell <i class="def-const">= 49</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Shoot" class="abs"></a>Shoot <i class="def-const">= 50</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.AttackHit" class="abs"></a>AttackHit <i class="def-const">= 51</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.AttackMiss" class="abs"></a>AttackMiss <i class="def-const">= 52</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Beg" class="abs"></a>Beg <i class="def-const">= 53</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.BegFail" class="abs"></a>BegFail <i class="def-const">= 54</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Threat" class="abs"></a>Threat <i class="def-const">= 55</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ThreatFail" class="abs"></a>ThreatFail <i class="def-const">= 56</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Bribe" class="abs"></a>Bribe <i class="def-const">= 57</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.BribeFail" class="abs"></a>BribeFail <i class="def-const">= 58</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.NPCDontTalk" class="abs"></a>NPCDontTalk <i class="def-const">= 59</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.FoundItem" class="abs"></a>FoundItem <i class="def-const">= 60</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.HireNPC" class="abs"></a>HireNPC <i class="def-const">= 61</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.LookUp" class="abs"></a>LookUp <i class="def-const">= 63</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.LookDown" class="abs"></a>LookDown <i class="def-const">= 64</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Yell" class="abs"></a>Yell <i class="def-const">= 65</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Falling" class="abs"></a>Falling <i class="def-const">= 66</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.TavernPacksFull" class="abs"></a>TavernPacksFull <i class="def-const">= 67</i>
</td><td class="def-right">
 shakes head
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.TavernDrink" class="abs"></a>TavernDrink <i class="def-const">= 68</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.TavernGotDrunk" class="abs"></a>TavernGotDrunk <i class="def-const">= 69</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.TavernTip" class="abs"></a>TavernTip <i class="def-const">= 70</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.TravelHorse" class="abs"></a>TravelHorse <i class="def-const">= 71</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.TravelBoat" class="abs"></a>TravelBoat <i class="def-const">= 72</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShopIdentify" class="abs"></a>ShopIdentify <i class="def-const">= 73</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShopRepair" class="abs"></a>ShopRepair <i class="def-const">= 74</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShopItemBought" class="abs"></a>ShopItemBought <i class="def-const">= 75</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShopAlreadyIdentified" class="abs"></a>ShopAlreadyIdentified <i class="def-const">= 76</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShopItemSold" class="abs"></a>ShopItemSold <i class="def-const">= 77</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.SkillLearned" class="abs"></a>SkillLearned <i class="def-const">= 78</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShopWrongShop" class="abs"></a>ShopWrongShop <i class="def-const">= 79</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ShopRude" class="abs"></a>ShopRude <i class="def-const">= 80</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.BankDeposit" class="abs"></a>BankDeposit <i class="def-const">= 81</i>
</td><td class="def-right">
 or paying a fine
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.TempleHeal" class="abs"></a>TempleHeal <i class="def-const">= 82</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.TempleDonate" class="abs"></a>TempleDonate <i class="def-const">= 83</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.HelloHouse" class="abs"></a>HelloHouse <i class="def-const">= 84</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.SkillMasteryIcreased" class="abs"></a>SkillMasteryIcreased <i class="def-const">= 85</i>
</td><td class="def-right">
 by a teacher
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.JoinedGuild" class="abs"></a>JoinedGuild <i class="def-const">= 86</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.LevelUp" class="abs"></a>LevelUp <i class="def-const">= 87</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.StatBonusIncreased" class="abs"></a>StatBonusIncreased <i class="def-const">= 91</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.StatBaseIncreased" class="abs"></a>StatBaseIncreased <i class="def-const">= 92</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.QuestGot" class="abs"></a>QuestGot <i class="def-const">= 93</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.AwardGot" class="abs"></a>AwardGot <i class="def-const">= 96</i>
</td><td class="def-right">
 or autonote added, or QBits removed, or used Genie Lamp
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.AfraidSilent" class="abs"></a>AfraidSilent <i class="def-const">= 98</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.CheatedDeath" class="abs"></a>CheatedDeath <i class="def-const">= 99</i>
</td><td class="def-right">
 "okay!". After death of party / after zombification
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.InPrison" class="abs"></a>InPrison <i class="def-const">= 100</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.ChooseMe" class="abs"></a>ChooseMe <i class="def-const">= 102</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.Awaken" class="abs"></a>Awaken <i class="def-const">= 103</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.IdMonsterWeak" class="abs"></a>IdMonsterWeak <i class="def-const">= 104</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.IdMonsterBig" class="abs"></a>IdMonsterBig <i class="def-const">= 105</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.IdMonsterFail" class="abs"></a>IdMonsterFail <i class="def-const">= 106</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.LastManStanding" class="abs"></a>LastManStanding <i class="def-const">= 107</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.NotEnoughFood" class="abs"></a>NotEnoughFood <i class="def-const">= 108</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FaceAnimation.DeathBlow" class="abs"></a>DeathBlow <i class="def-const">= 109</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.FacetBits"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.FacetBits</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.FacetBits.IsPortal" class="abs"></a>IsPortal <i class="def-const">= 0x1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.IsSecret" class="abs"></a>IsSecret <i class="def-const">= 0x2</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  show in red with Perception
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ScrollDown" class="abs"></a>ScrollDown <i class="def-const">= 0x4</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.AlignTop" class="abs"></a>AlignTop <i class="def-const">= 0x8</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.IsWater" class="abs"></a>IsWater <i class="def-const">= 0x10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ScrollUp" class="abs"></a>ScrollUp <i class="def-const">= 0x20</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ScrollLeft" class="abs"></a>ScrollLeft <i class="def-const">= 0x40</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ProjectToXY" class="abs"></a>ProjectToXY <i class="def-const">= 0x100</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ProjectToXZ" class="abs"></a>ProjectToXZ <i class="def-const">= 0x200</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ProjectToYZ" class="abs"></a>ProjectToYZ <i class="def-const">= 0x400</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.ScrollRight" class="abs"></a>ScrollRight <i class="def-const">= 0x800</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  moving texture
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.AlignLeft" class="abs"></a>AlignLeft <i class="def-const">= 0x1000</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.Invisible" class="abs"></a>Invisible <i class="def-const">= 0x2000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.AnimatedTFT" class="abs"></a>AnimatedTFT <i class="def-const">= 0x4000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.AlignRight" class="abs"></a>AlignRight <i class="def-const">= 0x8000</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.AlignBottom" class="abs"></a>AlignBottom <i class="def-const">= 0x20000</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  align door texture in D3D
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.MoveByDoor" class="abs"></a>MoveByDoor <i class="def-const">= 0x40000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.IsEventJustHint" class="abs"></a>IsEventJustHint <i class="def-const">= 0x100000</i>
</td><td class="def-right">
 <span class="def-ver">[MM7+]</span>
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.AlternativeSound" class="abs"></a>AlternativeSound <i class="def-const">= 0x200000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.IsSky" class="abs"></a>IsSky <i class="def-const">= 0x400000</i>
</td><td class="def-right">
 outdoor in software mode: horizontal flow
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.FlipU" class="abs"></a>FlipU <i class="def-const">= 0x800000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.FlipV" class="abs"></a>FlipV <i class="def-const">= 0x1000000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.TriggerByClick" class="abs"></a>TriggerByClick <i class="def-const">= 0x2000000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.TriggerByStep" class="abs"></a>TriggerByStep <i class="def-const">= 0x4000000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.DisableEventByCtrlClick" class="abs"></a>DisableEventByCtrlClick <i class="def-const">= 0x8000000</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  indoor only: click event gets disabled by Ctrl+Click
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.EventDisabledByCtrlClick" class="abs"></a>EventDisabledByCtrlClick <i class="def-const">= 0x10000000</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.TriggerByMonster" class="abs"></a>TriggerByMonster <i class="def-const">= 0x8000000</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  happens even if there's no event assigned
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.TriggerByObject" class="abs"></a>TriggerByObject <i class="def-const">= 0x10000000</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  happens even if there's no event assigned
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.Untouchable" class="abs"></a>Untouchable <i class="def-const">= 0x20000000</i>
</td><td class="def-right">
 great for vertical facets of stairs. <span class="def-ver">[MM7+]</span> Shouldn't be used for sloped floor, like it's used in MM6.
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.IsLava" class="abs"></a>IsLava <i class="def-const">= 0x40000000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.FacetBits.HasData" class="abs"></a>HasData <i class="def-const">= 0x80000000</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.GameActions"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.GameActions</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.GameActions.Exit" class="abs"></a>Exit <i class="def-const">= 113</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.HouseScreens"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.HouseScreens</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.HouseScreens.Teacher" class="abs"></a>Teacher <i class="def-const">= -1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ChoosePerson" class="abs"></a>ChoosePerson <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Main" class="abs"></a>Main <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuyStandard" class="abs"></a>BuyStandard <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Sell" class="abs"></a>Sell <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Identify" class="abs"></a>Identify <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpecial" class="abs"></a>BuySpecial
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpecialMM6" class="abs"></a>BuySpecialMM6 <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BankDeposit" class="abs"></a>BankDeposit <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BankWithdraw" class="abs"></a>BankWithdraw <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Heal" class="abs"></a>Heal <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Donate" class="abs"></a>Donate <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ProfNews" class="abs"></a>ProfNews <i class="def-const">= 12</i>
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.JoinMenu" class="abs"></a>JoinMenu <i class="def-const">= 13</i>
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.News" class="abs"></a>News <i class="def-const">= 14</i>
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.TavernSleep" class="abs"></a>TavernSleep <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.TavernFood" class="abs"></a>TavernFood <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Train" class="abs"></a>Train <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpells" class="abs"></a>BuySpells <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.A" class="abs"></a>A <i class="def-const">= 19</i>
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.B" class="abs"></a>B <i class="def-const">= 20</i>
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.C" class="abs"></a>C <i class="def-const">= 21</i>
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.D" class="abs"></a>D <i class="def-const">= 22</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.E" class="abs"></a>E <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.F" class="abs"></a>F <i class="def-const">= 24</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Beg" class="abs"></a>Beg <i class="def-const">= 22</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.SeerHint" class="abs"></a>SeerHint <i class="def-const">= 22</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Threat" class="abs"></a>Threat <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Bribe" class="abs"></a>Bribe <i class="def-const">= 24</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.TavernDrink" class="abs"></a>TavernDrink <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.TavernTip" class="abs"></a>TavernTip <i class="def-const">= 26</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Staff" class="abs"></a>Staff <i class="def-const">= 36</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Sword" class="abs"></a>Sword <i class="def-const">= 37</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Dagger" class="abs"></a>Dagger <i class="def-const">= 38</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Axe" class="abs"></a>Axe <i class="def-const">= 39</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Spear" class="abs"></a>Spear <i class="def-const">= 40</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Bow" class="abs"></a>Bow <i class="def-const">= 41</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Mace" class="abs"></a>Mace <i class="def-const">= 42</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Blaster" class="abs"></a>Blaster <i class="def-const">= 43</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Shield" class="abs"></a>Shield <i class="def-const">= 44</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Leather" class="abs"></a>Leather <i class="def-const">= 45</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Chain" class="abs"></a>Chain <i class="def-const">= 46</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Plate" class="abs"></a>Plate <i class="def-const">= 47</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Fire" class="abs"></a>Fire <i class="def-const">= 48</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Air" class="abs"></a>Air <i class="def-const">= 49</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Water" class="abs"></a>Water <i class="def-const">= 50</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Earth" class="abs"></a>Earth <i class="def-const">= 51</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Spirit" class="abs"></a>Spirit <i class="def-const">= 52</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Mind" class="abs"></a>Mind <i class="def-const">= 53</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Body" class="abs"></a>Body <i class="def-const">= 54</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Light" class="abs"></a>Light <i class="def-const">= 55</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Dark" class="abs"></a>Dark <i class="def-const">= 56</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.DarkElfAbility" class="abs"></a>DarkElfAbility <i class="def-const">= 57</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.VampireAbility" class="abs"></a>VampireAbility <i class="def-const">= 58</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.DragonAbility" class="abs"></a>DragonAbility <i class="def-const">= 59</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.IdentifyItem" class="abs"></a>IdentifyItem
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Merchant" class="abs"></a>Merchant
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Repair" class="abs"></a>Repair
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Bodybuilding" class="abs"></a>Bodybuilding
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Meditation" class="abs"></a>Meditation
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Perception" class="abs"></a>Perception
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Regeneration" class="abs"></a>Regeneration <i class="def-const">= 66</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Diplomacy" class="abs"></a>Diplomacy <i class="def-const">= 63</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Thievery" class="abs"></a>Thievery <i class="def-const">= 64</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.DisarmTraps" class="abs"></a>DisarmTraps
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Dodging" class="abs"></a>Dodging
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Unarmed" class="abs"></a>Unarmed
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.IdentifyMonster" class="abs"></a>IdentifyMonster
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Armsmaster" class="abs"></a>Armsmaster
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Stealing" class="abs"></a>Stealing
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Alchemy" class="abs"></a>Alchemy
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Learning" class="abs"></a>Learning
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Travel1" class="abs"></a>Travel1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Travel2" class="abs"></a>Travel2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Travel3" class="abs"></a>Travel3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.HireOrDismiss" class="abs"></a>HireOrDismiss
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.MoreInformation" class="abs"></a>MoreInformation
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.TeachSkill" class="abs"></a>TeachSkill
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.DoTeachSkill" class="abs"></a>DoTeachSkill
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.JoinGuild" class="abs"></a>JoinGuild
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.DoJoinGuild" class="abs"></a>DoJoinGuild
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BountyHuntNPC" class="abs"></a>BountyHuntNPC
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.SeerILostIt" class="abs"></a>SeerILostIt
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArenaPage" class="abs"></a>ArenaPage
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArenaSquire" class="abs"></a>ArenaSquire
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArenaKight" class="abs"></a>ArenaKight
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArenaLord" class="abs"></a>ArenaLord
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArenaMenu" class="abs"></a>ArenaMenu
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArenaGoBack" class="abs"></a>ArenaGoBack
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArenaWin" class="abs"></a>ArenaWin
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArenaAlreadyWon" class="abs"></a>ArenaAlreadyWon
</td><td class="def-right">
 NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.DisplayInventory" class="abs"></a>DisplayInventory <i class="def-const">= 94</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.LearnSkills" class="abs"></a>LearnSkills <i class="def-const">= 96</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BountyHunt" class="abs"></a>BountyHunt <i class="def-const">= 99</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.PayFine" class="abs"></a>PayFine <i class="def-const">= 100</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArcomageMenu" class="abs"></a>ArcomageMenu <i class="def-const">= 101</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArcomageRules" class="abs"></a>ArcomageRules <i class="def-const">= 102</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArcomageConditions" class="abs"></a>ArcomageConditions <i class="def-const">= 103</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ArcomagePlay" class="abs"></a>ArcomagePlay <i class="def-const">= 104</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.Travel4" class="abs"></a>Travel4 <i class="def-const">= 109</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpellsFire" class="abs"></a>BuySpellsFire <i class="def-const">= 110</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpellsAir" class="abs"></a>BuySpellsAir <i class="def-const">= 111</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpellsWater" class="abs"></a>BuySpellsWater <i class="def-const">= 112</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpellsEarth" class="abs"></a>BuySpellsEarth <i class="def-const">= 113</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpellsSpirit" class="abs"></a>BuySpellsSpirit <i class="def-const">= 114</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpellsMind" class="abs"></a>BuySpellsMind <i class="def-const">= 115</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpellsBody" class="abs"></a>BuySpellsBody <i class="def-const">= 116</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpellsLight" class="abs"></a>BuySpellsLight <i class="def-const">= 117</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BuySpellsDark" class="abs"></a>BuySpellsDark <i class="def-const">= 118</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.JoinRoster" class="abs"></a>JoinRoster <i class="def-const">= 119</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  Yes item in the join menu
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.JoinRosterNo" class="abs"></a>JoinRosterNo <i class="def-const">= 120</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.SeerPilgrimage" class="abs"></a>SeerPilgrimage <i class="def-const">= 88</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  NPC command
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.StreetNPC" class="abs"></a>StreetNPC <i class="def-const">= 200</i>
</td><td class="def-right">
 Not used by the game, only by MMExt for <a href="#events.PopulateNPCDialog">PopulateNPCDialog</a> event.
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.LackFame" class="abs"></a>LackFame <i class="def-const">= 201</i>
</td><td class="def-right">
 Not used by the game, only by MMExt for <a href="#events.PopulateNPCDialog">PopulateNPCDialog</a> event.
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.BegThreatBribe" class="abs"></a>BegThreatBribe <i class="def-const">= 202</i>
</td><td class="def-right">
 Not used by the game, only by MMExt for <a href="#events.PopulateNPCDialog">PopulateNPCDialog</a> event.
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseScreens.ThreatBribe" class="abs"></a>ThreatBribe <i class="def-const">= 203</i>
</td><td class="def-right">
 Not used by the game, only by MMExt for <a href="#events.PopulateNPCDialog">PopulateNPCDialog</a> event.
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.HouseType"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.HouseType</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.HouseType.Weapon%20Shop" class="abs"></a>Weapon Shop <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Armor%20Shop" class="abs"></a>Armor Shop <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Magic%20Shop" class="abs"></a>Magic Shop <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Alchemist" class="abs"></a>Alchemist <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.General%20Store" class="abs"></a>General Store <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Fire%20Guild" class="abs"></a>Fire Guild <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Air%20Guild" class="abs"></a>Air Guild <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Water%20Guild" class="abs"></a>Water Guild <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Earth%20Guild" class="abs"></a>Earth Guild <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Spirit%20Guild" class="abs"></a>Spirit Guild <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Mind%20Guild" class="abs"></a>Mind Guild <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Body%20Guild" class="abs"></a>Body Guild <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Light%20Guild" class="abs"></a>Light Guild <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Dark%20Guild" class="abs"></a>Dark Guild <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Elemental%20Guild" class="abs"></a>Elemental Guild <i class="def-const">= 14</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Element%20Guild" class="abs"></a>Element Guild <i class="def-const">= 14</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Self%20Guild" class="abs"></a>Self Guild <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Thieves%20Guild" class="abs"></a>Thieves Guild <i class="def-const">= 17</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Merc%20Guild" class="abs"></a>Merc Guild <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Town%20Hall" class="abs"></a>Town Hall
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Throne" class="abs"></a>Throne <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Tavern" class="abs"></a>Tavern <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Bank" class="abs"></a>Bank <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Temple" class="abs"></a>Temple <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Castle%20Entrance" class="abs"></a>Castle Entrance <i class="def-const">= 24</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Dungeon%20Ent" class="abs"></a>Dungeon Ent <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Seer" class="abs"></a>Seer <i class="def-const">= 26</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Stables" class="abs"></a>Stables <i class="def-const">= 27</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Boats" class="abs"></a>Boats <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.House" class="abs"></a>House <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Training" class="abs"></a>Training <i class="def-const">= 30</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Jail" class="abs"></a>Jail <i class="def-const">= 31</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.Circus" class="abs"></a>Circus <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.HouseType.The%20Adventurer's%20Inn" class="abs"></a>The Adventurer's Inn <i class="def-const">= 35</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.ItemSlot"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.ItemSlot</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.ItemSlot.ExtraHand" class="abs"></a>ExtraHand <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.MainHand" class="abs"></a>MainHand <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Bow" class="abs"></a>Bow <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Armor" class="abs"></a>Armor <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Helm" class="abs"></a>Helm <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Belt" class="abs"></a>Belt <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Cloak" class="abs"></a>Cloak <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Gountlets" class="abs"></a>Gountlets <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Boots" class="abs"></a>Boots <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Amulet" class="abs"></a>Amulet <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Ring1" class="abs"></a>Ring1 <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Ring2" class="abs"></a>Ring2 <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Ring3" class="abs"></a>Ring3 <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Ring4" class="abs"></a>Ring4 <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Ring5" class="abs"></a>Ring5 <i class="def-const">= 14</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemSlot.Ring6" class="abs"></a>Ring6 <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.ItemType"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.ItemType</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.ItemType.Any" class="abs"></a>Any <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Weapon" class="abs"></a>Weapon <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Weapon2H" class="abs"></a>Weapon2H <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Missile" class="abs"></a>Missile <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Armor" class="abs"></a>Armor <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Shield" class="abs"></a>Shield <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Helm" class="abs"></a>Helm <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Belt" class="abs"></a>Belt <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Cloak" class="abs"></a>Cloak <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Gountlets" class="abs"></a>Gountlets <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Boots" class="abs"></a>Boots <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Ring" class="abs"></a>Ring <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Amulet" class="abs"></a>Amulet <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Wand" class="abs"></a>Wand <i class="def-const">= 13</i>
</td><td class="def-right">
 weaponw
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Reagent" class="abs"></a>Reagent <i class="def-const">= 14</i>
</td><td class="def-right">
 herb
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Potion" class="abs"></a>Potion <i class="def-const">= 15</i>
</td><td class="def-right">
 bottle
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Scroll" class="abs"></a>Scroll <i class="def-const">= 16</i>
</td><td class="def-right">
 sscroll
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Book" class="abs"></a>Book <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.MScroll" class="abs"></a>MScroll <i class="def-const">= 18</i>
</td><td class="def-right">
 always creates item 001
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Gold" class="abs"></a>Gold <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Weapon_" class="abs"></a>Weapon_ <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Armor_" class="abs"></a>Armor_ <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Misc" class="abs"></a>Misc <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Sword" class="abs"></a>Sword <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Dagger" class="abs"></a>Dagger <i class="def-const">= 24</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Axe" class="abs"></a>Axe <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Spear" class="abs"></a>Spear <i class="def-const">= 26</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Bow" class="abs"></a>Bow <i class="def-const">= 27</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Mace" class="abs"></a>Mace <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Club" class="abs"></a>Club <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Staff" class="abs"></a>Staff <i class="def-const">= 30</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Leather" class="abs"></a>Leather <i class="def-const">= 31</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Chain" class="abs"></a>Chain <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Plate" class="abs"></a>Plate <i class="def-const">= 33</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Shield_" class="abs"></a>Shield_ <i class="def-const">= 34</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Helm_" class="abs"></a>Helm_ <i class="def-const">= 35</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Belt_" class="abs"></a>Belt_ <i class="def-const">= 36</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Cloak_" class="abs"></a>Cloak_ <i class="def-const">= 37</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Gountlets_" class="abs"></a>Gountlets_ <i class="def-const">= 38</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Boots_" class="abs"></a>Boots_ <i class="def-const">= 39</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Ring_" class="abs"></a>Ring_ <i class="def-const">= 40</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Amulet_" class="abs"></a>Amulet_ <i class="def-const">= 41</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Wand_" class="abs"></a>Wand_ <i class="def-const">= 42</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Scroll_" class="abs"></a>Scroll_ <i class="def-const">= 43</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Potion_" class="abs"></a>Potion_ <i class="def-const">= 44</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Reagent_" class="abs"></a>Reagent_ <i class="def-const">= 45</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Gems" class="abs"></a>Gems <i class="def-const">= 46</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Gems2" class="abs"></a>Gems2 <i class="def-const">= 47</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ItemType.Gold_" class="abs"></a>Gold_ <i class="def-const">= 50</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Keys"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Keys</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Keys.LBUTTON" class="abs"></a>LBUTTON <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RBUTTON" class="abs"></a>RBUTTON <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CANCEL" class="abs"></a>CANCEL <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MBUTTON" class="abs"></a>MBUTTON <i class="def-const">= 4</i>
</td><td class="def-right">
 NOT contiguous with L &amp; RBUTTON
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.XBUTTON1" class="abs"></a>XBUTTON1 <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.XBUTTON2" class="abs"></a>XBUTTON2 <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BACK" class="abs"></a>BACK <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BACKSPACE" class="abs"></a>BACKSPACE <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.TAB" class="abs"></a>TAB <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CLEAR" class="abs"></a>CLEAR <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ENTER" class="abs"></a>ENTER <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RETURN" class="abs"></a>RETURN <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SHIFT" class="abs"></a>SHIFT <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CONTROL" class="abs"></a>CONTROL <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CTRL" class="abs"></a>CTRL <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ALT" class="abs"></a>ALT <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MENU" class="abs"></a>MENU <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PAUSE" class="abs"></a>PAUSE <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CAPITAL" class="abs"></a>CAPITAL <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CAPSLOCK" class="abs"></a>CAPSLOCK <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.HANGUL" class="abs"></a>HANGUL <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.KANA" class="abs"></a>KANA <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.JUNJA" class="abs"></a>JUNJA <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.FINAL" class="abs"></a>FINAL <i class="def-const">= 24</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.HANJA" class="abs"></a>HANJA <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.KANJI" class="abs"></a>KANJI <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ESCAPE" class="abs"></a>ESCAPE <i class="def-const">= 27</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CONVERT" class="abs"></a>CONVERT <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NONCONVERT" class="abs"></a>NONCONVERT <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ACCEPT" class="abs"></a>ACCEPT <i class="def-const">= 30</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MODECHANGE" class="abs"></a>MODECHANGE <i class="def-const">= 31</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SPACE" class="abs"></a>SPACE <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PGUP" class="abs"></a>PGUP <i class="def-const">= 33</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PRIOR" class="abs"></a>PRIOR <i class="def-const">= 33</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NEXT" class="abs"></a>NEXT <i class="def-const">= 34</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PGDN" class="abs"></a>PGDN <i class="def-const">= 34</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.END" class="abs"></a>END <i class="def-const">= 35</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.HOME" class="abs"></a>HOME <i class="def-const">= 36</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LEFT" class="abs"></a>LEFT <i class="def-const">= 37</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.UP" class="abs"></a>UP <i class="def-const">= 38</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RIGHT" class="abs"></a>RIGHT <i class="def-const">= 39</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.DOWN" class="abs"></a>DOWN <i class="def-const">= 40</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SELECT" class="abs"></a>SELECT <i class="def-const">= 41</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PRINT" class="abs"></a>PRINT <i class="def-const">= 42</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.EXECUTE" class="abs"></a>EXECUTE <i class="def-const">= 43</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SNAPSHOT" class="abs"></a>SNAPSHOT <i class="def-const">= 44</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.INSERT" class="abs"></a>INSERT <i class="def-const">= 45</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.DELETE" class="abs"></a>DELETE <i class="def-const">= 46</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.HELP" class="abs"></a>HELP <i class="def-const">= 47</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.0" class="abs"></a>0 <i class="def-const">= 48</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.1" class="abs"></a>1 <i class="def-const">= 49</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.2" class="abs"></a>2 <i class="def-const">= 50</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.3" class="abs"></a>3 <i class="def-const">= 51</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.4" class="abs"></a>4 <i class="def-const">= 52</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.5" class="abs"></a>5 <i class="def-const">= 53</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.6" class="abs"></a>6 <i class="def-const">= 54</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.7" class="abs"></a>7 <i class="def-const">= 55</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.8" class="abs"></a>8 <i class="def-const">= 56</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.9" class="abs"></a>9 <i class="def-const">= 57</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.A" class="abs"></a>A <i class="def-const">= 65</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.B" class="abs"></a>B <i class="def-const">= 66</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.C" class="abs"></a>C <i class="def-const">= 67</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.D" class="abs"></a>D <i class="def-const">= 68</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.E" class="abs"></a>E <i class="def-const">= 69</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F" class="abs"></a>F <i class="def-const">= 70</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.G" class="abs"></a>G <i class="def-const">= 71</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.H" class="abs"></a>H <i class="def-const">= 72</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.I" class="abs"></a>I <i class="def-const">= 73</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.J" class="abs"></a>J <i class="def-const">= 74</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.K" class="abs"></a>K <i class="def-const">= 75</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.L" class="abs"></a>L <i class="def-const">= 76</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.M" class="abs"></a>M <i class="def-const">= 77</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.N" class="abs"></a>N <i class="def-const">= 78</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.O" class="abs"></a>O <i class="def-const">= 79</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.P" class="abs"></a>P <i class="def-const">= 80</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.Q" class="abs"></a>Q <i class="def-const">= 81</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.R" class="abs"></a>R <i class="def-const">= 82</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.S" class="abs"></a>S <i class="def-const">= 83</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.T" class="abs"></a>T <i class="def-const">= 84</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.U" class="abs"></a>U <i class="def-const">= 85</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.V" class="abs"></a>V <i class="def-const">= 86</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.W" class="abs"></a>W <i class="def-const">= 87</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.X" class="abs"></a>X <i class="def-const">= 88</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.Y" class="abs"></a>Y <i class="def-const">= 89</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.Z" class="abs"></a>Z <i class="def-const">= 90</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LWIN" class="abs"></a>LWIN <i class="def-const">= 91</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RWIN" class="abs"></a>RWIN <i class="def-const">= 92</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.APPS" class="abs"></a>APPS <i class="def-const">= 93</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SLEEP" class="abs"></a>SLEEP <i class="def-const">= 95</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD0" class="abs"></a>NUMPAD0 <i class="def-const">= 96</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD1" class="abs"></a>NUMPAD1 <i class="def-const">= 97</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD2" class="abs"></a>NUMPAD2 <i class="def-const">= 98</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD3" class="abs"></a>NUMPAD3 <i class="def-const">= 99</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD4" class="abs"></a>NUMPAD4 <i class="def-const">= 100</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD5" class="abs"></a>NUMPAD5 <i class="def-const">= 101</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD6" class="abs"></a>NUMPAD6 <i class="def-const">= 102</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD7" class="abs"></a>NUMPAD7 <i class="def-const">= 103</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD8" class="abs"></a>NUMPAD8 <i class="def-const">= 104</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMPAD9" class="abs"></a>NUMPAD9 <i class="def-const">= 105</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MULTIPLY" class="abs"></a>MULTIPLY <i class="def-const">= 106</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ADD" class="abs"></a>ADD <i class="def-const">= 107</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SEPARATOR" class="abs"></a>SEPARATOR <i class="def-const">= 108</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SUBTRACT" class="abs"></a>SUBTRACT <i class="def-const">= 109</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.DECIMAL" class="abs"></a>DECIMAL <i class="def-const">= 110</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.DIVIDE" class="abs"></a>DIVIDE <i class="def-const">= 111</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F1" class="abs"></a>F1 <i class="def-const">= 112</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F2" class="abs"></a>F2 <i class="def-const">= 113</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F3" class="abs"></a>F3 <i class="def-const">= 114</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F4" class="abs"></a>F4 <i class="def-const">= 115</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F5" class="abs"></a>F5 <i class="def-const">= 116</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F6" class="abs"></a>F6 <i class="def-const">= 117</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F7" class="abs"></a>F7 <i class="def-const">= 118</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F8" class="abs"></a>F8 <i class="def-const">= 119</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F9" class="abs"></a>F9 <i class="def-const">= 120</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F10" class="abs"></a>F10 <i class="def-const">= 121</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F11" class="abs"></a>F11 <i class="def-const">= 122</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F12" class="abs"></a>F12 <i class="def-const">= 123</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F13" class="abs"></a>F13 <i class="def-const">= 124</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F14" class="abs"></a>F14 <i class="def-const">= 125</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F15" class="abs"></a>F15 <i class="def-const">= 126</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F16" class="abs"></a>F16 <i class="def-const">= 127</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F17" class="abs"></a>F17 <i class="def-const">= 128</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F18" class="abs"></a>F18 <i class="def-const">= 129</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F19" class="abs"></a>F19 <i class="def-const">= 130</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F20" class="abs"></a>F20 <i class="def-const">= 131</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F21" class="abs"></a>F21 <i class="def-const">= 132</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F22" class="abs"></a>F22 <i class="def-const">= 133</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F23" class="abs"></a>F23 <i class="def-const">= 134</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.F24" class="abs"></a>F24 <i class="def-const">= 135</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NUMLOCK" class="abs"></a>NUMLOCK <i class="def-const">= 144</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.SCROLL" class="abs"></a>SCROLL <i class="def-const">= 145</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LSHIFT" class="abs"></a>LSHIFT <i class="def-const">= 160</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RSHIFT" class="abs"></a>RSHIFT <i class="def-const">= 161</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LCONTROL" class="abs"></a>LCONTROL <i class="def-const">= 162</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RCONTROL" class="abs"></a>RCONTROL <i class="def-const">= 163</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LMENU" class="abs"></a>LMENU <i class="def-const">= 164</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.RMENU" class="abs"></a>RMENU <i class="def-const">= 165</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_BACK" class="abs"></a>BROWSER_BACK <i class="def-const">= 166</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_FORWARD" class="abs"></a>BROWSER_FORWARD <i class="def-const">= 167</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_REFRESH" class="abs"></a>BROWSER_REFRESH <i class="def-const">= 168</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_STOP" class="abs"></a>BROWSER_STOP <i class="def-const">= 169</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_SEARCH" class="abs"></a>BROWSER_SEARCH <i class="def-const">= 170</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_FAVORITES" class="abs"></a>BROWSER_FAVORITES <i class="def-const">= 171</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.BROWSER_HOME" class="abs"></a>BROWSER_HOME <i class="def-const">= 172</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.VOLUME_MUTE" class="abs"></a>VOLUME_MUTE <i class="def-const">= 173</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.VOLUME_DOWN" class="abs"></a>VOLUME_DOWN <i class="def-const">= 174</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.VOLUME_UP" class="abs"></a>VOLUME_UP <i class="def-const">= 175</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MEDIA_NEXT_TRACK" class="abs"></a>MEDIA_NEXT_TRACK <i class="def-const">= 176</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MEDIA_PREV_TRACK" class="abs"></a>MEDIA_PREV_TRACK <i class="def-const">= 177</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MEDIA_STOP" class="abs"></a>MEDIA_STOP <i class="def-const">= 178</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.MEDIA_PLAY_PAUSE" class="abs"></a>MEDIA_PLAY_PAUSE <i class="def-const">= 179</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LAUNCH_MAIL" class="abs"></a>LAUNCH_MAIL <i class="def-const">= 180</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LAUNCH_MEDIA_SELECT" class="abs"></a>LAUNCH_MEDIA_SELECT <i class="def-const">= 181</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LAUNCH_APP1" class="abs"></a>LAUNCH_APP1 <i class="def-const">= 182</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.LAUNCH_APP2" class="abs"></a>LAUNCH_APP2 <i class="def-const">= 183</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_1" class="abs"></a>OEM_1 <i class="def-const">= 186</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_PLUS" class="abs"></a>OEM_PLUS <i class="def-const">= 187</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_COMMA" class="abs"></a>OEM_COMMA <i class="def-const">= 188</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_MINUS" class="abs"></a>OEM_MINUS <i class="def-const">= 189</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_PERIOD" class="abs"></a>OEM_PERIOD <i class="def-const">= 190</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_2" class="abs"></a>OEM_2 <i class="def-const">= 191</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_3" class="abs"></a>OEM_3 <i class="def-const">= 192</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_4" class="abs"></a>OEM_4 <i class="def-const">= 219</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_5" class="abs"></a>OEM_5 <i class="def-const">= 220</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_6" class="abs"></a>OEM_6 <i class="def-const">= 221</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_7" class="abs"></a>OEM_7 <i class="def-const">= 222</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_8" class="abs"></a>OEM_8 <i class="def-const">= 223</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_102" class="abs"></a>OEM_102 <i class="def-const">= 226</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PROCESSKEY" class="abs"></a>PROCESSKEY <i class="def-const">= 229</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PACKET" class="abs"></a>PACKET <i class="def-const">= 231</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ATTN" class="abs"></a>ATTN <i class="def-const">= 246</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.CRSEL" class="abs"></a>CRSEL <i class="def-const">= 247</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.EXSEL" class="abs"></a>EXSEL <i class="def-const">= 248</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.EREOF" class="abs"></a>EREOF <i class="def-const">= 249</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PLAY" class="abs"></a>PLAY <i class="def-const">= 250</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.ZOOM" class="abs"></a>ZOOM <i class="def-const">= 251</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.NONAME" class="abs"></a>NONAME <i class="def-const">= 252</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.PA1" class="abs"></a>PA1 <i class="def-const">= 253</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Keys.OEM_CLEAR" class="abs"></a>OEM_CLEAR <i class="def-const">= 254</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.MonsterAction"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.MonsterAction</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.MonsterAction.Attack1" class="abs"></a>Attack1 <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterAction.Attack2" class="abs"></a>Attack2 <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterAction.Spell1" class="abs"></a>Spell1 <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterAction.Spell2" class="abs"></a>Spell2 <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.MonsterBits"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.MonsterBits</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.MonsterBits.Active" class="abs"></a>Active <i class="def-const">= 0x400</i>
</td><td class="def-right">
 inside the active radius
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.ShowOnMap" class="abs"></a>ShowOnMap <i class="def-const">= 0x8000</i>
</td><td class="def-right">
 monster was once seen by party
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.Invisible" class="abs"></a>Invisible <i class="def-const">= 0x10000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.NoFlee" class="abs"></a>NoFlee <i class="def-const">= 0x20000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.Hostile" class="abs"></a>Hostile <i class="def-const">= 0x80000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.OnAlertMap" class="abs"></a>OnAlertMap <i class="def-const">= 0x100000</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.TreasureGenerated" class="abs"></a>TreasureGenerated <i class="def-const">= 0x800000</i>
</td><td class="def-right">
 treasure is in <b class="def-param">Items</b>[0] and <b class="def-param">Items</b>[1], gold is in <b class="def-param">Items</b>[3]
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.ShowAsHostile" class="abs"></a>ShowAsHostile <i class="def-const">= 0x1000000</i>
</td><td class="def-right">
 show as hostile on map
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBits.IsObeliskChest" class="abs"></a>IsObeliskChest <i class="def-const">= 0x2000000</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.MonsterBonus"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.MonsterBonus</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.MonsterBonus.Curse" class="abs"></a>Curse <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Weak" class="abs"></a>Weak <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Asleep" class="abs"></a>Asleep <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Drunk" class="abs"></a>Drunk <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Insane" class="abs"></a>Insane <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Poison1" class="abs"></a>Poison1 <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Poison2" class="abs"></a>Poison2 <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Poison3" class="abs"></a>Poison3 <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Disease1" class="abs"></a>Disease1 <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Disease2" class="abs"></a>Disease2 <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Disease3" class="abs"></a>Disease3 <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Paralyze" class="abs"></a>Paralyze <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Uncon" class="abs"></a>Uncon <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Dead" class="abs"></a>Dead <i class="def-const">= 14</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Stone" class="abs"></a>Stone <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Errad" class="abs"></a>Errad <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Brkitem" class="abs"></a>Brkitem <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Brkarmor" class="abs"></a>Brkarmor <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Brkweapon" class="abs"></a>Brkweapon <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Steal" class="abs"></a>Steal <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Age" class="abs"></a>Age <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Drainsp" class="abs"></a>Drainsp <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBonus.Afraid" class="abs"></a>Afraid <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.MonsterBuff"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.MonsterBuff</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.MonsterBuff.Null" class="abs"></a>Null <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Charm" class="abs"></a>Charm <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Summoned" class="abs"></a>Summoned <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Curse" class="abs"></a>Curse <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.ShrinkingRay" class="abs"></a>ShrinkingRay <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Fear" class="abs"></a>Fear <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Stoned" class="abs"></a>Stoned <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Paralyze" class="abs"></a>Paralyze <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Slow" class="abs"></a>Slow <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.ArmorHalved" class="abs"></a>ArmorHalved
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Berserk" class="abs"></a>Berserk
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.MassDistortion" class="abs"></a>MassDistortion
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Fate" class="abs"></a>Fate
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Enslave" class="abs"></a>Enslave
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.DayOfProtection" class="abs"></a>DayOfProtection
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.HourOfPower" class="abs"></a>HourOfPower
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Shield" class="abs"></a>Shield
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.StoneSkin" class="abs"></a>StoneSkin
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Bless" class="abs"></a>Bless
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Heroism" class="abs"></a>Heroism
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Haste" class="abs"></a>Haste
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.PainReflection" class="abs"></a>PainReflection
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Hammerhands" class="abs"></a>Hammerhands
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.MeleeOnly" class="abs"></a>MeleeOnly <i class="def-const">= 22</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  (part of Blind and Dark Grasp)
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.DamageHalved" class="abs"></a>DamageHalved <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Wander" class="abs"></a>Wander <i class="def-const">= 24</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  monster wanders aimlessly (part of Blind)
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Mistform" class="abs"></a>Mistform <i class="def-const">= 25</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterBuff.Feeblemind" class="abs"></a>Feeblemind <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.MonsterKind"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.MonsterKind</h3>
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.MonsterKind.Undead" class="abs"></a>Undead <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Demon" class="abs"></a>Demon <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Dragon" class="abs"></a>Dragon
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Elf" class="abs"></a>Elf <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Swimmer" class="abs"></a>Swimmer
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Immobile" class="abs"></a>Immobile
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Peasant" class="abs"></a>Peasant <i class="def-const">= 5</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Titan" class="abs"></a>Titan <i class="def-const">= 7</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.NoArena" class="abs"></a>NoArena
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Ogre" class="abs"></a>Ogre <i class="def-const">= 7</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterKind.Elemental" class="abs"></a>Elemental <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.MonsterPref"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.MonsterPref</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.MonsterPref.Necro" class="abs"></a>Necro <i class="def-const">= 0x1</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Knight" class="abs"></a>Knight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Paladin" class="abs"></a>Paladin <i class="def-const">= 0x2</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Archer" class="abs"></a>Archer <i class="def-const">= 0x4</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Druid" class="abs"></a>Druid <i class="def-const">= 0x8</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Cleric" class="abs"></a>Cleric
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Troll" class="abs"></a>Troll <i class="def-const">= 0x8</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Minotaur" class="abs"></a>Minotaur <i class="def-const">= 0x10</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.DarkElf" class="abs"></a>DarkElf <i class="def-const">= 0x20</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Vampire" class="abs"></a>Vampire <i class="def-const">= 0x40</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Dragon" class="abs"></a>Dragon <i class="def-const">= 0x80</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Sorcerer" class="abs"></a>Sorcerer <i class="def-const">= 0x20</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Ranger" class="abs"></a>Ranger <i class="def-const">= 0x40</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Thief" class="abs"></a>Thief <i class="def-const">= 0x80</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Monk" class="abs"></a>Monk <i class="def-const">= 0x100</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Male" class="abs"></a>Male
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Female" class="abs"></a>Female
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Human" class="abs"></a>Human <i class="def-const">= 0x800</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Elf" class="abs"></a>Elf <i class="def-const">= 0x1000</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Dwarf" class="abs"></a>Dwarf <i class="def-const">= 0x2000</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.MonsterPref.Goblin" class="abs"></a>Goblin <i class="def-const">= 0x4000</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.NPCProfession"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.NPCProfession</h3>
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.NPCProfession.Smith" class="abs"></a>Smith <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Armorer" class="abs"></a>Armorer <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Alchemist" class="abs"></a>Alchemist <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Scholar" class="abs"></a>Scholar <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Guide" class="abs"></a>Guide <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Tracker" class="abs"></a>Tracker <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Pathfinder" class="abs"></a>Pathfinder <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Sailor" class="abs"></a>Sailor <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Navigator" class="abs"></a>Navigator <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Healer" class="abs"></a>Healer <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.ExpertHealer" class="abs"></a>ExpertHealer <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.MasterHealer" class="abs"></a>MasterHealer <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Teacher" class="abs"></a>Teacher <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Instructor" class="abs"></a>Instructor <i class="def-const">= 14</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.ArmsMaster" class="abs"></a>ArmsMaster <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.WeaponsMaster" class="abs"></a>WeaponsMaster <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Apprentice" class="abs"></a>Apprentice <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Mystic" class="abs"></a>Mystic <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.SpellMaster" class="abs"></a>SpellMaster <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Trader" class="abs"></a>Trader <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Merchant" class="abs"></a>Merchant <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Scout" class="abs"></a>Scout <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Herbalist" class="abs"></a>Herbalist <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Apothecary" class="abs"></a>Apothecary <i class="def-const">= 24</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Counselor" class="abs"></a>Counselor <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Barrister" class="abs"></a>Barrister <i class="def-const">= 24</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Tinker" class="abs"></a>Tinker <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Locksmith" class="abs"></a>Locksmith <i class="def-const">= 26</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Fool" class="abs"></a>Fool <i class="def-const">= 27</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.ChimneySweep" class="abs"></a>ChimneySweep <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Porter" class="abs"></a>Porter <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.QuarterMaster" class="abs"></a>QuarterMaster <i class="def-const">= 30</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Factor" class="abs"></a>Factor <i class="def-const">= 31</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Banker" class="abs"></a>Banker <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Cook" class="abs"></a>Cook <i class="def-const">= 33</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Chef" class="abs"></a>Chef <i class="def-const">= 34</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Horseman" class="abs"></a>Horseman <i class="def-const">= 35</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Bard" class="abs"></a>Bard <i class="def-const">= 36</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Enchanter" class="abs"></a>Enchanter <i class="def-const">= 37</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Cartographer" class="abs"></a>Cartographer <i class="def-const">= 38</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.WindMaster" class="abs"></a>WindMaster <i class="def-const">= 39</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.WaterMaster" class="abs"></a>WaterMaster <i class="def-const">= 40</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.GateMaster" class="abs"></a>GateMaster <i class="def-const">= 41</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Chaplain" class="abs"></a>Chaplain <i class="def-const">= 42</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Acolyte" class="abs"></a>Acolyte
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Piper" class="abs"></a>Piper <i class="def-const">= 43</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Explorer" class="abs"></a>Explorer <i class="def-const">= 44</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Pirate" class="abs"></a>Pirate <i class="def-const">= 45</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Squire" class="abs"></a>Squire <i class="def-const">= 46</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Psychic" class="abs"></a>Psychic <i class="def-const">= 47</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Gypsy" class="abs"></a>Gypsy <i class="def-const">= 48</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Diplomat" class="abs"></a>Diplomat <i class="def-const">= 49</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Negotiator" class="abs"></a>Negotiator <i class="def-const">= 49</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Duper" class="abs"></a>Duper <i class="def-const">= 50</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Burglar" class="abs"></a>Burglar <i class="def-const">= 51</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.FallenWizard" class="abs"></a>FallenWizard <i class="def-const">= 52</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Initiate" class="abs"></a>Initiate <i class="def-const">= 54</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Prelate" class="abs"></a>Prelate <i class="def-const">= 55</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Monk" class="abs"></a>Monk <i class="def-const">= 56</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Sage" class="abs"></a>Sage <i class="def-const">= 57</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Peasant" class="abs"></a>Peasant <i class="def-const">= 52</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Serf" class="abs"></a>Serf <i class="def-const">= 53</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Tailor" class="abs"></a>Tailor <i class="def-const">= 54</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Laborer" class="abs"></a>Laborer <i class="def-const">= 55</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Farmer" class="abs"></a>Farmer <i class="def-const">= 56</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Cooper" class="abs"></a>Cooper <i class="def-const">= 57</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Potter" class="abs"></a>Potter <i class="def-const">= 58</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Weaver" class="abs"></a>Weaver <i class="def-const">= 59</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Cobbler" class="abs"></a>Cobbler <i class="def-const">= 60</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.DitchDigger" class="abs"></a>DitchDigger <i class="def-const">= 61</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Miller" class="abs"></a>Miller <i class="def-const">= 62</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Carpenter" class="abs"></a>Carpenter <i class="def-const">= 63</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.StoneCutter" class="abs"></a>StoneCutter <i class="def-const">= 64</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Jester" class="abs"></a>Jester <i class="def-const">= 65</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Trapper" class="abs"></a>Trapper <i class="def-const">= 66</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Beggar" class="abs"></a>Beggar <i class="def-const">= 67</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Rustler" class="abs"></a>Rustler <i class="def-const">= 68</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Hunter" class="abs"></a>Hunter
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Scribe" class="abs"></a>Scribe <i class="def-const">= 70</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Missionary" class="abs"></a>Missionary <i class="def-const">= 71</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Clerk" class="abs"></a>Clerk <i class="def-const">= 72</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Guard" class="abs"></a>Guard <i class="def-const">= 73</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.FollowerofBaa" class="abs"></a>FollowerofBaa <i class="def-const">= 74</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Noble" class="abs"></a>Noble <i class="def-const">= 75</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Gambler" class="abs"></a>Gambler <i class="def-const">= 76</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.NPCProfession.Child" class="abs"></a>Child <i class="def-const">= 77</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.ObjectRefKind"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.ObjectRefKind</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.ObjectRefKind.Nothing" class="abs"></a>Nothing <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Door" class="abs"></a>Door <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Object" class="abs"></a>Object <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Monster" class="abs"></a>Monster <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Party" class="abs"></a>Party <i class="def-const">= 4</i>
</td><td class="def-right">
 Index is player index in <a href="#structs.GameParty.PlayersArray">Party.PlayersArray</a>
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Sprite" class="abs"></a>Sprite <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Facet" class="abs"></a>Facet <i class="def-const">= 6</i>
</td><td class="def-right">
 Outdoors Index = ModelId*64 + FaceId
</td>
</tr><tr>
<td class="def-left">
<a id="const.ObjectRefKind.Light" class="abs"></a>Light <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.PartyBuff"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.PartyBuff</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.PartyBuff.AirResistance" class="abs"></a>AirResistance <i class="def-const">= 0</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.BodyResistance" class="abs"></a>BodyResistance <i class="def-const">= 1</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.DayOfGods" class="abs"></a>DayOfGods <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.DetectLife" class="abs"></a>DetectLife <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.EarthResistance" class="abs"></a>EarthResistance <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.FireResistance" class="abs"></a>FireResistance
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.ColdResistance" class="abs"></a>ColdResistance <i class="def-const">= 1</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.ElecResistance" class="abs"></a>ElecResistance <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.MagicResistance" class="abs"></a>MagicResistance <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.PoisonResistance" class="abs"></a>PoisonResistance <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.FeatherFall" class="abs"></a>FeatherFall <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.WaterWalk" class="abs"></a>WaterWalk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Fly" class="abs"></a>Fly <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Haste" class="abs"></a>Haste <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Heroism" class="abs"></a>Heroism <i class="def-const">= 9</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Immolation" class="abs"></a>Immolation <i class="def-const">= 10</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Invisibility" class="abs"></a>Invisibility <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.MindResistance" class="abs"></a>MindResistance <i class="def-const">= 12</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.ProtectionFromMagic" class="abs"></a>ProtectionFromMagic <i class="def-const">= 13</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Shield" class="abs"></a>Shield <i class="def-const">= 14</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.Stoneskin" class="abs"></a>Stoneskin <i class="def-const">= 15</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.GuardianAngel" class="abs"></a>GuardianAngel <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.WizardEye" class="abs"></a>WizardEye
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.TorchLight" class="abs"></a>TorchLight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PartyBuff.WaterResistance" class="abs"></a>WaterResistance <i class="def-const">= 17</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.PlayerBuff"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.PlayerBuff</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.PlayerBuff.AirResistance" class="abs"></a>AirResistance <i class="def-const">= 0</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Bless" class="abs"></a>Bless
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.BodyResistance" class="abs"></a>BodyResistance <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.EarthResistance" class="abs"></a>EarthResistance <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Fate" class="abs"></a>Fate <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.FireResistance" class="abs"></a>FireResistance <i class="def-const">= 5</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Hammerhands" class="abs"></a>Hammerhands <i class="def-const">= 6</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Heroism" class="abs"></a>Heroism
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Haste" class="abs"></a>Haste
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.MindResistance" class="abs"></a>MindResistance <i class="def-const">= 9</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.PainReflection" class="abs"></a>PainReflection <i class="def-const">= 10</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Preservation" class="abs"></a>Preservation <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Regeneration" class="abs"></a>Regeneration <i class="def-const">= 12</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Shield" class="abs"></a>Shield
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Stoneskin" class="abs"></a>Stoneskin
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempLuck" class="abs"></a>TempLuck
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempIntellect" class="abs"></a>TempIntellect
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempPersonality" class="abs"></a>TempPersonality
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempAccuracy" class="abs"></a>TempAccuracy
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempEndurance" class="abs"></a>TempEndurance <i class="def-const">= 16</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempSpeed" class="abs"></a>TempSpeed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempMight" class="abs"></a>TempMight
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.WaterResistance" class="abs"></a>WaterResistance <i class="def-const">= 22</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.WaterBreathing" class="abs"></a>WaterBreathing <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Glamour" class="abs"></a>Glamour <i class="def-const">= 24</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Levitate" class="abs"></a>Levitate <i class="def-const">= 25</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.Misform" class="abs"></a>Misform <i class="def-const">= 26</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.PlayerBuff.TempEndurancy" class="abs"></a>TempEndurancy <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Race"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Race</h3>
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  <br><br>
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Race.Human" class="abs"></a>Human <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Race.Elf" class="abs"></a>Elf <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Race.Goblin" class="abs"></a>Goblin <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Race.Dwarf" class="abs"></a>Dwarf <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Screens"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Screens</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Screens.Game" class="abs"></a>Game <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Menu" class="abs"></a>Menu <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Controls" class="abs"></a>Controls <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Info" class="abs"></a>Info <i class="def-const">= 3</i>
</td><td class="def-right">
 quests, map, autonotes
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.NPC" class="abs"></a>NPC <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Rest" class="abs"></a>Rest <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Query" class="abs"></a>Query <i class="def-const">= 6</i>
</td><td class="def-right">
 like with hotkeys in Chinese debug MM6
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Inventory" class="abs"></a>Inventory <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.SpellBook" class="abs"></a>SpellBook <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.NewGameBreefing" class="abs"></a>NewGameBreefing <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.Chest" class="abs"></a>Chest <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.SaveGame" class="abs"></a>SaveGame <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.LoadGame" class="abs"></a>LoadGame <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.House" class="abs"></a>House <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.InventoryInShop" class="abs"></a>InventoryInShop <i class="def-const">= 14</i>
</td><td class="def-right">
 double clicking a character in any Buy dialog in MM6 or in Buy Standard in MM7
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.InventoryInChest" class="abs"></a>InventoryInChest <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.MainManu" class="abs"></a>MainManu <i class="def-const">= 16</i>
</td><td class="def-right">
 or movie
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.WalkToMap" class="abs"></a>WalkToMap <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.MapEntrance" class="abs"></a>MapEntrance <i class="def-const">= 18</i>
</td><td class="def-right">
 or <a href="#Question">Question</a> screen
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.SimpleMessage" class="abs"></a>SimpleMessage <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.SelectTarget" class="abs"></a>SelectTarget <i class="def-const">= 20</i>
</td><td class="def-right">
 Heal and other such spells in MM8
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.CreateParty" class="abs"></a>CreateParty <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.EscMessage" class="abs"></a>EscMessage <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.ItemSpell" class="abs"></a>ItemSpell <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.KeyConfig" class="abs"></a>KeyConfig <i class="def-const">= 26</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.VideoOptions" class="abs"></a>VideoOptions <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.AdventurersInn" class="abs"></a>AdventurersInn <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.ItemSpellMM6" class="abs"></a>ItemSpellMM6 <i class="def-const">= 103</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Screens.QuickReference" class="abs"></a>QuickReference <i class="def-const">= 104</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Season"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Season</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Season.Automn" class="abs"></a>Automn <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Season.Summer" class="abs"></a>Summer <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Season.Fall" class="abs"></a>Fall <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Season.Winter" class="abs"></a>Winter <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Skills"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Skills</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Skills.Staff" class="abs"></a>Staff <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Sword" class="abs"></a>Sword <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Dagger" class="abs"></a>Dagger <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Axe" class="abs"></a>Axe <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Spear" class="abs"></a>Spear <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Bow" class="abs"></a>Bow <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Mace" class="abs"></a>Mace <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Blaster" class="abs"></a>Blaster <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Shield" class="abs"></a>Shield <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Leather" class="abs"></a>Leather <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Chain" class="abs"></a>Chain <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Plate" class="abs"></a>Plate <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Fire" class="abs"></a>Fire <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Air" class="abs"></a>Air <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Water" class="abs"></a>Water <i class="def-const">= 14</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Earth" class="abs"></a>Earth <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Spirit" class="abs"></a>Spirit <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Mind" class="abs"></a>Mind <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Body" class="abs"></a>Body <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Light" class="abs"></a>Light <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Dark" class="abs"></a>Dark <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.DarkElfAbility" class="abs"></a>DarkElfAbility <i class="def-const">= 21</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.VampireAbility" class="abs"></a>VampireAbility <i class="def-const">= 22</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.DragonAbility" class="abs"></a>DragonAbility <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.IdentifyItem" class="abs"></a>IdentifyItem
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Merchant" class="abs"></a>Merchant
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Repair" class="abs"></a>Repair
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Bodybuilding" class="abs"></a>Bodybuilding
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Meditation" class="abs"></a>Meditation
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Perception" class="abs"></a>Perception
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Regeneration" class="abs"></a>Regeneration <i class="def-const">= 30</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Diplomacy" class="abs"></a>Diplomacy <i class="def-const">= 27</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Thievery" class="abs"></a>Thievery <i class="def-const">= 28</i>
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.DisarmTraps" class="abs"></a>DisarmTraps
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Dodging" class="abs"></a>Dodging
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Unarmed" class="abs"></a>Unarmed
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.IdentifyMonster" class="abs"></a>IdentifyMonster
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Armsmaster" class="abs"></a>Armsmaster
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Stealing" class="abs"></a>Stealing
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Alchemy" class="abs"></a>Alchemy
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Skills.Learning" class="abs"></a>Learning
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Spells"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Spells</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Spells.TorchLight" class="abs"></a>TorchLight <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.FlameArrow" class="abs"></a>FlameArrow <i class="def-const">= 2</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.ProtectionFromFire" class="abs"></a>ProtectionFromFire <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.FireBolt" class="abs"></a>FireBolt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.FireResistance" class="abs"></a>FireResistance <i class="def-const">= 3</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.FireAura" class="abs"></a>FireAura <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Haste" class="abs"></a>Haste <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Fireball" class="abs"></a>Fireball <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.FireSpike" class="abs"></a>FireSpike <i class="def-const">= 7</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Immolation" class="abs"></a>Immolation <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.RingOfFire" class="abs"></a>RingOfFire <i class="def-const">= 7</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.FireBlast" class="abs"></a>FireBlast <i class="def-const">= 8</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.MeteorShower" class="abs"></a>MeteorShower <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Inferno" class="abs"></a>Inferno <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Incinerate" class="abs"></a>Incinerate <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.WizardEye" class="abs"></a>WizardEye <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.StaticCharge" class="abs"></a>StaticCharge <i class="def-const">= 13</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.ProtectionFromElectricity" class="abs"></a>ProtectionFromElectricity <i class="def-const">= 14</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Sparks" class="abs"></a>Sparks <i class="def-const">= 15</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.FeatherFall" class="abs"></a>FeatherFall
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.AirResistance" class="abs"></a>AirResistance <i class="def-const">= 14</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Shield" class="abs"></a>Shield <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.LightningBolt" class="abs"></a>LightningBolt <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Jump" class="abs"></a>Jump
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Invisibility" class="abs"></a>Invisibility <i class="def-const">= 19</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Implosion" class="abs"></a>Implosion <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Fly" class="abs"></a>Fly <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Starburst" class="abs"></a>Starburst <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Awaken" class="abs"></a>Awaken <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.ColdBeam" class="abs"></a>ColdBeam <i class="def-const">= 24</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.ProtectionFromCold" class="abs"></a>ProtectionFromCold <i class="def-const">= 25</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.PoisonSpray" class="abs"></a>PoisonSpray
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.WaterResistance" class="abs"></a>WaterResistance <i class="def-const">= 25</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.WaterWalk" class="abs"></a>WaterWalk <i class="def-const">= 27</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.IceBolt" class="abs"></a>IceBolt
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.RechargeItem" class="abs"></a>RechargeItem <i class="def-const">= 28</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.EnchantItem" class="abs"></a>EnchantItem
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.AcidBurst" class="abs"></a>AcidBurst
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.TownPortal" class="abs"></a>TownPortal <i class="def-const">= 31</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.IceBlast" class="abs"></a>IceBlast <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.LloydsBeacon" class="abs"></a>LloydsBeacon <i class="def-const">= 33</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Stun" class="abs"></a>Stun <i class="def-const">= 34</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.MagicArrow" class="abs"></a>MagicArrow <i class="def-const">= 35</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.ProtectionFromMagic" class="abs"></a>ProtectionFromMagic
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DeadlySwarm" class="abs"></a>DeadlySwarm <i class="def-const">= 37</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.StoneSkin" class="abs"></a>StoneSkin <i class="def-const">= 38</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Blades" class="abs"></a>Blades <i class="def-const">= 39</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.StoneToFlesh" class="abs"></a>StoneToFlesh <i class="def-const">= 40</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.RockBlast" class="abs"></a>RockBlast <i class="def-const">= 41</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.TurnToStone" class="abs"></a>TurnToStone <i class="def-const">= 42</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DeathBlossom" class="abs"></a>DeathBlossom <i class="def-const">= 43</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.MassDistortion" class="abs"></a>MassDistortion <i class="def-const">= 44</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.SpiritArrow" class="abs"></a>SpiritArrow <i class="def-const">= 45</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Bless" class="abs"></a>Bless <i class="def-const">= 46</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.HealingTouch" class="abs"></a>HealingTouch <i class="def-const">= 47</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.LuckyDay" class="abs"></a>LuckyDay <i class="def-const">= 48</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.RemoveCurse" class="abs"></a>RemoveCurse <i class="def-const">= 49</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.GuardianAngel" class="abs"></a>GuardianAngel <i class="def-const">= 50</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Heroism" class="abs"></a>Heroism <i class="def-const">= 51</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.TurnUndead" class="abs"></a>TurnUndead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.RaiseDead" class="abs"></a>RaiseDead <i class="def-const">= 53</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.SharedLife" class="abs"></a>SharedLife <i class="def-const">= 54</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Resurrection" class="abs"></a>Resurrection <i class="def-const">= 55</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Meditation" class="abs"></a>Meditation <i class="def-const">= 56</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.RemoveFear" class="abs"></a>RemoveFear
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.MindBlast" class="abs"></a>MindBlast
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Precision" class="abs"></a>Precision <i class="def-const">= 59</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.CureParalysis" class="abs"></a>CureParalysis
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Charm" class="abs"></a>Charm
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.MassFear" class="abs"></a>MassFear
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Feeblemind" class="abs"></a>Feeblemind <i class="def-const">= 63</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.CureInsanity" class="abs"></a>CureInsanity <i class="def-const">= 64</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.PsychicShock" class="abs"></a>PsychicShock <i class="def-const">= 65</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Telekinesis" class="abs"></a>Telekinesis
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.CureWeakness" class="abs"></a>CureWeakness <i class="def-const">= 67</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.FirstAid" class="abs"></a>FirstAid <i class="def-const">= 68</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.ProtectionFromPoison" class="abs"></a>ProtectionFromPoison <i class="def-const">= 69</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Harm" class="abs"></a>Harm <i class="def-const">= 70</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.CureWounds" class="abs"></a>CureWounds <i class="def-const">= 71</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.CurePoison" class="abs"></a>CurePoison <i class="def-const">= 72</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Speed" class="abs"></a>Speed <i class="def-const">= 73</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.CureDisease" class="abs"></a>CureDisease <i class="def-const">= 74</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Power" class="abs"></a>Power <i class="def-const">= 75</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.FlyingFist" class="abs"></a>FlyingFist <i class="def-const">= 76</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.PowerCure" class="abs"></a>PowerCure <i class="def-const">= 77</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.CreateFood" class="abs"></a>CreateFood <i class="def-const">= 78</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.GoldenTouch" class="abs"></a>GoldenTouch <i class="def-const">= 79</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DispelMagic" class="abs"></a>DispelMagic <i class="def-const">= 80</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Slow" class="abs"></a>Slow
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.EarthResistance" class="abs"></a>EarthResistance <i class="def-const">= 36</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DetectLife" class="abs"></a>DetectLife <i class="def-const">= 45</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Fate" class="abs"></a>Fate <i class="def-const">= 47</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Preservation" class="abs"></a>Preservation <i class="def-const">= 50</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.SpiritLash" class="abs"></a>SpiritLash <i class="def-const">= 52</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.MindResistance" class="abs"></a>MindResistance <i class="def-const">= 58</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Telepathy" class="abs"></a>Telepathy
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Berserk" class="abs"></a>Berserk <i class="def-const">= 62</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Enslave" class="abs"></a>Enslave <i class="def-const">= 66</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Heal" class="abs"></a>Heal <i class="def-const">= 68</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.BodyResistance" class="abs"></a>BodyResistance <i class="def-const">= 69</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Regeneration" class="abs"></a>Regeneration <i class="def-const">= 71</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Hammerhands" class="abs"></a>Hammerhands <i class="def-const">= 73</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.LightBolt" class="abs"></a>LightBolt <i class="def-const">= 78</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DestroyUndead" class="abs"></a>DestroyUndead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DayOfTheGods" class="abs"></a>DayOfTheGods <i class="def-const">= 83</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.PrismaticLight" class="abs"></a>PrismaticLight <i class="def-const">= 84</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.HourOfPower" class="abs"></a>HourOfPower
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Paralyze" class="abs"></a>Paralyze
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.SummonElemental" class="abs"></a>SummonElemental <i class="def-const">= 82</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.SummonWisp" class="abs"></a>SummonWisp <i class="def-const">= 82</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.SunRay" class="abs"></a>SunRay <i class="def-const">= 87</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DivineIntervention" class="abs"></a>DivineIntervention <i class="def-const">= 88</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Reanimate" class="abs"></a>Reanimate <i class="def-const">= 89</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.ToxicCloud" class="abs"></a>ToxicCloud <i class="def-const">= 90</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.MassCurse" class="abs"></a>MassCurse <i class="def-const">= 91</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Shrapmetal" class="abs"></a>Shrapmetal
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.ShrinkingRay" class="abs"></a>ShrinkingRay
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DayOfProtection" class="abs"></a>DayOfProtection
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Sunray" class="abs"></a>Sunray <i class="def-const">= 87</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.VampiricWeapon" class="abs"></a>VampiricWeapon <i class="def-const">= 91</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.ControlUndead" class="abs"></a>ControlUndead <i class="def-const">= 94</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.PainReflection" class="abs"></a>PainReflection <i class="def-const">= 95</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DarkGrasp" class="abs"></a>DarkGrasp <i class="def-const">= 96</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Sacrifice" class="abs"></a>Sacrifice <i class="def-const">= 96</i>
</td><td class="def-right">
<span class="def-ver">[MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.FingerOfDeath" class="abs"></a>FingerOfDeath <i class="def-const">= 95</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.MoonRay" class="abs"></a>MoonRay <i class="def-const">= 96</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DragonBreath" class="abs"></a>DragonBreath <i class="def-const">= 97</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Armageddon" class="abs"></a>Armageddon <i class="def-const">= 98</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Souldrinker" class="abs"></a>Souldrinker <i class="def-const">= 99</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DarkElfAbilities" class="abs"></a>DarkElfAbilities <i class="def-const">= 100</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Glamour" class="abs"></a>Glamour <i class="def-const">= 101</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.TravelersBoon" class="abs"></a>TravelersBoon <i class="def-const">= 102</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Blind" class="abs"></a>Blind <i class="def-const">= 103</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DarkfireBolt" class="abs"></a>DarkfireBolt <i class="def-const">= 104</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.VampireAbilities" class="abs"></a>VampireAbilities <i class="def-const">= 112</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Lifedrain" class="abs"></a>Lifedrain <i class="def-const">= 113</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Levitate" class="abs"></a>Levitate <i class="def-const">= 114</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Mistform" class="abs"></a>Mistform <i class="def-const">= 116</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DragonAbilities" class="abs"></a>DragonAbilities <i class="def-const">= 124</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Fear" class="abs"></a>Fear <i class="def-const">= 125</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.FlameBlast" class="abs"></a>FlameBlast <i class="def-const">= 126</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Flight" class="abs"></a>Flight <i class="def-const">= 127</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.WingBuffet" class="abs"></a>WingBuffet <i class="def-const">= 128</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.DarkContainment" class="abs"></a>DarkContainment <i class="def-const">= 99</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.Shoot" class="abs"></a>Shoot
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.ShootFire" class="abs"></a>ShootFire
</td><td class="def-right">
 unused
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.ShootBlaster" class="abs"></a>ShootBlaster
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.ShootCannonBall" class="abs"></a>ShootCannonBall <i class="def-const">= 136</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Spells.ShootDragon" class="abs"></a>ShootDragon <i class="def-const">= 137</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.SpriteBits"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.SpriteBits</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.SpriteBits.TriggerByTouch" class="abs"></a>TriggerByTouch <i class="def-const">= 1</i>
</td><td class="def-right">
 only for "Event Trigger" sprites &ndash; triggered when a player comes into <b class="def-param">TriggerRadius</b>
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.TriggerByMonster" class="abs"></a>TriggerByMonster <i class="def-const">= 2</i>
</td><td class="def-right">
 only for "Event Trigger" sprites &ndash; triggered when a monster comes into <b class="def-param">TriggerRadius</b>
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.TriggerByObject" class="abs"></a>TriggerByObject <i class="def-const">= 4</i>
</td><td class="def-right">
 only for "Event Trigger" sprites &ndash; triggered when an object gets into <b class="def-param">TriggerRadius</b>
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.ShowOnMap" class="abs"></a>ShowOnMap <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.IsChest" class="abs"></a>IsChest <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.Invisible" class="abs"></a>Invisible <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.IsObeliskChest" class="abs"></a>IsObeliskChest <i class="def-const">= 64</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.SpriteBits.IsShip" class="abs"></a>IsShip <i class="def-const">= 64</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="const.Stats"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>const.Stats</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="const.Stats.Might" class="abs"></a>Might <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Intellect" class="abs"></a>Intellect <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Personality" class="abs"></a>Personality <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Endurance" class="abs"></a>Endurance <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Accuracy" class="abs"></a>Accuracy <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Speed" class="abs"></a>Speed <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Luck" class="abs"></a>Luck <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.HP" class="abs"></a>HP <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.HitPoints" class="abs"></a>HitPoints <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.SP" class="abs"></a>SP <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.SpellPoints" class="abs"></a>SpellPoints <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.ArmorClass" class="abs"></a>ArmorClass <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.FireResistance" class="abs"></a>FireResistance <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.AirResistance" class="abs"></a>AirResistance <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.WaterResistance" class="abs"></a>WaterResistance <i class="def-const">= 12</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.EarthResistance" class="abs"></a>EarthResistance <i class="def-const">= 13</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MindResistance" class="abs"></a>MindResistance <i class="def-const">= 14</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.BodyResistance" class="abs"></a>BodyResistance <i class="def-const">= 15</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Alchemy" class="abs"></a>Alchemy <i class="def-const">= 16</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Stealing" class="abs"></a>Stealing <i class="def-const">= 17</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.DisarmTraps" class="abs"></a>DisarmTraps <i class="def-const">= 18</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.IdentifyItem" class="abs"></a>IdentifyItem <i class="def-const">= 19</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.IdentifyMonster" class="abs"></a>IdentifyMonster <i class="def-const">= 20</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Armsmaster" class="abs"></a>Armsmaster <i class="def-const">= 21</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Dodging" class="abs"></a>Dodging <i class="def-const">= 22</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Unarmed" class="abs"></a>Unarmed <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.ElecResistance" class="abs"></a>ElecResistance <i class="def-const">= 11</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.ColdResistance" class="abs"></a>ColdResistance <i class="def-const">= 12</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.PoisonResistance" class="abs"></a>PoisonResistance <i class="def-const">= 13</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Level" class="abs"></a>Level
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MeleeAttack" class="abs"></a>MeleeAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MeleeDamageBase" class="abs"></a>MeleeDamageBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MeleeDamageMin" class="abs"></a>MeleeDamageMin
</td><td class="def-right">
 For Stats screen. Only used in <a href="#events.CalcStatBonusByItems">CalcStatBonusByItems</a>, other events use MeleeDamageBase
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MeleeDamageMax" class="abs"></a>MeleeDamageMax
</td><td class="def-right">
 For Stats screen. Only used in <a href="#events.CalcStatBonusByItems">CalcStatBonusByItems</a>, other events use MeleeDamageBase
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.RangedAttack" class="abs"></a>RangedAttack
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.RangedDamageBase" class="abs"></a>RangedDamageBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.RangedDamageMin" class="abs"></a>RangedDamageMin
</td><td class="def-right">
 For Stats screen. Only used in <a href="#events.CalcStatBonusByItems">CalcStatBonusByItems</a>, other events use RangedDamageBase
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.RangedDamageMax" class="abs"></a>RangedDamageMax
</td><td class="def-right">
 For Stats screen. Only used in <a href="#events.CalcStatBonusByItems">CalcStatBonusByItems</a>, other events use RangedDamageBase
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.SpiritResistance" class="abs"></a>SpiritResistance <i class="def-const">= 33</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.FireMagic" class="abs"></a>FireMagic <i class="def-const">= 34</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.AirMagic" class="abs"></a>AirMagic <i class="def-const">= 35</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.WaterMagic" class="abs"></a>WaterMagic <i class="def-const">= 36</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.EarthMagic" class="abs"></a>EarthMagic <i class="def-const">= 37</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.SpiritMagic" class="abs"></a>SpiritMagic <i class="def-const">= 38</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MindMagic" class="abs"></a>MindMagic <i class="def-const">= 39</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.BodyMagic" class="abs"></a>BodyMagic <i class="def-const">= 40</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.LightMagic" class="abs"></a>LightMagic <i class="def-const">= 41</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.DarkMagic" class="abs"></a>DarkMagic <i class="def-const">= 42</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Meditation" class="abs"></a>Meditation <i class="def-const">= 43</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Bow" class="abs"></a>Bow <i class="def-const">= 44</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Shield" class="abs"></a>Shield <i class="def-const">= 45</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Learning" class="abs"></a>Learning <i class="def-const">= 46</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.DarkElf" class="abs"></a>DarkElf <i class="def-const">= 47</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Vampire" class="abs"></a>Vampire <i class="def-const">= 48</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.Dragon" class="abs"></a>Dragon <i class="def-const">= 49</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="const.Stats.MagicResistance" class="abs"></a>MagicResistance <i class="def-const">= 23</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

<br><a id="evt.Players"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>evt.Players</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="evt.Players.0" class="abs"></a>0 <i class="def-const">= 0</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.1" class="abs"></a>1 <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.2" class="abs"></a>2 <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.3" class="abs"></a>3 <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.4" class="abs"></a>4 <i class="def-const">= 4</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.Current" class="abs"></a>Current
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.current" class="abs"></a>current
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.All" class="abs"></a>All <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.all" class="abs"></a>all <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.Random" class="abs"></a>Random <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.Players.random" class="abs"></a>random <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr></tbody>
</table>
<br>

<br><a id="evt.VarNum"></a>
<table class="def-table">
<tbody>
<tr>
<td colspan="2" class="def-caption">
<h3>evt.VarNum</h3>
 
&nbsp;<i class="def-ib">Значения:</i><br>
</td>
</tr>
<tr>
<td class="def-left">
<a id="evt.VarNum.SexIs" class="abs"></a>SexIs <i class="def-const">= 1</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ClassIs" class="abs"></a>ClassIs <i class="def-const">= 2</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.HP" class="abs"></a>HP <i class="def-const">= 3</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.HasFullHP" class="abs"></a>HasFullHP <i class="def-const">= 4</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SP" class="abs"></a>SP <i class="def-const">= 5</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.HasFullSP" class="abs"></a>HasFullSP <i class="def-const">= 6</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AC" class="abs"></a>AC <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArmorClass" class="abs"></a>ArmorClass <i class="def-const">= 7</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ACBonus" class="abs"></a>ACBonus <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArmorClassBonus" class="abs"></a>ArmorClassBonus <i class="def-const">= 8</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseLevel" class="abs"></a>BaseLevel <i class="def-const">= 9</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.LevelBonus" class="abs"></a>LevelBonus <i class="def-const">= 10</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AgeBonus" class="abs"></a>AgeBonus <i class="def-const">= 11</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Awards" class="abs"></a>Awards <i class="def-const">= 12</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Exp" class="abs"></a>Exp <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Experience" class="abs"></a>Experience <i class="def-const">= 13</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.QBits" class="abs"></a>QBits <i class="def-const">= 16</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Inventory" class="abs"></a>Inventory <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Items" class="abs"></a>Items <i class="def-const">= 17</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.HourIs" class="abs"></a>HourIs <i class="def-const">= 18</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DayOfYearIs" class="abs"></a>DayOfYearIs <i class="def-const">= 19</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DayOfWeekIs" class="abs"></a>DayOfWeekIs <i class="def-const">= 20</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Gold" class="abs"></a>Gold <i class="def-const">= 21</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.GoldAddRandom" class="abs"></a>GoldAddRandom <i class="def-const">= 22</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Food" class="abs"></a>Food <i class="def-const">= 23</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.FoodAddRandom" class="abs"></a>FoodAddRandom <i class="def-const">= 24</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MightBonus" class="abs"></a>MightBonus <i class="def-const">= 25</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IntellectBonus" class="abs"></a>IntellectBonus <i class="def-const">= 26</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PersonalityBonus" class="abs"></a>PersonalityBonus <i class="def-const">= 27</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.EnduranceBonus" class="abs"></a>EnduranceBonus <i class="def-const">= 28</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpeedBonus" class="abs"></a>SpeedBonus <i class="def-const">= 29</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AccuracyBonus" class="abs"></a>AccuracyBonus <i class="def-const">= 30</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.LuckBonus" class="abs"></a>LuckBonus <i class="def-const">= 31</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseMight" class="abs"></a>BaseMight <i class="def-const">= 32</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseIntellect" class="abs"></a>BaseIntellect <i class="def-const">= 33</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BasePersonality" class="abs"></a>BasePersonality <i class="def-const">= 34</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseEndurance" class="abs"></a>BaseEndurance <i class="def-const">= 35</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseSpeed" class="abs"></a>BaseSpeed <i class="def-const">= 36</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseAccuracy" class="abs"></a>BaseAccuracy <i class="def-const">= 37</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseLuck" class="abs"></a>BaseLuck <i class="def-const">= 38</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentMight" class="abs"></a>CurrentMight <i class="def-const">= 39</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentIntellect" class="abs"></a>CurrentIntellect <i class="def-const">= 40</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentPersonality" class="abs"></a>CurrentPersonality <i class="def-const">= 41</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentEndurance" class="abs"></a>CurrentEndurance <i class="def-const">= 42</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentSpeed" class="abs"></a>CurrentSpeed <i class="def-const">= 43</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentAccuracy" class="abs"></a>CurrentAccuracy <i class="def-const">= 44</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentLuck" class="abs"></a>CurrentLuck <i class="def-const">= 45</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.FireResistance" class="abs"></a>FireResistance <i class="def-const">= 46</i>
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AirResistance" class="abs"></a>AirResistance <i class="def-const">= 47</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.WaterResistance" class="abs"></a>WaterResistance <i class="def-const">= 48</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.EarthResistance" class="abs"></a>EarthResistance <i class="def-const">= 49</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpiritResistance" class="abs"></a>SpiritResistance <i class="def-const">= 50</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MindResistance" class="abs"></a>MindResistance <i class="def-const">= 51</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BodyResistance" class="abs"></a>BodyResistance <i class="def-const">= 52</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.LightResistance" class="abs"></a>LightResistance <i class="def-const">= 53</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  unused resistance
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DarkResistance" class="abs"></a>DarkResistance <i class="def-const">= 54</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  unused resistance
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ElecResistance" class="abs"></a>ElecResistance <i class="def-const">= 47</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ColdResistance" class="abs"></a>ColdResistance <i class="def-const">= 48</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PoisonResistance" class="abs"></a>PoisonResistance <i class="def-const">= 49</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MagicResistance" class="abs"></a>MagicResistance
</td><td class="def-right">
 unused resistance
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.FireResBonus" class="abs"></a>FireResBonus
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AirResBonus" class="abs"></a>AirResBonus <i class="def-const">= 58</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.WaterResBonus" class="abs"></a>WaterResBonus <i class="def-const">= 59</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.EarthResBonus" class="abs"></a>EarthResBonus <i class="def-const">= 60</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpiritResBonus" class="abs"></a>SpiritResBonus <i class="def-const">= 61</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MindResBonus" class="abs"></a>MindResBonus <i class="def-const">= 62</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BodyResBonus" class="abs"></a>BodyResBonus <i class="def-const">= 63</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.LightResBonus" class="abs"></a>LightResBonus <i class="def-const">= 64</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  unused resistance
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DarkResBonus" class="abs"></a>DarkResBonus <i class="def-const">= 65</i>
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  unused resistance
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ElecResBonus" class="abs"></a>ElecResBonus <i class="def-const">= 52</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ColdResBonus" class="abs"></a>ColdResBonus <i class="def-const">= 53</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PoisonResBonus" class="abs"></a>PoisonResBonus <i class="def-const">= 54</i>
</td><td class="def-right">
<span class="def-ver">[MM6]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MagicResBonus" class="abs"></a>MagicResBonus
</td><td class="def-right">
 unused resistance
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.StaffSkill" class="abs"></a>StaffSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SwordSkill" class="abs"></a>SwordSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DaggerSkill" class="abs"></a>DaggerSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AxeSkill" class="abs"></a>AxeSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpearSkill" class="abs"></a>SpearSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BowSkill" class="abs"></a>BowSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MaceSkill" class="abs"></a>MaceSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BlasterSkill" class="abs"></a>BlasterSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ShieldSkill" class="abs"></a>ShieldSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.LeatherSkill" class="abs"></a>LeatherSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ChainSkill" class="abs"></a>ChainSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PlateSkill" class="abs"></a>PlateSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.FireSkill" class="abs"></a>FireSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AirSkill" class="abs"></a>AirSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.WaterSkill" class="abs"></a>WaterSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.EarthSkill" class="abs"></a>EarthSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpiritSkill" class="abs"></a>SpiritSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MindSkill" class="abs"></a>MindSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BodySkill" class="abs"></a>BodySkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.LightSkill" class="abs"></a>LightSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DarkSkill" class="abs"></a>DarkSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DarkElfAbilitySkill" class="abs"></a>DarkElfAbilitySkill <i class="def-const">= 89</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.VampireAbilitySkill" class="abs"></a>VampireAbilitySkill <i class="def-const">= 90</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DragonAbilitySkill" class="abs"></a>DragonAbilitySkill <i class="def-const">= 91</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IdentifyItemSkill" class="abs"></a>IdentifyItemSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MerchantSkill" class="abs"></a>MerchantSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.RepairSkill" class="abs"></a>RepairSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BodybuildingSkill" class="abs"></a>BodybuildingSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MeditationSkill" class="abs"></a>MeditationSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PerceptionSkill" class="abs"></a>PerceptionSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.RegenerationSkill" class="abs"></a>RegenerationSkill <i class="def-const">= 98</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DiplomacySkill" class="abs"></a>DiplomacySkill
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ThieverySkill" class="abs"></a>ThieverySkill
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DisarmTrapsSkill" class="abs"></a>DisarmTrapsSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DodgingSkill" class="abs"></a>DodgingSkill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.UnarmedSkill" class="abs"></a>UnarmedSkill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IdentifyMonsterSkill" class="abs"></a>IdentifyMonsterSkill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArmsmasterSkill" class="abs"></a>ArmsmasterSkill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.StealingSkill" class="abs"></a>StealingSkill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AlchemySkill" class="abs"></a>AlchemySkill
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.LearningSkill" class="abs"></a>LearningSkill
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Cursed" class="abs"></a>Cursed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Weak" class="abs"></a>Weak
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Asleep" class="abs"></a>Asleep
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Afraid" class="abs"></a>Afraid
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Drunk" class="abs"></a>Drunk
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Insane" class="abs"></a>Insane
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Poison1" class="abs"></a>Poison1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PoisonedGreen" class="abs"></a>PoisonedGreen
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Disease1" class="abs"></a>Disease1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DiseasedGreen" class="abs"></a>DiseasedGreen
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Poison2" class="abs"></a>Poison2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PoisonedYellow" class="abs"></a>PoisonedYellow
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Disease2" class="abs"></a>Disease2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DiseasedYellow" class="abs"></a>DiseasedYellow
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Poison3" class="abs"></a>Poison3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PoisonedRed" class="abs"></a>PoisonedRed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Disease3" class="abs"></a>Disease3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DiseasedRed" class="abs"></a>DiseasedRed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Paralysed" class="abs"></a>Paralysed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Paralyzed" class="abs"></a>Paralyzed
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Unconscious" class="abs"></a>Unconscious
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Dead" class="abs"></a>Dead
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Stoned" class="abs"></a>Stoned
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Eradicated" class="abs"></a>Eradicated
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MainCondition" class="abs"></a>MainCondition
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar0" class="abs"></a>MapVar0
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar1" class="abs"></a>MapVar1
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar2" class="abs"></a>MapVar2
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar3" class="abs"></a>MapVar3
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar4" class="abs"></a>MapVar4
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar5" class="abs"></a>MapVar5
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar6" class="abs"></a>MapVar6
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar7" class="abs"></a>MapVar7
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar8" class="abs"></a>MapVar8
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar9" class="abs"></a>MapVar9
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar10" class="abs"></a>MapVar10
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar11" class="abs"></a>MapVar11
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar12" class="abs"></a>MapVar12
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar13" class="abs"></a>MapVar13
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar14" class="abs"></a>MapVar14
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar15" class="abs"></a>MapVar15
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar16" class="abs"></a>MapVar16
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar17" class="abs"></a>MapVar17
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar18" class="abs"></a>MapVar18
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar19" class="abs"></a>MapVar19
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar20" class="abs"></a>MapVar20
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar21" class="abs"></a>MapVar21
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar22" class="abs"></a>MapVar22
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar23" class="abs"></a>MapVar23
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar24" class="abs"></a>MapVar24
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar25" class="abs"></a>MapVar25
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar26" class="abs"></a>MapVar26
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar27" class="abs"></a>MapVar27
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar28" class="abs"></a>MapVar28
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar29" class="abs"></a>MapVar29
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar30" class="abs"></a>MapVar30
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar31" class="abs"></a>MapVar31
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar32" class="abs"></a>MapVar32
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar33" class="abs"></a>MapVar33
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar34" class="abs"></a>MapVar34
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar35" class="abs"></a>MapVar35
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar36" class="abs"></a>MapVar36
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar37" class="abs"></a>MapVar37
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar38" class="abs"></a>MapVar38
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar39" class="abs"></a>MapVar39
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar40" class="abs"></a>MapVar40
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar41" class="abs"></a>MapVar41
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar42" class="abs"></a>MapVar42
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar43" class="abs"></a>MapVar43
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar44" class="abs"></a>MapVar44
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar45" class="abs"></a>MapVar45
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar46" class="abs"></a>MapVar46
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar47" class="abs"></a>MapVar47
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar48" class="abs"></a>MapVar48
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar49" class="abs"></a>MapVar49
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar50" class="abs"></a>MapVar50
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar51" class="abs"></a>MapVar51
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar52" class="abs"></a>MapVar52
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar53" class="abs"></a>MapVar53
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar54" class="abs"></a>MapVar54
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar55" class="abs"></a>MapVar55
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar56" class="abs"></a>MapVar56
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar57" class="abs"></a>MapVar57
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar58" class="abs"></a>MapVar58
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar59" class="abs"></a>MapVar59
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar60" class="abs"></a>MapVar60
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar61" class="abs"></a>MapVar61
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar62" class="abs"></a>MapVar62
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar63" class="abs"></a>MapVar63
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar64" class="abs"></a>MapVar64
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar65" class="abs"></a>MapVar65
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar66" class="abs"></a>MapVar66
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar67" class="abs"></a>MapVar67
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar68" class="abs"></a>MapVar68
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar69" class="abs"></a>MapVar69
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar70" class="abs"></a>MapVar70
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar71" class="abs"></a>MapVar71
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar72" class="abs"></a>MapVar72
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar73" class="abs"></a>MapVar73
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar74" class="abs"></a>MapVar74
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar75" class="abs"></a>MapVar75
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar76" class="abs"></a>MapVar76
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar77" class="abs"></a>MapVar77
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar78" class="abs"></a>MapVar78
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar79" class="abs"></a>MapVar79
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar80" class="abs"></a>MapVar80
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar81" class="abs"></a>MapVar81
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar82" class="abs"></a>MapVar82
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar83" class="abs"></a>MapVar83
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar84" class="abs"></a>MapVar84
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar85" class="abs"></a>MapVar85
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar86" class="abs"></a>MapVar86
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar87" class="abs"></a>MapVar87
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar88" class="abs"></a>MapVar88
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar89" class="abs"></a>MapVar89
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar90" class="abs"></a>MapVar90
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar91" class="abs"></a>MapVar91
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar92" class="abs"></a>MapVar92
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar93" class="abs"></a>MapVar93
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar94" class="abs"></a>MapVar94
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar95" class="abs"></a>MapVar95
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar96" class="abs"></a>MapVar96
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar97" class="abs"></a>MapVar97
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar98" class="abs"></a>MapVar98
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVar99" class="abs"></a>MapVar99
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.AutonotesBits" class="abs"></a>AutonotesBits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsMightMoreThanBase" class="abs"></a>IsMightMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsIntellectMoreThanBase" class="abs"></a>IsIntellectMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsPersonalityMoreThanBase" class="abs"></a>IsPersonalityMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsEnduranceMoreThanBase" class="abs"></a>IsEnduranceMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsSpeedMoreThanBase" class="abs"></a>IsSpeedMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsAccuracyMoreThanBase" class="abs"></a>IsAccuracyMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsLuckMoreThanBase" class="abs"></a>IsLuckMoreThanBase
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PlayerBits" class="abs"></a>PlayerBits
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.NPCs" class="abs"></a>NPCs
</td><td class="def-right">
<span class="def-ver">[MM6, MM7]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ReputationIs" class="abs"></a>ReputationIs
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DaysCounter1" class="abs"></a>DaysCounter1
</td><td class="def-right">
 <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the difference of dates
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DaysCounter2" class="abs"></a>DaysCounter2
</td><td class="def-right">
 <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the difference of dates
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DaysCounter3" class="abs"></a>DaysCounter3
</td><td class="def-right">
 <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the difference of dates
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DaysCounter4" class="abs"></a>DaysCounter4
</td><td class="def-right">
 <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the difference of dates
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DaysCounter5" class="abs"></a>DaysCounter5
</td><td class="def-right">
 <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the difference of dates
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DaysCounter6" class="abs"></a>DaysCounter6
</td><td class="def-right">
 <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the difference of dates
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Flying" class="abs"></a>Flying
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.HasNPCProfession" class="abs"></a>HasNPCProfession
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.TotalCircusPrize" class="abs"></a>TotalCircusPrize
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SkillPoints" class="abs"></a>SkillPoints
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MonthIs" class="abs"></a>MonthIs
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter1" class="abs"></a>Counter1
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the exact time spent in hours
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter2" class="abs"></a>Counter2
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the exact time spent in hours
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter3" class="abs"></a>Counter3
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the exact time spent in hours
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter4" class="abs"></a>Counter4
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the exact time spent in hours
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter5" class="abs"></a>Counter5
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the exact time spent in hours
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter6" class="abs"></a>Counter6
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the exact time spent in hours
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter7" class="abs"></a>Counter7
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the exact time spent in hours
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter8" class="abs"></a>Counter8
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the exact time spent in hours
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter9" class="abs"></a>Counter9
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the exact time spent in hours
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counter10" class="abs"></a>Counter10
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> starts the count, <a href="#evt.Cmp">evt.Cmp</a> compares the exact time spent in hours
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate1" class="abs"></a>SpecialDate1
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %51
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate2" class="abs"></a>SpecialDate2
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %52
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate3" class="abs"></a>SpecialDate3
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %53
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate4" class="abs"></a>SpecialDate4
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %54
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate5" class="abs"></a>SpecialDate5
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %55
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate6" class="abs"></a>SpecialDate6
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %56
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate7" class="abs"></a>SpecialDate7
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %57
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate8" class="abs"></a>SpecialDate8
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %58
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate9" class="abs"></a>SpecialDate9
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %59
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate10" class="abs"></a>SpecialDate10
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %60
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate11" class="abs"></a>SpecialDate11
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %61
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate12" class="abs"></a>SpecialDate12
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %62
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate13" class="abs"></a>SpecialDate13
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %63
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate14" class="abs"></a>SpecialDate14
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %64
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate15" class="abs"></a>SpecialDate15
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %65
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate16" class="abs"></a>SpecialDate16
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %66
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate17" class="abs"></a>SpecialDate17
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %67
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate18" class="abs"></a>SpecialDate18
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %68
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate19" class="abs"></a>SpecialDate19
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %69
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDate20" class="abs"></a>SpecialDate20
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  <a href="#evt.Set">evt.Set</a> remembers current time and plays sound. The date can be used in messages as %70
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Reputation" class="abs"></a>Reputation
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History1" class="abs"></a>History1
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History2" class="abs"></a>History2
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History3" class="abs"></a>History3
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History4" class="abs"></a>History4
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History5" class="abs"></a>History5
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History6" class="abs"></a>History6
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History7" class="abs"></a>History7
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History8" class="abs"></a>History8
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History9" class="abs"></a>History9
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History10" class="abs"></a>History10
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History11" class="abs"></a>History11
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History12" class="abs"></a>History12
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History13" class="abs"></a>History13
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History14" class="abs"></a>History14
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History15" class="abs"></a>History15
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History16" class="abs"></a>History16
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History17" class="abs"></a>History17
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History18" class="abs"></a>History18
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History19" class="abs"></a>History19
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History20" class="abs"></a>History20
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History21" class="abs"></a>History21
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History22" class="abs"></a>History22
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History23" class="abs"></a>History23
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History24" class="abs"></a>History24
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History25" class="abs"></a>History25
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History26" class="abs"></a>History26
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History27" class="abs"></a>History27
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History28" class="abs"></a>History28
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History29" class="abs"></a>History29
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapAlert" class="abs"></a>MapAlert
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BankGold" class="abs"></a>BankGold
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Deaths" class="abs"></a>Deaths
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MontersHunted" class="abs"></a>MontersHunted
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.PrisonTerms" class="abs"></a>PrisonTerms
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArenaWinsPage" class="abs"></a>ArenaWinsPage
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArenaWinsSquire" class="abs"></a>ArenaWinsSquire
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArenaWinsKnight" class="abs"></a>ArenaWinsKnight
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ArenaWinsLord" class="abs"></a>ArenaWinsLord
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Invisible" class="abs"></a>Invisible
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.IsWearingItem" class="abs"></a>IsWearingItem
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Players" class="abs"></a>Players <i class="def-const">= 318</i>
</td><td class="def-right">
<span class="def-ver">[MM8]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.BaseStats" class="abs"></a>BaseStats[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Conditions" class="abs"></a>Conditions[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Counters" class="abs"></a>Counters[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.CurrentStats" class="abs"></a>CurrentStats[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.DaysCounters" class="abs"></a>DaysCounters[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.History" class="abs"></a>History[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.MapVars" class="abs"></a>MapVars[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.ResBonus" class="abs"></a>ResBonus[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Resistance" class="abs"></a>Resistance[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.Skills" class="abs"></a>Skills[]
</td><td class="def-right">
 
</td>
</tr><tr>
<td class="def-left">
<a id="evt.VarNum.SpecialDates" class="abs"></a>SpecialDates[]
</td><td class="def-right">
<span class="def-ver">[MM7+]</span><span class="def-nbsp"> </span>  
</td>
</tr></tbody>
</table>
<br>

		</div>
	</div>
</body>
</html>